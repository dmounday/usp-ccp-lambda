// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: usp-msg-1-1.proto

#include "usp-msg-1-1.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Add_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Add_CreateObject_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Add_CreateParamSetting_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddResp_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddResp_CreatedObjectResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AddResp_CreatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Body_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Delete_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteResp_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteResp_DeletedObjectResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DeleteResp_DeletedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteResp_UnaffectedPathError_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Error_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Error_ParamError_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Get_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetInstances_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetInstancesResp_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetInstancesResp_CurrInstance_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetInstancesResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResp_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResp_ResolvedPathResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedDM_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSupportedDMResp_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSupportedDMResp_RequestedObjectResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedDMResp_SupportedCommandResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedDMResp_SupportedEventResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GetSupportedDMResp_SupportedObjectResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedDMResp_SupportedParamResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedProtocol_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedProtocolResp_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Header_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_Notify_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Notify_Event_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_Event_ParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Notify_ObjectCreation_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_ObjectCreation_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_ObjectDeletion_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_OnBoardRequest_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Notify_OperationComplete_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_OperationComplete_CommandFailure_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Notify_OperationComplete_OutputArgs_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_ValueChange_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NotifyResp_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Operate_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Operate_InputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OperateResp_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_OperateResp_OperationResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OperateResp_OperationResult_CommandFailure_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OperateResp_OperationResult_OutputArgs_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<9> scc_info_Request_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<9> scc_info_Response_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Set_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Set_UpdateObject_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Set_UpdateParamSetting_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResp_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResp_UpdatedInstanceFailure_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SetResp_UpdatedInstanceResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResp_UpdatedObjectResult_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SetResp_UpdatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_usp_2dmsg_2d1_2d1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto;
namespace usp {
class MsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Msg> _instance;
} _Msg_default_instance_;
class HeaderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Header> _instance;
} _Header_default_instance_;
class BodyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Body> _instance;
  const ::usp::Request* request_;
  const ::usp::Response* response_;
  const ::usp::Error* error_;
} _Body_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Request> _instance;
  const ::usp::Get* get_;
  const ::usp::GetSupportedDM* get_supported_dm_;
  const ::usp::GetInstances* get_instances_;
  const ::usp::Set* set_;
  const ::usp::Add* add_;
  const ::usp::Delete* delete__;
  const ::usp::Operate* operate_;
  const ::usp::Notify* notify_;
  const ::usp::GetSupportedProtocol* get_supported_protocol_;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Response> _instance;
  const ::usp::GetResp* get_resp_;
  const ::usp::GetSupportedDMResp* get_supported_dm_resp_;
  const ::usp::GetInstancesResp* get_instances_resp_;
  const ::usp::SetResp* set_resp_;
  const ::usp::AddResp* add_resp_;
  const ::usp::DeleteResp* delete_resp_;
  const ::usp::OperateResp* operate_resp_;
  const ::usp::NotifyResp* notify_resp_;
  const ::usp::GetSupportedProtocolResp* get_supported_protocol_resp_;
} _Response_default_instance_;
class Error_ParamErrorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Error_ParamError> _instance;
} _Error_ParamError_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Error> _instance;
} _Error_default_instance_;
class GetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Get> _instance;
} _Get_default_instance_;
class GetResp_RequestedPathResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResp_RequestedPathResult> _instance;
} _GetResp_RequestedPathResult_default_instance_;
class GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse> _instance;
} _GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse_default_instance_;
class GetResp_ResolvedPathResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResp_ResolvedPathResult> _instance;
} _GetResp_ResolvedPathResult_default_instance_;
class GetRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResp> _instance;
} _GetResp_default_instance_;
class GetSupportedDMDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSupportedDM> _instance;
} _GetSupportedDM_default_instance_;
class GetSupportedDMResp_RequestedObjectResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSupportedDMResp_RequestedObjectResult> _instance;
} _GetSupportedDMResp_RequestedObjectResult_default_instance_;
class GetSupportedDMResp_SupportedObjectResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSupportedDMResp_SupportedObjectResult> _instance;
} _GetSupportedDMResp_SupportedObjectResult_default_instance_;
class GetSupportedDMResp_SupportedParamResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSupportedDMResp_SupportedParamResult> _instance;
} _GetSupportedDMResp_SupportedParamResult_default_instance_;
class GetSupportedDMResp_SupportedCommandResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSupportedDMResp_SupportedCommandResult> _instance;
} _GetSupportedDMResp_SupportedCommandResult_default_instance_;
class GetSupportedDMResp_SupportedEventResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSupportedDMResp_SupportedEventResult> _instance;
} _GetSupportedDMResp_SupportedEventResult_default_instance_;
class GetSupportedDMRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSupportedDMResp> _instance;
} _GetSupportedDMResp_default_instance_;
class GetInstancesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetInstances> _instance;
} _GetInstances_default_instance_;
class GetInstancesResp_RequestedPathResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetInstancesResp_RequestedPathResult> _instance;
} _GetInstancesResp_RequestedPathResult_default_instance_;
class GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse> _instance;
} _GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse_default_instance_;
class GetInstancesResp_CurrInstanceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetInstancesResp_CurrInstance> _instance;
} _GetInstancesResp_CurrInstance_default_instance_;
class GetInstancesRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetInstancesResp> _instance;
} _GetInstancesResp_default_instance_;
class GetSupportedProtocolDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSupportedProtocol> _instance;
} _GetSupportedProtocol_default_instance_;
class GetSupportedProtocolRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSupportedProtocolResp> _instance;
} _GetSupportedProtocolResp_default_instance_;
class Add_CreateObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Add_CreateObject> _instance;
} _Add_CreateObject_default_instance_;
class Add_CreateParamSettingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Add_CreateParamSetting> _instance;
} _Add_CreateParamSetting_default_instance_;
class AddDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Add> _instance;
} _Add_default_instance_;
class AddResp_CreatedObjectResult_OperationStatus_OperationFailureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddResp_CreatedObjectResult_OperationStatus_OperationFailure> _instance;
} _AddResp_CreatedObjectResult_OperationStatus_OperationFailure_default_instance_;
class AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse> _instance;
} _AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse_default_instance_;
class AddResp_CreatedObjectResult_OperationStatus_OperationSuccessDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddResp_CreatedObjectResult_OperationStatus_OperationSuccess> _instance;
} _AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_default_instance_;
class AddResp_CreatedObjectResult_OperationStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddResp_CreatedObjectResult_OperationStatus> _instance;
  const ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure* oper_failure_;
  const ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess* oper_success_;
} _AddResp_CreatedObjectResult_OperationStatus_default_instance_;
class AddResp_CreatedObjectResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddResp_CreatedObjectResult> _instance;
} _AddResp_CreatedObjectResult_default_instance_;
class AddResp_ParameterErrorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddResp_ParameterError> _instance;
} _AddResp_ParameterError_default_instance_;
class AddRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddResp> _instance;
} _AddResp_default_instance_;
class DeleteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Delete> _instance;
} _Delete_default_instance_;
class DeleteResp_DeletedObjectResult_OperationStatus_OperationFailureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure> _instance;
} _DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_default_instance_;
class DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccessDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess> _instance;
} _DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_default_instance_;
class DeleteResp_DeletedObjectResult_OperationStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResp_DeletedObjectResult_OperationStatus> _instance;
  const ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure* oper_failure_;
  const ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess* oper_success_;
} _DeleteResp_DeletedObjectResult_OperationStatus_default_instance_;
class DeleteResp_DeletedObjectResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResp_DeletedObjectResult> _instance;
} _DeleteResp_DeletedObjectResult_default_instance_;
class DeleteResp_UnaffectedPathErrorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResp_UnaffectedPathError> _instance;
} _DeleteResp_UnaffectedPathError_default_instance_;
class DeleteRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteResp> _instance;
} _DeleteResp_default_instance_;
class Set_UpdateObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Set_UpdateObject> _instance;
} _Set_UpdateObject_default_instance_;
class Set_UpdateParamSettingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Set_UpdateParamSetting> _instance;
} _Set_UpdateParamSetting_default_instance_;
class SetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Set> _instance;
} _Set_default_instance_;
class SetResp_UpdatedObjectResult_OperationStatus_OperationFailureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResp_UpdatedObjectResult_OperationStatus_OperationFailure> _instance;
} _SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_default_instance_;
class SetResp_UpdatedObjectResult_OperationStatus_OperationSuccessDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess> _instance;
} _SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_default_instance_;
class SetResp_UpdatedObjectResult_OperationStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResp_UpdatedObjectResult_OperationStatus> _instance;
  const ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure* oper_failure_;
  const ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess* oper_success_;
} _SetResp_UpdatedObjectResult_OperationStatus_default_instance_;
class SetResp_UpdatedObjectResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResp_UpdatedObjectResult> _instance;
} _SetResp_UpdatedObjectResult_default_instance_;
class SetResp_UpdatedInstanceFailureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResp_UpdatedInstanceFailure> _instance;
} _SetResp_UpdatedInstanceFailure_default_instance_;
class SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse> _instance;
} _SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse_default_instance_;
class SetResp_UpdatedInstanceResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResp_UpdatedInstanceResult> _instance;
} _SetResp_UpdatedInstanceResult_default_instance_;
class SetResp_ParameterErrorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResp_ParameterError> _instance;
} _SetResp_ParameterError_default_instance_;
class SetRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetResp> _instance;
} _SetResp_default_instance_;
class Operate_InputArgsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Operate_InputArgsEntry_DoNotUse> _instance;
} _Operate_InputArgsEntry_DoNotUse_default_instance_;
class OperateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Operate> _instance;
} _Operate_default_instance_;
class OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse> _instance;
} _OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse_default_instance_;
class OperateResp_OperationResult_OutputArgsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperateResp_OperationResult_OutputArgs> _instance;
} _OperateResp_OperationResult_OutputArgs_default_instance_;
class OperateResp_OperationResult_CommandFailureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperateResp_OperationResult_CommandFailure> _instance;
} _OperateResp_OperationResult_CommandFailure_default_instance_;
class OperateResp_OperationResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperateResp_OperationResult> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr req_obj_path_;
  const ::usp::OperateResp_OperationResult_OutputArgs* req_output_args_;
  const ::usp::OperateResp_OperationResult_CommandFailure* cmd_failure_;
} _OperateResp_OperationResult_default_instance_;
class OperateRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperateResp> _instance;
} _OperateResp_default_instance_;
class Notify_Event_ParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_Event_ParamsEntry_DoNotUse> _instance;
} _Notify_Event_ParamsEntry_DoNotUse_default_instance_;
class Notify_EventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_Event> _instance;
} _Notify_Event_default_instance_;
class Notify_ValueChangeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_ValueChange> _instance;
} _Notify_ValueChange_default_instance_;
class Notify_ObjectCreation_UniqueKeysEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_ObjectCreation_UniqueKeysEntry_DoNotUse> _instance;
} _Notify_ObjectCreation_UniqueKeysEntry_DoNotUse_default_instance_;
class Notify_ObjectCreationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_ObjectCreation> _instance;
} _Notify_ObjectCreation_default_instance_;
class Notify_ObjectDeletionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_ObjectDeletion> _instance;
} _Notify_ObjectDeletion_default_instance_;
class Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse> _instance;
} _Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse_default_instance_;
class Notify_OperationComplete_OutputArgsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_OperationComplete_OutputArgs> _instance;
} _Notify_OperationComplete_OutputArgs_default_instance_;
class Notify_OperationComplete_CommandFailureDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_OperationComplete_CommandFailure> _instance;
} _Notify_OperationComplete_CommandFailure_default_instance_;
class Notify_OperationCompleteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_OperationComplete> _instance;
  const ::usp::Notify_OperationComplete_OutputArgs* req_output_args_;
  const ::usp::Notify_OperationComplete_CommandFailure* cmd_failure_;
} _Notify_OperationComplete_default_instance_;
class Notify_OnBoardRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify_OnBoardRequest> _instance;
} _Notify_OnBoardRequest_default_instance_;
class NotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Notify> _instance;
  const ::usp::Notify_Event* event_;
  const ::usp::Notify_ValueChange* value_change_;
  const ::usp::Notify_ObjectCreation* obj_creation_;
  const ::usp::Notify_ObjectDeletion* obj_deletion_;
  const ::usp::Notify_OperationComplete* oper_complete_;
  const ::usp::Notify_OnBoardRequest* on_board_req_;
} _Notify_default_instance_;
class NotifyRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotifyResp> _instance;
} _NotifyResp_default_instance_;
}  // namespace usp
static void InitDefaultsscc_info_Add_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Add_default_instance_;
    new (ptr) ::usp::Add();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Add::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Add_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Add_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Add_CreateObject_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Add_CreateObject_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Add_CreateObject_default_instance_;
    new (ptr) ::usp::Add_CreateObject();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Add_CreateObject::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Add_CreateObject_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Add_CreateObject_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Add_CreateParamSetting_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Add_CreateParamSetting_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Add_CreateParamSetting_default_instance_;
    new (ptr) ::usp::Add_CreateParamSetting();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Add_CreateParamSetting::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Add_CreateParamSetting_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Add_CreateParamSetting_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_AddResp_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_AddResp_default_instance_;
    new (ptr) ::usp::AddResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::AddResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddResp_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddResp_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_AddResp_CreatedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_AddResp_CreatedObjectResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_AddResp_CreatedObjectResult_default_instance_;
    new (ptr) ::usp::AddResp_CreatedObjectResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::AddResp_CreatedObjectResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddResp_CreatedObjectResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddResp_CreatedObjectResult_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_AddResp_CreatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_AddResp_CreatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_AddResp_CreatedObjectResult_OperationStatus_default_instance_;
    new (ptr) ::usp::AddResp_CreatedObjectResult_OperationStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::AddResp_CreatedObjectResult_OperationStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AddResp_CreatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_AddResp_CreatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_AddResp_CreatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_AddResp_CreatedObjectResult_OperationStatus_OperationFailure_default_instance_;
    new (ptr) ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddResp_CreatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_default_instance_;
    new (ptr) ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_AddResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse_default_instance_;
    new (ptr) ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse();
  }
  ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_AddResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_AddResp_ParameterError_default_instance_;
    new (ptr) ::usp::AddResp_ParameterError();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::AddResp_ParameterError::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Body_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Body_default_instance_;
    new (ptr) ::usp::Body();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Body::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Body_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Body_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Request_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Response_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Error_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Delete_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Delete_default_instance_;
    new (ptr) ::usp::Delete();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Delete::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Delete_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Delete_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_DeleteResp_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_DeleteResp_default_instance_;
    new (ptr) ::usp::DeleteResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::DeleteResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteResp_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteResp_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_DeleteResp_DeletedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_DeleteResp_DeletedObjectResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_DeleteResp_DeletedObjectResult_default_instance_;
    new (ptr) ::usp::DeleteResp_DeletedObjectResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::DeleteResp_DeletedObjectResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteResp_DeletedObjectResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteResp_DeletedObjectResult_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_DeleteResp_DeletedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_DeleteResp_DeletedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_DeleteResp_DeletedObjectResult_OperationStatus_default_instance_;
    new (ptr) ::usp::DeleteResp_DeletedObjectResult_OperationStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::DeleteResp_DeletedObjectResult_OperationStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DeleteResp_DeletedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DeleteResp_DeletedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_default_instance_;
    new (ptr) ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_default_instance_;
    new (ptr) ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_DeleteResp_UnaffectedPathError_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_DeleteResp_UnaffectedPathError_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_DeleteResp_UnaffectedPathError_default_instance_;
    new (ptr) ::usp::DeleteResp_UnaffectedPathError();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::DeleteResp_UnaffectedPathError::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteResp_UnaffectedPathError_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteResp_UnaffectedPathError_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Error_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Error_default_instance_;
    new (ptr) ::usp::Error();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Error::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Error_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Error_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Error_ParamError_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Error_ParamError_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Error_ParamError_default_instance_;
    new (ptr) ::usp::Error_ParamError();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Error_ParamError::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Error_ParamError_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Error_ParamError_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Get_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Get_default_instance_;
    new (ptr) ::usp::Get();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Get::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Get_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Get_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_GetInstances_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetInstances_default_instance_;
    new (ptr) ::usp::GetInstances();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetInstances::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetInstances_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetInstances_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_GetInstancesResp_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetInstancesResp_default_instance_;
    new (ptr) ::usp::GetInstancesResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetInstancesResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetInstancesResp_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetInstancesResp_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_GetInstancesResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_GetInstancesResp_CurrInstance_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetInstancesResp_CurrInstance_default_instance_;
    new (ptr) ::usp::GetInstancesResp_CurrInstance();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetInstancesResp_CurrInstance::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetInstancesResp_CurrInstance_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetInstancesResp_CurrInstance_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse_default_instance_;
    new (ptr) ::usp::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse();
  }
  ::usp::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_GetInstancesResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetInstancesResp_RequestedPathResult_default_instance_;
    new (ptr) ::usp::GetInstancesResp_RequestedPathResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetInstancesResp_RequestedPathResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetInstancesResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetInstancesResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_GetInstancesResp_CurrInstance_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_GetResp_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetResp_default_instance_;
    new (ptr) ::usp::GetResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResp_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetResp_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_GetResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_GetResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetResp_RequestedPathResult_default_instance_;
    new (ptr) ::usp::GetResp_RequestedPathResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetResp_RequestedPathResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_GetResp_ResolvedPathResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_GetResp_ResolvedPathResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetResp_ResolvedPathResult_default_instance_;
    new (ptr) ::usp::GetResp_ResolvedPathResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetResp_ResolvedPathResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResp_ResolvedPathResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetResp_ResolvedPathResult_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::usp::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse();
  }
  ::usp::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_GetSupportedDM_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetSupportedDM_default_instance_;
    new (ptr) ::usp::GetSupportedDM();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetSupportedDM::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedDM_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSupportedDM_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_GetSupportedDMResp_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetSupportedDMResp_default_instance_;
    new (ptr) ::usp::GetSupportedDMResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetSupportedDMResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSupportedDMResp_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSupportedDMResp_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_GetSupportedDMResp_RequestedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_GetSupportedDMResp_RequestedObjectResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetSupportedDMResp_RequestedObjectResult_default_instance_;
    new (ptr) ::usp::GetSupportedDMResp_RequestedObjectResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetSupportedDMResp_RequestedObjectResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSupportedDMResp_RequestedObjectResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSupportedDMResp_RequestedObjectResult_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_GetSupportedDMResp_SupportedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_GetSupportedDMResp_SupportedCommandResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetSupportedDMResp_SupportedCommandResult_default_instance_;
    new (ptr) ::usp::GetSupportedDMResp_SupportedCommandResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetSupportedDMResp_SupportedCommandResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedDMResp_SupportedCommandResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSupportedDMResp_SupportedCommandResult_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_GetSupportedDMResp_SupportedEventResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetSupportedDMResp_SupportedEventResult_default_instance_;
    new (ptr) ::usp::GetSupportedDMResp_SupportedEventResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetSupportedDMResp_SupportedEventResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedDMResp_SupportedEventResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSupportedDMResp_SupportedEventResult_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_GetSupportedDMResp_SupportedObjectResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetSupportedDMResp_SupportedObjectResult_default_instance_;
    new (ptr) ::usp::GetSupportedDMResp_SupportedObjectResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetSupportedDMResp_SupportedObjectResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GetSupportedDMResp_SupportedObjectResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_GetSupportedDMResp_SupportedObjectResult_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_GetSupportedDMResp_SupportedCommandResult_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_GetSupportedDMResp_SupportedEventResult_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_GetSupportedDMResp_SupportedParamResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_GetSupportedDMResp_SupportedParamResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetSupportedDMResp_SupportedParamResult_default_instance_;
    new (ptr) ::usp::GetSupportedDMResp_SupportedParamResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetSupportedDMResp_SupportedParamResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedDMResp_SupportedParamResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSupportedDMResp_SupportedParamResult_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_GetSupportedProtocol_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetSupportedProtocol_default_instance_;
    new (ptr) ::usp::GetSupportedProtocol();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetSupportedProtocol::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedProtocol_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSupportedProtocol_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_GetSupportedProtocolResp_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_GetSupportedProtocolResp_default_instance_;
    new (ptr) ::usp::GetSupportedProtocolResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::GetSupportedProtocolResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSupportedProtocolResp_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSupportedProtocolResp_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Header_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Header_default_instance_;
    new (ptr) ::usp::Header();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Header::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Header_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Header_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Msg_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Msg_default_instance_;
    new (ptr) ::usp::Msg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Msg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Msg_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Msg_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Header_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Body_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Notify_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_default_instance_;
    new (ptr) ::usp::Notify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Notify::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_Notify_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_Notify_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Notify_Event_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Notify_ValueChange_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Notify_ObjectCreation_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Notify_ObjectDeletion_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Notify_OperationComplete_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Notify_OnBoardRequest_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Notify_Event_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_Event_default_instance_;
    new (ptr) ::usp::Notify_Event();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Notify_Event::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Notify_Event_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Notify_Event_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Notify_Event_ParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Notify_Event_ParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_Event_ParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::usp::Notify_Event_ParamsEntry_DoNotUse();
  }
  ::usp::Notify_Event_ParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_Event_ParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Notify_Event_ParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Notify_ObjectCreation_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_ObjectCreation_default_instance_;
    new (ptr) ::usp::Notify_ObjectCreation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Notify_ObjectCreation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Notify_ObjectCreation_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Notify_ObjectCreation_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Notify_ObjectCreation_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Notify_ObjectCreation_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_ObjectCreation_UniqueKeysEntry_DoNotUse_default_instance_;
    new (ptr) ::usp::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse();
  }
  ::usp::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_ObjectCreation_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Notify_ObjectCreation_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Notify_ObjectDeletion_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_ObjectDeletion_default_instance_;
    new (ptr) ::usp::Notify_ObjectDeletion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Notify_ObjectDeletion::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_ObjectDeletion_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Notify_ObjectDeletion_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Notify_OnBoardRequest_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_OnBoardRequest_default_instance_;
    new (ptr) ::usp::Notify_OnBoardRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Notify_OnBoardRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_OnBoardRequest_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Notify_OnBoardRequest_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Notify_OperationComplete_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_OperationComplete_default_instance_;
    new (ptr) ::usp::Notify_OperationComplete();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Notify_OperationComplete::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Notify_OperationComplete_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Notify_OperationComplete_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Notify_OperationComplete_OutputArgs_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Notify_OperationComplete_CommandFailure_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Notify_OperationComplete_CommandFailure_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_OperationComplete_CommandFailure_default_instance_;
    new (ptr) ::usp::Notify_OperationComplete_CommandFailure();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Notify_OperationComplete_CommandFailure::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_OperationComplete_CommandFailure_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Notify_OperationComplete_CommandFailure_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Notify_OperationComplete_OutputArgs_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_OperationComplete_OutputArgs_default_instance_;
    new (ptr) ::usp::Notify_OperationComplete_OutputArgs();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Notify_OperationComplete_OutputArgs::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Notify_OperationComplete_OutputArgs_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Notify_OperationComplete_OutputArgs_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse_default_instance_;
    new (ptr) ::usp::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse();
  }
  ::usp::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Notify_ValueChange_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Notify_ValueChange_default_instance_;
    new (ptr) ::usp::Notify_ValueChange();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Notify_ValueChange::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Notify_ValueChange_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Notify_ValueChange_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_NotifyResp_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_NotifyResp_default_instance_;
    new (ptr) ::usp::NotifyResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::NotifyResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NotifyResp_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NotifyResp_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Operate_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Operate_default_instance_;
    new (ptr) ::usp::Operate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Operate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Operate_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Operate_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Operate_InputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Operate_InputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Operate_InputArgsEntry_DoNotUse_default_instance_;
    new (ptr) ::usp::Operate_InputArgsEntry_DoNotUse();
  }
  ::usp::Operate_InputArgsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Operate_InputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Operate_InputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_OperateResp_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_OperateResp_default_instance_;
    new (ptr) ::usp::OperateResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::OperateResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OperateResp_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OperateResp_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_OperateResp_OperationResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_OperateResp_OperationResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_OperateResp_OperationResult_default_instance_;
    new (ptr) ::usp::OperateResp_OperationResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::OperateResp_OperationResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_OperateResp_OperationResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_OperateResp_OperationResult_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_OperateResp_OperationResult_OutputArgs_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_OperateResp_OperationResult_CommandFailure_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_OperateResp_OperationResult_CommandFailure_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_OperateResp_OperationResult_CommandFailure_default_instance_;
    new (ptr) ::usp::OperateResp_OperationResult_CommandFailure();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::OperateResp_OperationResult_CommandFailure::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OperateResp_OperationResult_CommandFailure_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OperateResp_OperationResult_CommandFailure_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_OperateResp_OperationResult_OutputArgs_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_OperateResp_OperationResult_OutputArgs_default_instance_;
    new (ptr) ::usp::OperateResp_OperationResult_OutputArgs();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::OperateResp_OperationResult_OutputArgs::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OperateResp_OperationResult_OutputArgs_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OperateResp_OperationResult_OutputArgs_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse_default_instance_;
    new (ptr) ::usp::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse();
  }
  ::usp::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_Request_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Request_default_instance_;
    new (ptr) ::usp::Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<9> scc_info_Request_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 9, 0, InitDefaultsscc_info_Request_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Get_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_GetSupportedDM_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_GetInstances_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Set_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Add_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Delete_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Operate_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_Notify_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_GetSupportedProtocol_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Response_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Response_default_instance_;
    new (ptr) ::usp::Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<9> scc_info_Response_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 9, 0, InitDefaultsscc_info_Response_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_GetResp_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_GetSupportedDMResp_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_GetInstancesResp_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_SetResp_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_AddResp_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_DeleteResp_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_OperateResp_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_NotifyResp_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_GetSupportedProtocolResp_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Set_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Set_default_instance_;
    new (ptr) ::usp::Set();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Set::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Set_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Set_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Set_UpdateObject_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Set_UpdateObject_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Set_UpdateObject_default_instance_;
    new (ptr) ::usp::Set_UpdateObject();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Set_UpdateObject::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Set_UpdateObject_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Set_UpdateObject_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_Set_UpdateParamSetting_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_Set_UpdateParamSetting_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_Set_UpdateParamSetting_default_instance_;
    new (ptr) ::usp::Set_UpdateParamSetting();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::Set_UpdateParamSetting::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Set_UpdateParamSetting_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Set_UpdateParamSetting_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_SetResp_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_SetResp_default_instance_;
    new (ptr) ::usp::SetResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::SetResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResp_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetResp_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_SetResp_UpdatedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_SetResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_SetResp_ParameterError_default_instance_;
    new (ptr) ::usp::SetResp_ParameterError();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::SetResp_ParameterError::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_SetResp_UpdatedInstanceFailure_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_SetResp_UpdatedInstanceFailure_default_instance_;
    new (ptr) ::usp::SetResp_UpdatedInstanceFailure();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::SetResp_UpdatedInstanceFailure::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResp_UpdatedInstanceFailure_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetResp_UpdatedInstanceFailure_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_SetResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_SetResp_UpdatedInstanceResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_SetResp_UpdatedInstanceResult_default_instance_;
    new (ptr) ::usp::SetResp_UpdatedInstanceResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::SetResp_UpdatedInstanceResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SetResp_UpdatedInstanceResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SetResp_UpdatedInstanceResult_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_SetResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::usp::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse();
  }
  ::usp::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto}, {}};

static void InitDefaultsscc_info_SetResp_UpdatedObjectResult_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_SetResp_UpdatedObjectResult_default_instance_;
    new (ptr) ::usp::SetResp_UpdatedObjectResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::SetResp_UpdatedObjectResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResp_UpdatedObjectResult_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetResp_UpdatedObjectResult_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_SetResp_UpdatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_SetResp_UpdatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_SetResp_UpdatedObjectResult_OperationStatus_default_instance_;
    new (ptr) ::usp::SetResp_UpdatedObjectResult_OperationStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::SetResp_UpdatedObjectResult_OperationStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SetResp_UpdatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SetResp_UpdatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base,
      &scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_default_instance_;
    new (ptr) ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_SetResp_UpdatedInstanceFailure_usp_2dmsg_2d1_2d1_2eproto.base,}};

static void InitDefaultsscc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usp::_SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_default_instance_;
    new (ptr) ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto}, {
      &scc_info_SetResp_UpdatedInstanceResult_usp_2dmsg_2d1_2d1_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_usp_2dmsg_2d1_2d1_2eproto[75];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_usp_2dmsg_2d1_2d1_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_usp_2dmsg_2d1_2d1_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_usp_2dmsg_2d1_2d1_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Msg, header_),
  PROTOBUF_FIELD_OFFSET(::usp::Msg, body_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Header, msg_id_),
  PROTOBUF_FIELD_OFFSET(::usp::Header, msg_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Body, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::usp::Body, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::usp::BodyDefaultTypeInternal, request_),
  offsetof(::usp::BodyDefaultTypeInternal, response_),
  offsetof(::usp::BodyDefaultTypeInternal, error_),
  PROTOBUF_FIELD_OFFSET(::usp::Body, msg_body_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::usp::Request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::usp::RequestDefaultTypeInternal, get_),
  offsetof(::usp::RequestDefaultTypeInternal, get_supported_dm_),
  offsetof(::usp::RequestDefaultTypeInternal, get_instances_),
  offsetof(::usp::RequestDefaultTypeInternal, set_),
  offsetof(::usp::RequestDefaultTypeInternal, add_),
  offsetof(::usp::RequestDefaultTypeInternal, delete__),
  offsetof(::usp::RequestDefaultTypeInternal, operate_),
  offsetof(::usp::RequestDefaultTypeInternal, notify_),
  offsetof(::usp::RequestDefaultTypeInternal, get_supported_protocol_),
  PROTOBUF_FIELD_OFFSET(::usp::Request, req_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::usp::Response, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::usp::ResponseDefaultTypeInternal, get_resp_),
  offsetof(::usp::ResponseDefaultTypeInternal, get_supported_dm_resp_),
  offsetof(::usp::ResponseDefaultTypeInternal, get_instances_resp_),
  offsetof(::usp::ResponseDefaultTypeInternal, set_resp_),
  offsetof(::usp::ResponseDefaultTypeInternal, add_resp_),
  offsetof(::usp::ResponseDefaultTypeInternal, delete_resp_),
  offsetof(::usp::ResponseDefaultTypeInternal, operate_resp_),
  offsetof(::usp::ResponseDefaultTypeInternal, notify_resp_),
  offsetof(::usp::ResponseDefaultTypeInternal, get_supported_protocol_resp_),
  PROTOBUF_FIELD_OFFSET(::usp::Response, resp_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Error_ParamError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Error_ParamError, param_path_),
  PROTOBUF_FIELD_OFFSET(::usp::Error_ParamError, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::Error_ParamError, err_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Error, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::Error, err_msg_),
  PROTOBUF_FIELD_OFFSET(::usp::Error, param_errs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Get, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Get, param_paths_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_RequestedPathResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_RequestedPathResult, requested_path_),
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_RequestedPathResult, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_RequestedPathResult, err_msg_),
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_RequestedPathResult, resolved_path_results_),
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_ResolvedPathResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_ResolvedPathResult, resolved_path_),
  PROTOBUF_FIELD_OFFSET(::usp::GetResp_ResolvedPathResult, result_params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetResp, req_path_results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDM, obj_paths_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDM, first_level_only_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDM, return_commands_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDM, return_events_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDM, return_params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_RequestedObjectResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_RequestedObjectResult, req_obj_path_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_RequestedObjectResult, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_RequestedObjectResult, err_msg_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_RequestedObjectResult, data_model_inst_uri_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_RequestedObjectResult, supported_objs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedObjectResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedObjectResult, supported_obj_path_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedObjectResult, access_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedObjectResult, is_multi_instance_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedObjectResult, supported_commands_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedObjectResult, supported_events_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedObjectResult, supported_params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedParamResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedParamResult, param_name_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedParamResult, access_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedCommandResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedCommandResult, command_name_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedCommandResult, input_arg_names_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedCommandResult, output_arg_names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedEventResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedEventResult, event_name_),
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp_SupportedEventResult, arg_names_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedDMResp, req_obj_results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetInstances, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetInstances, obj_paths_),
  PROTOBUF_FIELD_OFFSET(::usp::GetInstances, first_level_only_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_RequestedPathResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_RequestedPathResult, requested_path_),
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_RequestedPathResult, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_RequestedPathResult, err_msg_),
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_RequestedPathResult, curr_insts_),
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_CurrInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_CurrInstance, instantiated_obj_path_),
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp_CurrInstance, unique_keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetInstancesResp, req_path_results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedProtocol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedProtocol, controller_supported_protocol_versions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedProtocolResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::GetSupportedProtocolResp, agent_supported_protocol_versions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Add_CreateObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Add_CreateObject, obj_path_),
  PROTOBUF_FIELD_OFFSET(::usp::Add_CreateObject, param_settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Add_CreateParamSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Add_CreateParamSetting, param_),
  PROTOBUF_FIELD_OFFSET(::usp::Add_CreateParamSetting, value_),
  PROTOBUF_FIELD_OFFSET(::usp::Add_CreateParamSetting, required_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Add, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Add, allow_partial_),
  PROTOBUF_FIELD_OFFSET(::usp::Add, create_objs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure, err_msg_),
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess, instantiated_path_),
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess, param_errs_),
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess, unique_keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::usp::AddResp_CreatedObjectResult_OperationStatusDefaultTypeInternal, oper_failure_),
  offsetof(::usp::AddResp_CreatedObjectResult_OperationStatusDefaultTypeInternal, oper_success_),
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult_OperationStatus, oper_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult, requested_path_),
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_CreatedObjectResult, oper_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_ParameterError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_ParameterError, param_),
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_ParameterError, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::AddResp_ParameterError, err_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::AddResp, created_obj_results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Delete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Delete, allow_partial_),
  PROTOBUF_FIELD_OFFSET(::usp::Delete, obj_paths_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure, err_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess, affected_paths_),
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess, unaffected_path_errs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult_OperationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult_OperationStatus, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::usp::DeleteResp_DeletedObjectResult_OperationStatusDefaultTypeInternal, oper_failure_),
  offsetof(::usp::DeleteResp_DeletedObjectResult_OperationStatusDefaultTypeInternal, oper_success_),
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult_OperationStatus, oper_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult, requested_path_),
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_DeletedObjectResult, oper_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_UnaffectedPathError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_UnaffectedPathError, unaffected_path_),
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_UnaffectedPathError, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp_UnaffectedPathError, err_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::DeleteResp, deleted_obj_results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Set_UpdateObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Set_UpdateObject, obj_path_),
  PROTOBUF_FIELD_OFFSET(::usp::Set_UpdateObject, param_settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Set_UpdateParamSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Set_UpdateParamSetting, param_),
  PROTOBUF_FIELD_OFFSET(::usp::Set_UpdateParamSetting, value_),
  PROTOBUF_FIELD_OFFSET(::usp::Set_UpdateParamSetting, required_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Set, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Set, allow_partial_),
  PROTOBUF_FIELD_OFFSET(::usp::Set, update_objs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure, err_msg_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure, updated_inst_failures_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess, updated_inst_results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult_OperationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult_OperationStatus, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::usp::SetResp_UpdatedObjectResult_OperationStatusDefaultTypeInternal, oper_failure_),
  offsetof(::usp::SetResp_UpdatedObjectResult_OperationStatusDefaultTypeInternal, oper_success_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult_OperationStatus, oper_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult, requested_path_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedObjectResult, oper_status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceFailure, affected_path_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceFailure, param_errs_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceResult, affected_path_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceResult, param_errs_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_UpdatedInstanceResult, updated_params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_ParameterError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_ParameterError, param_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_ParameterError, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::SetResp_ParameterError, err_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::SetResp, updated_obj_results_),
  PROTOBUF_FIELD_OFFSET(::usp::Operate_InputArgsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::usp::Operate_InputArgsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Operate_InputArgsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::usp::Operate_InputArgsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Operate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Operate, command_),
  PROTOBUF_FIELD_OFFSET(::usp::Operate, command_key_),
  PROTOBUF_FIELD_OFFSET(::usp::Operate, send_resp_),
  PROTOBUF_FIELD_OFFSET(::usp::Operate, input_args_),
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult_OutputArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult_OutputArgs, output_args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult_CommandFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult_CommandFailure, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult_CommandFailure, err_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult, executed_command_),
  offsetof(::usp::OperateResp_OperationResultDefaultTypeInternal, req_obj_path_),
  offsetof(::usp::OperateResp_OperationResultDefaultTypeInternal, req_output_args_),
  offsetof(::usp::OperateResp_OperationResultDefaultTypeInternal, cmd_failure_),
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp_OperationResult, operation_resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::OperateResp, operation_results_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_Event_ParamsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_Event_ParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_Event_ParamsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_Event_ParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_Event, obj_path_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_Event, event_name_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_Event, params_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ValueChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ValueChange, param_path_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ValueChange, param_value_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ObjectCreation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ObjectCreation, obj_path_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ObjectCreation, unique_keys_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ObjectDeletion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_ObjectDeletion, obj_path_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete_OutputArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete_OutputArgs, output_args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete_CommandFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete_CommandFailure, err_code_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete_CommandFailure, err_msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete, obj_path_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete, command_name_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete, command_key_),
  offsetof(::usp::Notify_OperationCompleteDefaultTypeInternal, req_output_args_),
  offsetof(::usp::Notify_OperationCompleteDefaultTypeInternal, cmd_failure_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OperationComplete, operation_resp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OnBoardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OnBoardRequest, oui_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OnBoardRequest, product_class_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OnBoardRequest, serial_number_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify_OnBoardRequest, agent_supported_protocol_versions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::Notify, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::usp::Notify, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::Notify, subscription_id_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify, send_resp_),
  offsetof(::usp::NotifyDefaultTypeInternal, event_),
  offsetof(::usp::NotifyDefaultTypeInternal, value_change_),
  offsetof(::usp::NotifyDefaultTypeInternal, obj_creation_),
  offsetof(::usp::NotifyDefaultTypeInternal, obj_deletion_),
  offsetof(::usp::NotifyDefaultTypeInternal, oper_complete_),
  offsetof(::usp::NotifyDefaultTypeInternal, on_board_req_),
  PROTOBUF_FIELD_OFFSET(::usp::Notify, notification_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usp::NotifyResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usp::NotifyResp, subscription_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::usp::Msg)},
  { 7, -1, sizeof(::usp::Header)},
  { 14, -1, sizeof(::usp::Body)},
  { 23, -1, sizeof(::usp::Request)},
  { 38, -1, sizeof(::usp::Response)},
  { 53, -1, sizeof(::usp::Error_ParamError)},
  { 61, -1, sizeof(::usp::Error)},
  { 69, -1, sizeof(::usp::Get)},
  { 75, -1, sizeof(::usp::GetResp_RequestedPathResult)},
  { 84, 91, sizeof(::usp::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse)},
  { 93, -1, sizeof(::usp::GetResp_ResolvedPathResult)},
  { 100, -1, sizeof(::usp::GetResp)},
  { 106, -1, sizeof(::usp::GetSupportedDM)},
  { 116, -1, sizeof(::usp::GetSupportedDMResp_RequestedObjectResult)},
  { 126, -1, sizeof(::usp::GetSupportedDMResp_SupportedObjectResult)},
  { 137, -1, sizeof(::usp::GetSupportedDMResp_SupportedParamResult)},
  { 144, -1, sizeof(::usp::GetSupportedDMResp_SupportedCommandResult)},
  { 152, -1, sizeof(::usp::GetSupportedDMResp_SupportedEventResult)},
  { 159, -1, sizeof(::usp::GetSupportedDMResp)},
  { 165, -1, sizeof(::usp::GetInstances)},
  { 172, -1, sizeof(::usp::GetInstancesResp_RequestedPathResult)},
  { 181, 188, sizeof(::usp::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse)},
  { 190, -1, sizeof(::usp::GetInstancesResp_CurrInstance)},
  { 197, -1, sizeof(::usp::GetInstancesResp)},
  { 203, -1, sizeof(::usp::GetSupportedProtocol)},
  { 209, -1, sizeof(::usp::GetSupportedProtocolResp)},
  { 215, -1, sizeof(::usp::Add_CreateObject)},
  { 222, -1, sizeof(::usp::Add_CreateParamSetting)},
  { 230, -1, sizeof(::usp::Add)},
  { 237, -1, sizeof(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure)},
  { 244, 251, sizeof(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse)},
  { 253, -1, sizeof(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess)},
  { 261, -1, sizeof(::usp::AddResp_CreatedObjectResult_OperationStatus)},
  { 269, -1, sizeof(::usp::AddResp_CreatedObjectResult)},
  { 276, -1, sizeof(::usp::AddResp_ParameterError)},
  { 284, -1, sizeof(::usp::AddResp)},
  { 290, -1, sizeof(::usp::Delete)},
  { 297, -1, sizeof(::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure)},
  { 304, -1, sizeof(::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess)},
  { 311, -1, sizeof(::usp::DeleteResp_DeletedObjectResult_OperationStatus)},
  { 319, -1, sizeof(::usp::DeleteResp_DeletedObjectResult)},
  { 326, -1, sizeof(::usp::DeleteResp_UnaffectedPathError)},
  { 334, -1, sizeof(::usp::DeleteResp)},
  { 340, -1, sizeof(::usp::Set_UpdateObject)},
  { 347, -1, sizeof(::usp::Set_UpdateParamSetting)},
  { 355, -1, sizeof(::usp::Set)},
  { 362, -1, sizeof(::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure)},
  { 370, -1, sizeof(::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess)},
  { 376, -1, sizeof(::usp::SetResp_UpdatedObjectResult_OperationStatus)},
  { 384, -1, sizeof(::usp::SetResp_UpdatedObjectResult)},
  { 391, -1, sizeof(::usp::SetResp_UpdatedInstanceFailure)},
  { 398, 405, sizeof(::usp::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse)},
  { 407, -1, sizeof(::usp::SetResp_UpdatedInstanceResult)},
  { 415, -1, sizeof(::usp::SetResp_ParameterError)},
  { 423, -1, sizeof(::usp::SetResp)},
  { 429, 436, sizeof(::usp::Operate_InputArgsEntry_DoNotUse)},
  { 438, -1, sizeof(::usp::Operate)},
  { 447, 454, sizeof(::usp::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse)},
  { 456, -1, sizeof(::usp::OperateResp_OperationResult_OutputArgs)},
  { 462, -1, sizeof(::usp::OperateResp_OperationResult_CommandFailure)},
  { 469, -1, sizeof(::usp::OperateResp_OperationResult)},
  { 479, -1, sizeof(::usp::OperateResp)},
  { 485, 492, sizeof(::usp::Notify_Event_ParamsEntry_DoNotUse)},
  { 494, -1, sizeof(::usp::Notify_Event)},
  { 502, -1, sizeof(::usp::Notify_ValueChange)},
  { 509, 516, sizeof(::usp::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse)},
  { 518, -1, sizeof(::usp::Notify_ObjectCreation)},
  { 525, -1, sizeof(::usp::Notify_ObjectDeletion)},
  { 531, 538, sizeof(::usp::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse)},
  { 540, -1, sizeof(::usp::Notify_OperationComplete_OutputArgs)},
  { 546, -1, sizeof(::usp::Notify_OperationComplete_CommandFailure)},
  { 553, -1, sizeof(::usp::Notify_OperationComplete)},
  { 564, -1, sizeof(::usp::Notify_OnBoardRequest)},
  { 573, -1, sizeof(::usp::Notify)},
  { 587, -1, sizeof(::usp::NotifyResp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Msg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Header_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Body_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Error_ParamError_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Error_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Get_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetResp_RequestedPathResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetResp_ResolvedPathResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetSupportedDM_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetSupportedDMResp_RequestedObjectResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetSupportedDMResp_SupportedObjectResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetSupportedDMResp_SupportedParamResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetSupportedDMResp_SupportedCommandResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetSupportedDMResp_SupportedEventResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetSupportedDMResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetInstances_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetInstancesResp_RequestedPathResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetInstancesResp_CurrInstance_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetInstancesResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetSupportedProtocol_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_GetSupportedProtocolResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Add_CreateObject_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Add_CreateParamSetting_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Add_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_AddResp_CreatedObjectResult_OperationStatus_OperationFailure_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_AddResp_CreatedObjectResult_OperationStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_AddResp_CreatedObjectResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_AddResp_ParameterError_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_AddResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Delete_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_DeleteResp_DeletedObjectResult_OperationStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_DeleteResp_DeletedObjectResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_DeleteResp_UnaffectedPathError_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_DeleteResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Set_UpdateObject_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Set_UpdateParamSetting_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Set_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_SetResp_UpdatedObjectResult_OperationStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_SetResp_UpdatedObjectResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_SetResp_UpdatedInstanceFailure_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_SetResp_UpdatedInstanceResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_SetResp_ParameterError_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_SetResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Operate_InputArgsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Operate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_OperateResp_OperationResult_OutputArgs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_OperateResp_OperationResult_CommandFailure_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_OperateResp_OperationResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_OperateResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_Event_ParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_Event_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_ValueChange_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_ObjectCreation_UniqueKeysEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_ObjectCreation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_ObjectDeletion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_OperationComplete_OutputArgs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_OperationComplete_CommandFailure_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_OperationComplete_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_OnBoardRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_Notify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usp::_NotifyResp_default_instance_),
};

const char descriptor_table_protodef_usp_2dmsg_2d1_2d1_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021usp-msg-1-1.proto\022\003usp\";\n\003Msg\022\033\n\006heade"
  "r\030\001 \001(\0132\013.usp.Header\022\027\n\004body\030\002 \001(\0132\t.usp"
  ".Body\"\207\003\n\006Header\022\016\n\006msg_id\030\001 \001(\t\022%\n\010msg_"
  "type\030\002 \001(\0162\023.usp.Header.MsgType\"\305\002\n\007MsgT"
  "ype\022\t\n\005ERROR\020\000\022\007\n\003GET\020\001\022\014\n\010GET_RESP\020\002\022\n\n"
  "\006NOTIFY\020\003\022\007\n\003SET\020\004\022\014\n\010SET_RESP\020\005\022\013\n\007OPER"
  "ATE\020\006\022\020\n\014OPERATE_RESP\020\007\022\007\n\003ADD\020\010\022\014\n\010ADD_"
  "RESP\020\t\022\n\n\006DELETE\020\n\022\017\n\013DELETE_RESP\020\013\022\024\n\020G"
  "ET_SUPPORTED_DM\020\014\022\031\n\025GET_SUPPORTED_DM_RE"
  "SP\020\r\022\021\n\rGET_INSTANCES\020\016\022\026\n\022GET_INSTANCES"
  "_RESP\020\017\022\017\n\013NOTIFY_RESP\020\020\022\027\n\023GET_SUPPORTE"
  "D_PROTO\020\021\022\034\n\030GET_SUPPORTED_PROTO_RESP\020\022\""
  "s\n\004Body\022\037\n\007request\030\001 \001(\0132\014.usp.RequestH\000"
  "\022!\n\010response\030\002 \001(\0132\r.usp.ResponseH\000\022\033\n\005e"
  "rror\030\003 \001(\0132\n.usp.ErrorH\000B\n\n\010msg_body\"\331\002\n"
  "\007Request\022\027\n\003get\030\001 \001(\0132\010.usp.GetH\000\022/\n\020get"
  "_supported_dm\030\002 \001(\0132\023.usp.GetSupportedDM"
  "H\000\022*\n\rget_instances\030\003 \001(\0132\021.usp.GetInsta"
  "ncesH\000\022\027\n\003set\030\004 \001(\0132\010.usp.SetH\000\022\027\n\003add\030\005"
  " \001(\0132\010.usp.AddH\000\022\035\n\006delete\030\006 \001(\0132\013.usp.D"
  "eleteH\000\022\037\n\007operate\030\007 \001(\0132\014.usp.OperateH\000"
  "\022\035\n\006notify\030\010 \001(\0132\013.usp.NotifyH\000\022;\n\026get_s"
  "upported_protocol\030\t \001(\0132\031.usp.GetSupport"
  "edProtocolH\000B\n\n\010req_type\"\254\003\n\010Response\022 \n"
  "\010get_resp\030\001 \001(\0132\014.usp.GetRespH\000\0228\n\025get_s"
  "upported_dm_resp\030\002 \001(\0132\027.usp.GetSupporte"
  "dDMRespH\000\0223\n\022get_instances_resp\030\003 \001(\0132\025."
  "usp.GetInstancesRespH\000\022 \n\010set_resp\030\004 \001(\013"
  "2\014.usp.SetRespH\000\022 \n\010add_resp\030\005 \001(\0132\014.usp"
  ".AddRespH\000\022&\n\013delete_resp\030\006 \001(\0132\017.usp.De"
  "leteRespH\000\022(\n\014operate_resp\030\007 \001(\0132\020.usp.O"
  "perateRespH\000\022&\n\013notify_resp\030\010 \001(\0132\017.usp."
  "NotifyRespH\000\022D\n\033get_supported_protocol_r"
  "esp\030\t \001(\0132\035.usp.GetSupportedProtocolResp"
  "H\000B\013\n\tresp_type\"\232\001\n\005Error\022\020\n\010err_code\030\001 "
  "\001(\007\022\017\n\007err_msg\030\002 \001(\t\022)\n\nparam_errs\030\003 \003(\013"
  "2\025.usp.Error.ParamError\032C\n\nParamError\022\022\n"
  "\nparam_path\030\001 \001(\t\022\020\n\010err_code\030\002 \001(\007\022\017\n\007e"
  "rr_msg\030\003 \001(\t\"\032\n\003Get\022\023\n\013param_paths\030\001 \003(\t"
  "\"\205\003\n\007GetResp\022:\n\020req_path_results\030\001 \003(\0132 "
  ".usp.GetResp.RequestedPathResult\032\220\001\n\023Req"
  "uestedPathResult\022\026\n\016requested_path\030\001 \001(\t"
  "\022\020\n\010err_code\030\002 \001(\007\022\017\n\007err_msg\030\003 \001(\t\022>\n\025r"
  "esolved_path_results\030\004 \003(\0132\037.usp.GetResp"
  ".ResolvedPathResult\032\252\001\n\022ResolvedPathResu"
  "lt\022\025\n\rresolved_path\030\001 \001(\t\022H\n\rresult_para"
  "ms\030\002 \003(\01321.usp.GetResp.ResolvedPathResul"
  "t.ResultParamsEntry\0323\n\021ResultParamsEntry"
  "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\204\001\n\016Get"
  "SupportedDM\022\021\n\tobj_paths\030\001 \003(\t\022\030\n\020first_"
  "level_only\030\002 \001(\010\022\027\n\017return_commands\030\003 \001("
  "\010\022\025\n\rreturn_events\030\004 \001(\010\022\025\n\rreturn_param"
  "s\030\005 \001(\010\"\261\010\n\022GetSupportedDMResp\022F\n\017req_ob"
  "j_results\030\001 \003(\0132-.usp.GetSupportedDMResp"
  ".RequestedObjectResult\032\264\001\n\025RequestedObje"
  "ctResult\022\024\n\014req_obj_path\030\001 \001(\t\022\020\n\010err_co"
  "de\030\002 \001(\007\022\017\n\007err_msg\030\003 \001(\t\022\033\n\023data_model_"
  "inst_uri\030\004 \001(\t\022E\n\016supported_objs\030\005 \003(\0132-"
  ".usp.GetSupportedDMResp.SupportedObjectR"
  "esult\032\341\002\n\025SupportedObjectResult\022\032\n\022suppo"
  "rted_obj_path\030\001 \001(\t\0225\n\006access\030\002 \001(\0162%.us"
  "p.GetSupportedDMResp.ObjAccessType\022\031\n\021is"
  "_multi_instance\030\003 \001(\010\022J\n\022supported_comma"
  "nds\030\004 \003(\0132..usp.GetSupportedDMResp.Suppo"
  "rtedCommandResult\022F\n\020supported_events\030\005 "
  "\003(\0132,.usp.GetSupportedDMResp.SupportedEv"
  "entResult\022F\n\020supported_params\030\006 \003(\0132,.us"
  "p.GetSupportedDMResp.SupportedParamResul"
  "t\032c\n\024SupportedParamResult\022\022\n\nparam_name\030"
  "\001 \001(\t\0227\n\006access\030\002 \001(\0162\'.usp.GetSupported"
  "DMResp.ParamAccessType\032a\n\026SupportedComma"
  "ndResult\022\024\n\014command_name\030\001 \001(\t\022\027\n\017input_"
  "arg_names\030\002 \003(\t\022\030\n\020output_arg_names\030\003 \003("
  "\t\032=\n\024SupportedEventResult\022\022\n\nevent_name\030"
  "\001 \001(\t\022\021\n\targ_names\030\002 \003(\t\"R\n\017ParamAccessT"
  "ype\022\023\n\017PARAM_READ_ONLY\020\000\022\024\n\020PARAM_READ_W"
  "RITE\020\001\022\024\n\020PARAM_WRITE_ONLY\020\002\"]\n\rObjAcces"
  "sType\022\021\n\rOBJ_READ_ONLY\020\000\022\022\n\016OBJ_ADD_DELE"
  "TE\020\001\022\020\n\014OBJ_ADD_ONLY\020\002\022\023\n\017OBJ_DELETE_ONL"
  "Y\020\003\";\n\014GetInstances\022\021\n\tobj_paths\030\001 \003(\t\022\030"
  "\n\020first_level_only\030\002 \001(\010\"\216\003\n\020GetInstance"
  "sResp\022C\n\020req_path_results\030\001 \003(\0132).usp.Ge"
  "tInstancesResp.RequestedPathResult\032\210\001\n\023R"
  "equestedPathResult\022\026\n\016requested_path\030\001 \001"
  "(\t\022\020\n\010err_code\030\002 \001(\007\022\017\n\007err_msg\030\003 \001(\t\0226\n"
  "\ncurr_insts\030\004 \003(\0132\".usp.GetInstancesResp"
  ".CurrInstance\032\251\001\n\014CurrInstance\022\035\n\025instan"
  "tiated_obj_path\030\001 \001(\t\022G\n\013unique_keys\030\002 \003"
  "(\01322.usp.GetInstancesResp.CurrInstance.U"
  "niqueKeysEntry\0321\n\017UniqueKeysEntry\022\013\n\003key"
  "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"F\n\024GetSupporte"
  "dProtocol\022.\n&controller_supported_protoc"
  "ol_versions\030\001 \001(\t\"E\n\030GetSupportedProtoco"
  "lResp\022)\n!agent_supported_protocol_versio"
  "ns\030\001 \001(\t\"\345\001\n\003Add\022\025\n\rallow_partial\030\001 \001(\010\022"
  "*\n\013create_objs\030\002 \003(\0132\025.usp.Add.CreateObj"
  "ect\032U\n\014CreateObject\022\020\n\010obj_path\030\001 \001(\t\0223\n"
  "\016param_settings\030\002 \003(\0132\033.usp.Add.CreatePa"
  "ramSetting\032D\n\022CreateParamSetting\022\r\n\005para"
  "m\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022\020\n\010required\030\003 \001(\010"
  "\"\217\006\n\007AddResp\022=\n\023created_obj_results\030\001 \003("
  "\0132 .usp.AddResp.CreatedObjectResult\032\200\005\n\023"
  "CreatedObjectResult\022\026\n\016requested_path\030\001 "
  "\001(\t\022E\n\013oper_status\030\002 \001(\01320.usp.AddResp.C"
  "reatedObjectResult.OperationStatus\032\211\004\n\017O"
  "perationStatus\022Y\n\014oper_failure\030\001 \001(\0132A.u"
  "sp.AddResp.CreatedObjectResult.Operation"
  "Status.OperationFailureH\000\022Y\n\014oper_succes"
  "s\030\002 \001(\0132A.usp.AddResp.CreatedObjectResul"
  "t.OperationStatus.OperationSuccessH\000\0325\n\020"
  "OperationFailure\022\020\n\010err_code\030\001 \001(\007\022\017\n\007er"
  "r_msg\030\002 \001(\t\032\371\001\n\020OperationSuccess\022\031\n\021inst"
  "antiated_path\030\001 \001(\t\022/\n\nparam_errs\030\002 \003(\0132"
  "\033.usp.AddResp.ParameterError\022f\n\013unique_k"
  "eys\030\003 \003(\0132Q.usp.AddResp.CreatedObjectRes"
  "ult.OperationStatus.OperationSuccess.Uni"
  "queKeysEntry\0321\n\017UniqueKeysEntry\022\013\n\003key\030\001"
  " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\r\n\013oper_status\032B"
  "\n\016ParameterError\022\r\n\005param\030\001 \001(\t\022\020\n\010err_c"
  "ode\030\002 \001(\007\022\017\n\007err_msg\030\003 \001(\t\"2\n\006Delete\022\025\n\r"
  "allow_partial\030\001 \001(\010\022\021\n\tobj_paths\030\002 \003(\t\"\240"
  "\005\n\nDeleteResp\022@\n\023deleted_obj_results\030\001 \003"
  "(\0132#.usp.DeleteResp.DeletedObjectResult\032"
  "\374\003\n\023DeletedObjectResult\022\026\n\016requested_pat"
  "h\030\001 \001(\t\022H\n\013oper_status\030\002 \001(\01323.usp.Delet"
  "eResp.DeletedObjectResult.OperationStatu"
  "s\032\202\003\n\017OperationStatus\022\\\n\014oper_failure\030\001 "
  "\001(\0132D.usp.DeleteResp.DeletedObjectResult"
  ".OperationStatus.OperationFailureH\000\022\\\n\014o"
  "per_success\030\002 \001(\0132D.usp.DeleteResp.Delet"
  "edObjectResult.OperationStatus.Operation"
  "SuccessH\000\0325\n\020OperationFailure\022\020\n\010err_cod"
  "e\030\001 \001(\007\022\017\n\007err_msg\030\002 \001(\t\032m\n\020OperationSuc"
  "cess\022\026\n\016affected_paths\030\001 \003(\t\022A\n\024unaffect"
  "ed_path_errs\030\002 \003(\0132#.usp.DeleteResp.Unaf"
  "fectedPathErrorB\r\n\013oper_status\032Q\n\023Unaffe"
  "ctedPathError\022\027\n\017unaffected_path\030\001 \001(\t\022\020"
  "\n\010err_code\030\002 \001(\007\022\017\n\007err_msg\030\003 \001(\t\"\345\001\n\003Se"
  "t\022\025\n\rallow_partial\030\001 \001(\010\022*\n\013update_objs\030"
  "\002 \003(\0132\025.usp.Set.UpdateObject\032U\n\014UpdateOb"
  "ject\022\020\n\010obj_path\030\001 \001(\t\0223\n\016param_settings"
  "\030\002 \003(\0132\033.usp.Set.UpdateParamSetting\032D\n\022U"
  "pdateParamSetting\022\r\n\005param\030\001 \001(\t\022\r\n\005valu"
  "e\030\002 \001(\t\022\020\n\010required\030\003 \001(\010\"\366\007\n\007SetResp\022=\n"
  "\023updated_obj_results\030\001 \003(\0132 .usp.SetResp"
  ".UpdatedObjectResult\032\236\004\n\023UpdatedObjectRe"
  "sult\022\026\n\016requested_path\030\001 \001(\t\022E\n\013oper_sta"
  "tus\030\002 \001(\01320.usp.SetResp.UpdatedObjectRes"
  "ult.OperationStatus\032\247\003\n\017OperationStatus\022"
  "Y\n\014oper_failure\030\001 \001(\0132A.usp.SetResp.Upda"
  "tedObjectResult.OperationStatus.Operatio"
  "nFailureH\000\022Y\n\014oper_success\030\002 \001(\0132A.usp.S"
  "etResp.UpdatedObjectResult.OperationStat"
  "us.OperationSuccessH\000\032y\n\020OperationFailur"
  "e\022\020\n\010err_code\030\001 \001(\007\022\017\n\007err_msg\030\002 \001(\t\022B\n\025"
  "updated_inst_failures\030\003 \003(\0132#.usp.SetRes"
  "p.UpdatedInstanceFailure\032T\n\020OperationSuc"
  "cess\022@\n\024updated_inst_results\030\001 \003(\0132\".usp"
  ".SetResp.UpdatedInstanceResultB\r\n\013oper_s"
  "tatus\032`\n\026UpdatedInstanceFailure\022\025\n\raffec"
  "ted_path\030\001 \001(\t\022/\n\nparam_errs\030\002 \003(\0132\033.usp"
  ".SetResp.ParameterError\032\344\001\n\025UpdatedInsta"
  "nceResult\022\025\n\raffected_path\030\001 \001(\t\022/\n\npara"
  "m_errs\030\002 \003(\0132\033.usp.SetResp.ParameterErro"
  "r\022M\n\016updated_params\030\003 \003(\01325.usp.SetResp."
  "UpdatedInstanceResult.UpdatedParamsEntry"
  "\0324\n\022UpdatedParamsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
  "alue\030\002 \001(\t:\0028\001\032B\n\016ParameterError\022\r\n\005para"
  "m\030\001 \001(\t\022\020\n\010err_code\030\002 \001(\007\022\017\n\007err_msg\030\003 \001"
  "(\t\"\245\001\n\007Operate\022\017\n\007command\030\001 \001(\t\022\023\n\013comma"
  "nd_key\030\002 \001(\t\022\021\n\tsend_resp\030\003 \001(\010\022/\n\ninput"
  "_args\030\004 \003(\0132\033.usp.Operate.InputArgsEntry"
  "\0320\n\016InputArgsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
  "\030\002 \001(\t:\0028\001\"\373\003\n\013OperateResp\022;\n\021operation_"
  "results\030\001 \003(\0132 .usp.OperateResp.Operatio"
  "nResult\032\256\003\n\017OperationResult\022\030\n\020executed_"
  "command\030\001 \001(\t\022\026\n\014req_obj_path\030\002 \001(\tH\000\022F\n"
  "\017req_output_args\030\003 \001(\0132+.usp.OperateResp"
  ".OperationResult.OutputArgsH\000\022F\n\013cmd_fai"
  "lure\030\004 \001(\0132/.usp.OperateResp.OperationRe"
  "sult.CommandFailureH\000\032\221\001\n\nOutputArgs\022P\n\013"
  "output_args\030\001 \003(\0132;.usp.OperateResp.Oper"
  "ationResult.OutputArgs.OutputArgsEntry\0321"
  "\n\017OutputArgsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
  "\002 \001(\t:\0028\001\0323\n\016CommandFailure\022\020\n\010err_code\030"
  "\001 \001(\007\022\017\n\007err_msg\030\002 \001(\tB\020\n\016operation_resp"
  "\"\235\n\n\006Notify\022\027\n\017subscription_id\030\001 \001(\t\022\021\n\t"
  "send_resp\030\002 \001(\010\022\"\n\005event\030\003 \001(\0132\021.usp.Not"
  "ify.EventH\000\022/\n\014value_change\030\004 \001(\0132\027.usp."
  "Notify.ValueChangeH\000\0222\n\014obj_creation\030\005 \001"
  "(\0132\032.usp.Notify.ObjectCreationH\000\0222\n\014obj_"
  "deletion\030\006 \001(\0132\032.usp.Notify.ObjectDeleti"
  "onH\000\0226\n\roper_complete\030\007 \001(\0132\035.usp.Notify"
  ".OperationCompleteH\000\0222\n\014on_board_req\030\010 \001"
  "(\0132\032.usp.Notify.OnBoardRequestH\000\032\213\001\n\005Eve"
  "nt\022\020\n\010obj_path\030\001 \001(\t\022\022\n\nevent_name\030\002 \001(\t"
  "\022-\n\006params\030\003 \003(\0132\035.usp.Notify.Event.Para"
  "msEntry\032-\n\013ParamsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005v"
  "alue\030\002 \001(\t:\0028\001\0326\n\013ValueChange\022\022\n\nparam_p"
  "ath\030\001 \001(\t\022\023\n\013param_value\030\002 \001(\t\032\226\001\n\016Objec"
  "tCreation\022\020\n\010obj_path\030\001 \001(\t\022\?\n\013unique_ke"
  "ys\030\002 \003(\0132*.usp.Notify.ObjectCreation.Uni"
  "queKeysEntry\0321\n\017UniqueKeysEntry\022\013\n\003key\030\001"
  " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032\"\n\016ObjectDeletio"
  "n\022\020\n\010obj_path\030\001 \001(\t\032\262\003\n\021OperationComplet"
  "e\022\020\n\010obj_path\030\001 \001(\t\022\024\n\014command_name\030\002 \001("
  "\t\022\023\n\013command_key\030\003 \001(\t\022C\n\017req_output_arg"
  "s\030\004 \001(\0132(.usp.Notify.OperationComplete.O"
  "utputArgsH\000\022C\n\013cmd_failure\030\005 \001(\0132,.usp.N"
  "otify.OperationComplete.CommandFailureH\000"
  "\032\216\001\n\nOutputArgs\022M\n\013output_args\030\001 \003(\01328.u"
  "sp.Notify.OperationComplete.OutputArgs.O"
  "utputArgsEntry\0321\n\017OutputArgsEntry\022\013\n\003key"
  "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0323\n\016CommandFail"
  "ure\022\020\n\010err_code\030\001 \001(\007\022\017\n\007err_msg\030\002 \001(\tB\020"
  "\n\016operation_resp\032v\n\016OnBoardRequest\022\013\n\003ou"
  "i\030\001 \001(\t\022\025\n\rproduct_class\030\002 \001(\t\022\025\n\rserial"
  "_number\030\003 \001(\t\022)\n!agent_supported_protoco"
  "l_versions\030\004 \001(\tB\016\n\014notification\"%\n\nNoti"
  "fyResp\022\027\n\017subscription_id\030\001 \001(\tb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_usp_2dmsg_2d1_2d1_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_usp_2dmsg_2d1_2d1_2eproto_sccs[75] = {
  &scc_info_Add_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Add_CreateObject_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Add_CreateParamSetting_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_AddResp_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_AddResp_CreatedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_AddResp_CreatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_AddResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Body_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Delete_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_DeleteResp_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_DeleteResp_DeletedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_DeleteResp_DeletedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_DeleteResp_UnaffectedPathError_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Error_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Error_ParamError_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Get_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetInstances_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetInstancesResp_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetInstancesResp_CurrInstance_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetInstancesResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetResp_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetResp_ResolvedPathResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetSupportedDM_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetSupportedDMResp_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetSupportedDMResp_RequestedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetSupportedDMResp_SupportedCommandResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetSupportedDMResp_SupportedEventResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetSupportedDMResp_SupportedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetSupportedDMResp_SupportedParamResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetSupportedProtocol_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_GetSupportedProtocolResp_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Header_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Msg_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_Event_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_Event_ParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_ObjectCreation_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_ObjectCreation_UniqueKeysEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_ObjectDeletion_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_OnBoardRequest_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_OperationComplete_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_OperationComplete_CommandFailure_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_OperationComplete_OutputArgs_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Notify_ValueChange_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_NotifyResp_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Operate_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Operate_InputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_OperateResp_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_OperateResp_OperationResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_OperateResp_OperationResult_CommandFailure_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_OperateResp_OperationResult_OutputArgs_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Request_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Response_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Set_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Set_UpdateObject_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_Set_UpdateParamSetting_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_SetResp_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_SetResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_SetResp_UpdatedInstanceFailure_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_SetResp_UpdatedInstanceResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_SetResp_UpdatedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_SetResp_UpdatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base,
  &scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_usp_2dmsg_2d1_2d1_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_usp_2dmsg_2d1_2d1_2eproto = {
  false, false, descriptor_table_protodef_usp_2dmsg_2d1_2d1_2eproto, "usp-msg-1-1.proto", 8799,
  &descriptor_table_usp_2dmsg_2d1_2d1_2eproto_once, descriptor_table_usp_2dmsg_2d1_2d1_2eproto_sccs, descriptor_table_usp_2dmsg_2d1_2d1_2eproto_deps, 75, 0,
  schemas, file_default_instances, TableStruct_usp_2dmsg_2d1_2d1_2eproto::offsets,
  file_level_metadata_usp_2dmsg_2d1_2d1_2eproto, 75, file_level_enum_descriptors_usp_2dmsg_2d1_2d1_2eproto, file_level_service_descriptors_usp_2dmsg_2d1_2d1_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_usp_2dmsg_2d1_2d1_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_usp_2dmsg_2d1_2d1_2eproto)), true);
namespace usp {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Header_MsgType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_usp_2dmsg_2d1_2d1_2eproto);
  return file_level_enum_descriptors_usp_2dmsg_2d1_2d1_2eproto[0];
}
bool Header_MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Header_MsgType Header::ERROR;
constexpr Header_MsgType Header::GET;
constexpr Header_MsgType Header::GET_RESP;
constexpr Header_MsgType Header::NOTIFY;
constexpr Header_MsgType Header::SET;
constexpr Header_MsgType Header::SET_RESP;
constexpr Header_MsgType Header::OPERATE;
constexpr Header_MsgType Header::OPERATE_RESP;
constexpr Header_MsgType Header::ADD;
constexpr Header_MsgType Header::ADD_RESP;
constexpr Header_MsgType Header::DELETE;
constexpr Header_MsgType Header::DELETE_RESP;
constexpr Header_MsgType Header::GET_SUPPORTED_DM;
constexpr Header_MsgType Header::GET_SUPPORTED_DM_RESP;
constexpr Header_MsgType Header::GET_INSTANCES;
constexpr Header_MsgType Header::GET_INSTANCES_RESP;
constexpr Header_MsgType Header::NOTIFY_RESP;
constexpr Header_MsgType Header::GET_SUPPORTED_PROTO;
constexpr Header_MsgType Header::GET_SUPPORTED_PROTO_RESP;
constexpr Header_MsgType Header::MsgType_MIN;
constexpr Header_MsgType Header::MsgType_MAX;
constexpr int Header::MsgType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetSupportedDMResp_ParamAccessType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_usp_2dmsg_2d1_2d1_2eproto);
  return file_level_enum_descriptors_usp_2dmsg_2d1_2d1_2eproto[1];
}
bool GetSupportedDMResp_ParamAccessType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetSupportedDMResp_ParamAccessType GetSupportedDMResp::PARAM_READ_ONLY;
constexpr GetSupportedDMResp_ParamAccessType GetSupportedDMResp::PARAM_READ_WRITE;
constexpr GetSupportedDMResp_ParamAccessType GetSupportedDMResp::PARAM_WRITE_ONLY;
constexpr GetSupportedDMResp_ParamAccessType GetSupportedDMResp::ParamAccessType_MIN;
constexpr GetSupportedDMResp_ParamAccessType GetSupportedDMResp::ParamAccessType_MAX;
constexpr int GetSupportedDMResp::ParamAccessType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetSupportedDMResp_ObjAccessType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_usp_2dmsg_2d1_2d1_2eproto);
  return file_level_enum_descriptors_usp_2dmsg_2d1_2d1_2eproto[2];
}
bool GetSupportedDMResp_ObjAccessType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetSupportedDMResp_ObjAccessType GetSupportedDMResp::OBJ_READ_ONLY;
constexpr GetSupportedDMResp_ObjAccessType GetSupportedDMResp::OBJ_ADD_DELETE;
constexpr GetSupportedDMResp_ObjAccessType GetSupportedDMResp::OBJ_ADD_ONLY;
constexpr GetSupportedDMResp_ObjAccessType GetSupportedDMResp::OBJ_DELETE_ONLY;
constexpr GetSupportedDMResp_ObjAccessType GetSupportedDMResp::ObjAccessType_MIN;
constexpr GetSupportedDMResp_ObjAccessType GetSupportedDMResp::ObjAccessType_MAX;
constexpr int GetSupportedDMResp::ObjAccessType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void Msg::InitAsDefaultInstance() {
  ::usp::_Msg_default_instance_._instance.get_mutable()->header_ = const_cast< ::usp::Header*>(
      ::usp::Header::internal_default_instance());
  ::usp::_Msg_default_instance_._instance.get_mutable()->body_ = const_cast< ::usp::Body*>(
      ::usp::Body::internal_default_instance());
}
class Msg::_Internal {
 public:
  static const ::usp::Header& header(const Msg* msg);
  static const ::usp::Body& body(const Msg* msg);
};

const ::usp::Header&
Msg::_Internal::header(const Msg* msg) {
  return *msg->header_;
}
const ::usp::Body&
Msg::_Internal::body(const Msg* msg) {
  return *msg->body_;
}
Msg::Msg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Msg)
}
Msg::Msg(const Msg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::usp::Header(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_body()) {
    body_ = new ::usp::Body(*from.body_);
  } else {
    body_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:usp.Msg)
}

void Msg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Msg_usp_2dmsg_2d1_2d1_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&header_)) + sizeof(body_));
}

Msg::~Msg() {
  // @@protoc_insertion_point(destructor:usp.Msg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Msg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete body_;
}

void Msg::ArenaDtor(void* object) {
  Msg* _this = reinterpret_cast< Msg* >(object);
  (void)_this;
}
void Msg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Msg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Msg& Msg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Msg_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Msg::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Msg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && body_ != nullptr) {
    delete body_;
  }
  body_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .usp.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Body body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Msg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Msg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .usp.Header header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .usp.Body body = 2;
  if (this->has_body()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::body(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Msg)
  return target;
}

size_t Msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Msg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .usp.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .usp.Body body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *body_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Msg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Msg)
  GOOGLE_DCHECK_NE(&from, this);
  const Msg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Msg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Msg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Msg)
    MergeFrom(*source);
  }
}

void Msg::MergeFrom(const Msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Msg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::usp::Header::MergeFrom(from._internal_header());
  }
  if (from.has_body()) {
    _internal_mutable_body()->::usp::Body::MergeFrom(from._internal_body());
  }
}

void Msg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg::CopyFrom(const Msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg::IsInitialized() const {
  return true;
}

void Msg::InternalSwap(Msg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg, body_)
      + sizeof(Msg::body_)
      - PROTOBUF_FIELD_OFFSET(Msg, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Header::InitAsDefaultInstance() {
}
class Header::_Internal {
 public:
};

Header::Header(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Header)
}
Header::Header(const Header& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg_id().empty()) {
    msg_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg_id(),
      GetArena());
  }
  msg_type_ = from.msg_type_;
  // @@protoc_insertion_point(copy_constructor:usp.Header)
}

void Header::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Header_usp_2dmsg_2d1_2d1_2eproto.base);
  msg_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_type_ = 0;
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:usp.Header)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Header::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Header::ArenaDtor(void* object) {
  Header* _this = reinterpret_cast< Header* >(object);
  (void)_this;
}
void Header::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Header& Header::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Header_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Header)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Header::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string msg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Header.msg_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Header.MsgType msg_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_msg_type(static_cast<::usp::Header_MsgType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Header::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Header)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg_id = 1;
  if (this->msg_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Header.msg_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg_id(), target);
  }

  // .usp.Header.MsgType msg_type = 2;
  if (this->msg_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_msg_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Header)
  return target;
}

size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Header)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg_id = 1;
  if (this->msg_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // .usp.Header.MsgType msg_type = 2;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_msg_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Header::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const Header* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Header>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Header)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_id().size() > 0) {
    _internal_set_msg_id(from._internal_msg_id());
  }
  if (from.msg_type() != 0) {
    _internal_set_msg_type(from._internal_msg_type());
  }
}

void Header::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  return true;
}

void Header::InternalSwap(Header* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_id_.Swap(&other->msg_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(msg_type_, other->msg_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Header::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Body::InitAsDefaultInstance() {
  ::usp::_Body_default_instance_.request_ = const_cast< ::usp::Request*>(
      ::usp::Request::internal_default_instance());
  ::usp::_Body_default_instance_.response_ = const_cast< ::usp::Response*>(
      ::usp::Response::internal_default_instance());
  ::usp::_Body_default_instance_.error_ = const_cast< ::usp::Error*>(
      ::usp::Error::internal_default_instance());
}
class Body::_Internal {
 public:
  static const ::usp::Request& request(const Body* msg);
  static const ::usp::Response& response(const Body* msg);
  static const ::usp::Error& error(const Body* msg);
};

const ::usp::Request&
Body::_Internal::request(const Body* msg) {
  return *msg->msg_body_.request_;
}
const ::usp::Response&
Body::_Internal::response(const Body* msg) {
  return *msg->msg_body_.response_;
}
const ::usp::Error&
Body::_Internal::error(const Body* msg) {
  return *msg->msg_body_.error_;
}
void Body::set_allocated_request(::usp::Request* request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg_body();
  if (request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(request);
    if (message_arena != submessage_arena) {
      request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    set_has_request();
    msg_body_.request_ = request;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Body.request)
}
void Body::set_allocated_response(::usp::Response* response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg_body();
  if (response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(response);
    if (message_arena != submessage_arena) {
      response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    set_has_response();
    msg_body_.response_ = response;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Body.response)
}
void Body::set_allocated_error(::usp::Error* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_msg_body();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(error);
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    msg_body_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Body.error)
}
Body::Body(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Body)
}
Body::Body(const Body& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_msg_body();
  switch (from.msg_body_case()) {
    case kRequest: {
      _internal_mutable_request()->::usp::Request::MergeFrom(from._internal_request());
      break;
    }
    case kResponse: {
      _internal_mutable_response()->::usp::Response::MergeFrom(from._internal_response());
      break;
    }
    case kError: {
      _internal_mutable_error()->::usp::Error::MergeFrom(from._internal_error());
      break;
    }
    case MSG_BODY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:usp.Body)
}

void Body::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Body_usp_2dmsg_2d1_2d1_2eproto.base);
  clear_has_msg_body();
}

Body::~Body() {
  // @@protoc_insertion_point(destructor:usp.Body)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Body::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_msg_body()) {
    clear_msg_body();
  }
}

void Body::ArenaDtor(void* object) {
  Body* _this = reinterpret_cast< Body* >(object);
  (void)_this;
}
void Body::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Body::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Body& Body::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Body_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Body::clear_msg_body() {
// @@protoc_insertion_point(one_of_clear_start:usp.Body)
  switch (msg_body_case()) {
    case kRequest: {
      if (GetArena() == nullptr) {
        delete msg_body_.request_;
      }
      break;
    }
    case kResponse: {
      if (GetArena() == nullptr) {
        delete msg_body_.response_;
      }
      break;
    }
    case kError: {
      if (GetArena() == nullptr) {
        delete msg_body_.error_;
      }
      break;
    }
    case MSG_BODY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_BODY_NOT_SET;
}


void Body::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Body)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg_body();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Body::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .usp.Request request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Response response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Error error = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Body::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Body)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .usp.Request request = 1;
  if (_internal_has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::request(this), target, stream);
  }

  // .usp.Response response = 2;
  if (_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::response(this), target, stream);
  }

  // .usp.Error error = 3;
  if (_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Body)
  return target;
}

size_t Body::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Body)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (msg_body_case()) {
    // .usp.Request request = 1;
    case kRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_body_.request_);
      break;
    }
    // .usp.Response response = 2;
    case kResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_body_.response_);
      break;
    }
    // .usp.Error error = 3;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_body_.error_);
      break;
    }
    case MSG_BODY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Body::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Body)
  GOOGLE_DCHECK_NE(&from, this);
  const Body* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Body>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Body)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Body)
    MergeFrom(*source);
  }
}

void Body::MergeFrom(const Body& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Body)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_body_case()) {
    case kRequest: {
      _internal_mutable_request()->::usp::Request::MergeFrom(from._internal_request());
      break;
    }
    case kResponse: {
      _internal_mutable_response()->::usp::Response::MergeFrom(from._internal_response());
      break;
    }
    case kError: {
      _internal_mutable_error()->::usp::Error::MergeFrom(from._internal_error());
      break;
    }
    case MSG_BODY_NOT_SET: {
      break;
    }
  }
}

void Body::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Body)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Body::CopyFrom(const Body& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Body)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Body::IsInitialized() const {
  return true;
}

void Body::InternalSwap(Body* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(msg_body_, other->msg_body_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Body::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::usp::_Request_default_instance_.get_ = const_cast< ::usp::Get*>(
      ::usp::Get::internal_default_instance());
  ::usp::_Request_default_instance_.get_supported_dm_ = const_cast< ::usp::GetSupportedDM*>(
      ::usp::GetSupportedDM::internal_default_instance());
  ::usp::_Request_default_instance_.get_instances_ = const_cast< ::usp::GetInstances*>(
      ::usp::GetInstances::internal_default_instance());
  ::usp::_Request_default_instance_.set_ = const_cast< ::usp::Set*>(
      ::usp::Set::internal_default_instance());
  ::usp::_Request_default_instance_.add_ = const_cast< ::usp::Add*>(
      ::usp::Add::internal_default_instance());
  ::usp::_Request_default_instance_.delete__ = const_cast< ::usp::Delete*>(
      ::usp::Delete::internal_default_instance());
  ::usp::_Request_default_instance_.operate_ = const_cast< ::usp::Operate*>(
      ::usp::Operate::internal_default_instance());
  ::usp::_Request_default_instance_.notify_ = const_cast< ::usp::Notify*>(
      ::usp::Notify::internal_default_instance());
  ::usp::_Request_default_instance_.get_supported_protocol_ = const_cast< ::usp::GetSupportedProtocol*>(
      ::usp::GetSupportedProtocol::internal_default_instance());
}
class Request::_Internal {
 public:
  static const ::usp::Get& get(const Request* msg);
  static const ::usp::GetSupportedDM& get_supported_dm(const Request* msg);
  static const ::usp::GetInstances& get_instances(const Request* msg);
  static const ::usp::Set& set(const Request* msg);
  static const ::usp::Add& add(const Request* msg);
  static const ::usp::Delete& delete_(const Request* msg);
  static const ::usp::Operate& operate(const Request* msg);
  static const ::usp::Notify& notify(const Request* msg);
  static const ::usp::GetSupportedProtocol& get_supported_protocol(const Request* msg);
};

const ::usp::Get&
Request::_Internal::get(const Request* msg) {
  return *msg->req_type_.get_;
}
const ::usp::GetSupportedDM&
Request::_Internal::get_supported_dm(const Request* msg) {
  return *msg->req_type_.get_supported_dm_;
}
const ::usp::GetInstances&
Request::_Internal::get_instances(const Request* msg) {
  return *msg->req_type_.get_instances_;
}
const ::usp::Set&
Request::_Internal::set(const Request* msg) {
  return *msg->req_type_.set_;
}
const ::usp::Add&
Request::_Internal::add(const Request* msg) {
  return *msg->req_type_.add_;
}
const ::usp::Delete&
Request::_Internal::delete_(const Request* msg) {
  return *msg->req_type_.delete__;
}
const ::usp::Operate&
Request::_Internal::operate(const Request* msg) {
  return *msg->req_type_.operate_;
}
const ::usp::Notify&
Request::_Internal::notify(const Request* msg) {
  return *msg->req_type_.notify_;
}
const ::usp::GetSupportedProtocol&
Request::_Internal::get_supported_protocol(const Request* msg) {
  return *msg->req_type_.get_supported_protocol_;
}
void Request::set_allocated_get(::usp::Get* get) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_req_type();
  if (get) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get);
    if (message_arena != submessage_arena) {
      get = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get, submessage_arena);
    }
    set_has_get();
    req_type_.get_ = get;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Request.get)
}
void Request::set_allocated_get_supported_dm(::usp::GetSupportedDM* get_supported_dm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_req_type();
  if (get_supported_dm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_supported_dm);
    if (message_arena != submessage_arena) {
      get_supported_dm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_supported_dm, submessage_arena);
    }
    set_has_get_supported_dm();
    req_type_.get_supported_dm_ = get_supported_dm;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Request.get_supported_dm)
}
void Request::set_allocated_get_instances(::usp::GetInstances* get_instances) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_req_type();
  if (get_instances) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_instances);
    if (message_arena != submessage_arena) {
      get_instances = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_instances, submessage_arena);
    }
    set_has_get_instances();
    req_type_.get_instances_ = get_instances;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Request.get_instances)
}
void Request::set_allocated_set(::usp::Set* set) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_req_type();
  if (set) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(set);
    if (message_arena != submessage_arena) {
      set = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, set, submessage_arena);
    }
    set_has_set();
    req_type_.set_ = set;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Request.set)
}
void Request::set_allocated_add(::usp::Add* add) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_req_type();
  if (add) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(add);
    if (message_arena != submessage_arena) {
      add = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, add, submessage_arena);
    }
    set_has_add();
    req_type_.add_ = add;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Request.add)
}
void Request::set_allocated_delete_(::usp::Delete* delete_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_req_type();
  if (delete_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(delete_);
    if (message_arena != submessage_arena) {
      delete_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_, submessage_arena);
    }
    set_has_delete_();
    req_type_.delete__ = delete_;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Request.delete)
}
void Request::set_allocated_operate(::usp::Operate* operate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_req_type();
  if (operate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(operate);
    if (message_arena != submessage_arena) {
      operate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, operate, submessage_arena);
    }
    set_has_operate();
    req_type_.operate_ = operate;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Request.operate)
}
void Request::set_allocated_notify(::usp::Notify* notify) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_req_type();
  if (notify) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(notify);
    if (message_arena != submessage_arena) {
      notify = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notify, submessage_arena);
    }
    set_has_notify();
    req_type_.notify_ = notify;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Request.notify)
}
void Request::set_allocated_get_supported_protocol(::usp::GetSupportedProtocol* get_supported_protocol) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_req_type();
  if (get_supported_protocol) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_supported_protocol);
    if (message_arena != submessage_arena) {
      get_supported_protocol = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_supported_protocol, submessage_arena);
    }
    set_has_get_supported_protocol();
    req_type_.get_supported_protocol_ = get_supported_protocol;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Request.get_supported_protocol)
}
Request::Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Request)
}
Request::Request(const Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_req_type();
  switch (from.req_type_case()) {
    case kGet: {
      _internal_mutable_get()->::usp::Get::MergeFrom(from._internal_get());
      break;
    }
    case kGetSupportedDm: {
      _internal_mutable_get_supported_dm()->::usp::GetSupportedDM::MergeFrom(from._internal_get_supported_dm());
      break;
    }
    case kGetInstances: {
      _internal_mutable_get_instances()->::usp::GetInstances::MergeFrom(from._internal_get_instances());
      break;
    }
    case kSet: {
      _internal_mutable_set()->::usp::Set::MergeFrom(from._internal_set());
      break;
    }
    case kAdd: {
      _internal_mutable_add()->::usp::Add::MergeFrom(from._internal_add());
      break;
    }
    case kDelete: {
      _internal_mutable_delete_()->::usp::Delete::MergeFrom(from._internal_delete_());
      break;
    }
    case kOperate: {
      _internal_mutable_operate()->::usp::Operate::MergeFrom(from._internal_operate());
      break;
    }
    case kNotify: {
      _internal_mutable_notify()->::usp::Notify::MergeFrom(from._internal_notify());
      break;
    }
    case kGetSupportedProtocol: {
      _internal_mutable_get_supported_protocol()->::usp::GetSupportedProtocol::MergeFrom(from._internal_get_supported_protocol());
      break;
    }
    case REQ_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:usp.Request)
}

void Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Request_usp_2dmsg_2d1_2d1_2eproto.base);
  clear_has_req_type();
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:usp.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_req_type()) {
    clear_req_type();
  }
}

void Request::ArenaDtor(void* object) {
  Request* _this = reinterpret_cast< Request* >(object);
  (void)_this;
}
void Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Request& Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Request_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Request::clear_req_type() {
// @@protoc_insertion_point(one_of_clear_start:usp.Request)
  switch (req_type_case()) {
    case kGet: {
      if (GetArena() == nullptr) {
        delete req_type_.get_;
      }
      break;
    }
    case kGetSupportedDm: {
      if (GetArena() == nullptr) {
        delete req_type_.get_supported_dm_;
      }
      break;
    }
    case kGetInstances: {
      if (GetArena() == nullptr) {
        delete req_type_.get_instances_;
      }
      break;
    }
    case kSet: {
      if (GetArena() == nullptr) {
        delete req_type_.set_;
      }
      break;
    }
    case kAdd: {
      if (GetArena() == nullptr) {
        delete req_type_.add_;
      }
      break;
    }
    case kDelete: {
      if (GetArena() == nullptr) {
        delete req_type_.delete__;
      }
      break;
    }
    case kOperate: {
      if (GetArena() == nullptr) {
        delete req_type_.operate_;
      }
      break;
    }
    case kNotify: {
      if (GetArena() == nullptr) {
        delete req_type_.notify_;
      }
      break;
    }
    case kGetSupportedProtocol: {
      if (GetArena() == nullptr) {
        delete req_type_.get_supported_protocol_;
      }
      break;
    }
    case REQ_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQ_TYPE_NOT_SET;
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_req_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .usp.Get get = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_get(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.GetSupportedDM get_supported_dm = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_supported_dm(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.GetInstances get_instances = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_instances(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Set set = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_set(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Add add = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_add(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Delete delete = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_delete_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Operate operate = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_operate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Notify notify = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_notify(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.GetSupportedProtocol get_supported_protocol = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_supported_protocol(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .usp.Get get = 1;
  if (_internal_has_get()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::get(this), target, stream);
  }

  // .usp.GetSupportedDM get_supported_dm = 2;
  if (_internal_has_get_supported_dm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::get_supported_dm(this), target, stream);
  }

  // .usp.GetInstances get_instances = 3;
  if (_internal_has_get_instances()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::get_instances(this), target, stream);
  }

  // .usp.Set set = 4;
  if (_internal_has_set()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::set(this), target, stream);
  }

  // .usp.Add add = 5;
  if (_internal_has_add()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::add(this), target, stream);
  }

  // .usp.Delete delete = 6;
  if (_internal_has_delete_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::delete_(this), target, stream);
  }

  // .usp.Operate operate = 7;
  if (_internal_has_operate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::operate(this), target, stream);
  }

  // .usp.Notify notify = 8;
  if (_internal_has_notify()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::notify(this), target, stream);
  }

  // .usp.GetSupportedProtocol get_supported_protocol = 9;
  if (_internal_has_get_supported_protocol()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::get_supported_protocol(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (req_type_case()) {
    // .usp.Get get = 1;
    case kGet: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *req_type_.get_);
      break;
    }
    // .usp.GetSupportedDM get_supported_dm = 2;
    case kGetSupportedDm: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *req_type_.get_supported_dm_);
      break;
    }
    // .usp.GetInstances get_instances = 3;
    case kGetInstances: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *req_type_.get_instances_);
      break;
    }
    // .usp.Set set = 4;
    case kSet: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *req_type_.set_);
      break;
    }
    // .usp.Add add = 5;
    case kAdd: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *req_type_.add_);
      break;
    }
    // .usp.Delete delete = 6;
    case kDelete: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *req_type_.delete__);
      break;
    }
    // .usp.Operate operate = 7;
    case kOperate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *req_type_.operate_);
      break;
    }
    // .usp.Notify notify = 8;
    case kNotify: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *req_type_.notify_);
      break;
    }
    // .usp.GetSupportedProtocol get_supported_protocol = 9;
    case kGetSupportedProtocol: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *req_type_.get_supported_protocol_);
      break;
    }
    case REQ_TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.req_type_case()) {
    case kGet: {
      _internal_mutable_get()->::usp::Get::MergeFrom(from._internal_get());
      break;
    }
    case kGetSupportedDm: {
      _internal_mutable_get_supported_dm()->::usp::GetSupportedDM::MergeFrom(from._internal_get_supported_dm());
      break;
    }
    case kGetInstances: {
      _internal_mutable_get_instances()->::usp::GetInstances::MergeFrom(from._internal_get_instances());
      break;
    }
    case kSet: {
      _internal_mutable_set()->::usp::Set::MergeFrom(from._internal_set());
      break;
    }
    case kAdd: {
      _internal_mutable_add()->::usp::Add::MergeFrom(from._internal_add());
      break;
    }
    case kDelete: {
      _internal_mutable_delete_()->::usp::Delete::MergeFrom(from._internal_delete_());
      break;
    }
    case kOperate: {
      _internal_mutable_operate()->::usp::Operate::MergeFrom(from._internal_operate());
      break;
    }
    case kNotify: {
      _internal_mutable_notify()->::usp::Notify::MergeFrom(from._internal_notify());
      break;
    }
    case kGetSupportedProtocol: {
      _internal_mutable_get_supported_protocol()->::usp::GetSupportedProtocol::MergeFrom(from._internal_get_supported_protocol());
      break;
    }
    case REQ_TYPE_NOT_SET: {
      break;
    }
  }
}

void Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::InternalSwap(Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(req_type_, other->req_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::usp::_Response_default_instance_.get_resp_ = const_cast< ::usp::GetResp*>(
      ::usp::GetResp::internal_default_instance());
  ::usp::_Response_default_instance_.get_supported_dm_resp_ = const_cast< ::usp::GetSupportedDMResp*>(
      ::usp::GetSupportedDMResp::internal_default_instance());
  ::usp::_Response_default_instance_.get_instances_resp_ = const_cast< ::usp::GetInstancesResp*>(
      ::usp::GetInstancesResp::internal_default_instance());
  ::usp::_Response_default_instance_.set_resp_ = const_cast< ::usp::SetResp*>(
      ::usp::SetResp::internal_default_instance());
  ::usp::_Response_default_instance_.add_resp_ = const_cast< ::usp::AddResp*>(
      ::usp::AddResp::internal_default_instance());
  ::usp::_Response_default_instance_.delete_resp_ = const_cast< ::usp::DeleteResp*>(
      ::usp::DeleteResp::internal_default_instance());
  ::usp::_Response_default_instance_.operate_resp_ = const_cast< ::usp::OperateResp*>(
      ::usp::OperateResp::internal_default_instance());
  ::usp::_Response_default_instance_.notify_resp_ = const_cast< ::usp::NotifyResp*>(
      ::usp::NotifyResp::internal_default_instance());
  ::usp::_Response_default_instance_.get_supported_protocol_resp_ = const_cast< ::usp::GetSupportedProtocolResp*>(
      ::usp::GetSupportedProtocolResp::internal_default_instance());
}
class Response::_Internal {
 public:
  static const ::usp::GetResp& get_resp(const Response* msg);
  static const ::usp::GetSupportedDMResp& get_supported_dm_resp(const Response* msg);
  static const ::usp::GetInstancesResp& get_instances_resp(const Response* msg);
  static const ::usp::SetResp& set_resp(const Response* msg);
  static const ::usp::AddResp& add_resp(const Response* msg);
  static const ::usp::DeleteResp& delete_resp(const Response* msg);
  static const ::usp::OperateResp& operate_resp(const Response* msg);
  static const ::usp::NotifyResp& notify_resp(const Response* msg);
  static const ::usp::GetSupportedProtocolResp& get_supported_protocol_resp(const Response* msg);
};

const ::usp::GetResp&
Response::_Internal::get_resp(const Response* msg) {
  return *msg->resp_type_.get_resp_;
}
const ::usp::GetSupportedDMResp&
Response::_Internal::get_supported_dm_resp(const Response* msg) {
  return *msg->resp_type_.get_supported_dm_resp_;
}
const ::usp::GetInstancesResp&
Response::_Internal::get_instances_resp(const Response* msg) {
  return *msg->resp_type_.get_instances_resp_;
}
const ::usp::SetResp&
Response::_Internal::set_resp(const Response* msg) {
  return *msg->resp_type_.set_resp_;
}
const ::usp::AddResp&
Response::_Internal::add_resp(const Response* msg) {
  return *msg->resp_type_.add_resp_;
}
const ::usp::DeleteResp&
Response::_Internal::delete_resp(const Response* msg) {
  return *msg->resp_type_.delete_resp_;
}
const ::usp::OperateResp&
Response::_Internal::operate_resp(const Response* msg) {
  return *msg->resp_type_.operate_resp_;
}
const ::usp::NotifyResp&
Response::_Internal::notify_resp(const Response* msg) {
  return *msg->resp_type_.notify_resp_;
}
const ::usp::GetSupportedProtocolResp&
Response::_Internal::get_supported_protocol_resp(const Response* msg) {
  return *msg->resp_type_.get_supported_protocol_resp_;
}
void Response::set_allocated_get_resp(::usp::GetResp* get_resp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resp_type();
  if (get_resp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_resp);
    if (message_arena != submessage_arena) {
      get_resp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_resp, submessage_arena);
    }
    set_has_get_resp();
    resp_type_.get_resp_ = get_resp;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Response.get_resp)
}
void Response::set_allocated_get_supported_dm_resp(::usp::GetSupportedDMResp* get_supported_dm_resp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resp_type();
  if (get_supported_dm_resp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_supported_dm_resp);
    if (message_arena != submessage_arena) {
      get_supported_dm_resp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_supported_dm_resp, submessage_arena);
    }
    set_has_get_supported_dm_resp();
    resp_type_.get_supported_dm_resp_ = get_supported_dm_resp;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Response.get_supported_dm_resp)
}
void Response::set_allocated_get_instances_resp(::usp::GetInstancesResp* get_instances_resp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resp_type();
  if (get_instances_resp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_instances_resp);
    if (message_arena != submessage_arena) {
      get_instances_resp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_instances_resp, submessage_arena);
    }
    set_has_get_instances_resp();
    resp_type_.get_instances_resp_ = get_instances_resp;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Response.get_instances_resp)
}
void Response::set_allocated_set_resp(::usp::SetResp* set_resp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resp_type();
  if (set_resp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(set_resp);
    if (message_arena != submessage_arena) {
      set_resp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, set_resp, submessage_arena);
    }
    set_has_set_resp();
    resp_type_.set_resp_ = set_resp;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Response.set_resp)
}
void Response::set_allocated_add_resp(::usp::AddResp* add_resp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resp_type();
  if (add_resp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(add_resp);
    if (message_arena != submessage_arena) {
      add_resp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, add_resp, submessage_arena);
    }
    set_has_add_resp();
    resp_type_.add_resp_ = add_resp;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Response.add_resp)
}
void Response::set_allocated_delete_resp(::usp::DeleteResp* delete_resp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resp_type();
  if (delete_resp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(delete_resp);
    if (message_arena != submessage_arena) {
      delete_resp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_resp, submessage_arena);
    }
    set_has_delete_resp();
    resp_type_.delete_resp_ = delete_resp;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Response.delete_resp)
}
void Response::set_allocated_operate_resp(::usp::OperateResp* operate_resp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resp_type();
  if (operate_resp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(operate_resp);
    if (message_arena != submessage_arena) {
      operate_resp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, operate_resp, submessage_arena);
    }
    set_has_operate_resp();
    resp_type_.operate_resp_ = operate_resp;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Response.operate_resp)
}
void Response::set_allocated_notify_resp(::usp::NotifyResp* notify_resp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resp_type();
  if (notify_resp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(notify_resp);
    if (message_arena != submessage_arena) {
      notify_resp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notify_resp, submessage_arena);
    }
    set_has_notify_resp();
    resp_type_.notify_resp_ = notify_resp;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Response.notify_resp)
}
void Response::set_allocated_get_supported_protocol_resp(::usp::GetSupportedProtocolResp* get_supported_protocol_resp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_resp_type();
  if (get_supported_protocol_resp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_supported_protocol_resp);
    if (message_arena != submessage_arena) {
      get_supported_protocol_resp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_supported_protocol_resp, submessage_arena);
    }
    set_has_get_supported_protocol_resp();
    resp_type_.get_supported_protocol_resp_ = get_supported_protocol_resp;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Response.get_supported_protocol_resp)
}
Response::Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Response)
}
Response::Response(const Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_resp_type();
  switch (from.resp_type_case()) {
    case kGetResp: {
      _internal_mutable_get_resp()->::usp::GetResp::MergeFrom(from._internal_get_resp());
      break;
    }
    case kGetSupportedDmResp: {
      _internal_mutable_get_supported_dm_resp()->::usp::GetSupportedDMResp::MergeFrom(from._internal_get_supported_dm_resp());
      break;
    }
    case kGetInstancesResp: {
      _internal_mutable_get_instances_resp()->::usp::GetInstancesResp::MergeFrom(from._internal_get_instances_resp());
      break;
    }
    case kSetResp: {
      _internal_mutable_set_resp()->::usp::SetResp::MergeFrom(from._internal_set_resp());
      break;
    }
    case kAddResp: {
      _internal_mutable_add_resp()->::usp::AddResp::MergeFrom(from._internal_add_resp());
      break;
    }
    case kDeleteResp: {
      _internal_mutable_delete_resp()->::usp::DeleteResp::MergeFrom(from._internal_delete_resp());
      break;
    }
    case kOperateResp: {
      _internal_mutable_operate_resp()->::usp::OperateResp::MergeFrom(from._internal_operate_resp());
      break;
    }
    case kNotifyResp: {
      _internal_mutable_notify_resp()->::usp::NotifyResp::MergeFrom(from._internal_notify_resp());
      break;
    }
    case kGetSupportedProtocolResp: {
      _internal_mutable_get_supported_protocol_resp()->::usp::GetSupportedProtocolResp::MergeFrom(from._internal_get_supported_protocol_resp());
      break;
    }
    case RESP_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:usp.Response)
}

void Response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Response_usp_2dmsg_2d1_2d1_2eproto.base);
  clear_has_resp_type();
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:usp.Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_resp_type()) {
    clear_resp_type();
  }
}

void Response::ArenaDtor(void* object) {
  Response* _this = reinterpret_cast< Response* >(object);
  (void)_this;
}
void Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Response& Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Response_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Response::clear_resp_type() {
// @@protoc_insertion_point(one_of_clear_start:usp.Response)
  switch (resp_type_case()) {
    case kGetResp: {
      if (GetArena() == nullptr) {
        delete resp_type_.get_resp_;
      }
      break;
    }
    case kGetSupportedDmResp: {
      if (GetArena() == nullptr) {
        delete resp_type_.get_supported_dm_resp_;
      }
      break;
    }
    case kGetInstancesResp: {
      if (GetArena() == nullptr) {
        delete resp_type_.get_instances_resp_;
      }
      break;
    }
    case kSetResp: {
      if (GetArena() == nullptr) {
        delete resp_type_.set_resp_;
      }
      break;
    }
    case kAddResp: {
      if (GetArena() == nullptr) {
        delete resp_type_.add_resp_;
      }
      break;
    }
    case kDeleteResp: {
      if (GetArena() == nullptr) {
        delete resp_type_.delete_resp_;
      }
      break;
    }
    case kOperateResp: {
      if (GetArena() == nullptr) {
        delete resp_type_.operate_resp_;
      }
      break;
    }
    case kNotifyResp: {
      if (GetArena() == nullptr) {
        delete resp_type_.notify_resp_;
      }
      break;
    }
    case kGetSupportedProtocolResp: {
      if (GetArena() == nullptr) {
        delete resp_type_.get_supported_protocol_resp_;
      }
      break;
    }
    case RESP_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESP_TYPE_NOT_SET;
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_resp_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .usp.GetResp get_resp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_resp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.GetSupportedDMResp get_supported_dm_resp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_supported_dm_resp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.GetInstancesResp get_instances_resp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_instances_resp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.SetResp set_resp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_set_resp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.AddResp add_resp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_add_resp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.DeleteResp delete_resp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_delete_resp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.OperateResp operate_resp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_operate_resp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.NotifyResp notify_resp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_notify_resp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.GetSupportedProtocolResp get_supported_protocol_resp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_supported_protocol_resp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .usp.GetResp get_resp = 1;
  if (_internal_has_get_resp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::get_resp(this), target, stream);
  }

  // .usp.GetSupportedDMResp get_supported_dm_resp = 2;
  if (_internal_has_get_supported_dm_resp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::get_supported_dm_resp(this), target, stream);
  }

  // .usp.GetInstancesResp get_instances_resp = 3;
  if (_internal_has_get_instances_resp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::get_instances_resp(this), target, stream);
  }

  // .usp.SetResp set_resp = 4;
  if (_internal_has_set_resp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::set_resp(this), target, stream);
  }

  // .usp.AddResp add_resp = 5;
  if (_internal_has_add_resp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::add_resp(this), target, stream);
  }

  // .usp.DeleteResp delete_resp = 6;
  if (_internal_has_delete_resp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::delete_resp(this), target, stream);
  }

  // .usp.OperateResp operate_resp = 7;
  if (_internal_has_operate_resp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::operate_resp(this), target, stream);
  }

  // .usp.NotifyResp notify_resp = 8;
  if (_internal_has_notify_resp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::notify_resp(this), target, stream);
  }

  // .usp.GetSupportedProtocolResp get_supported_protocol_resp = 9;
  if (_internal_has_get_supported_protocol_resp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::get_supported_protocol_resp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (resp_type_case()) {
    // .usp.GetResp get_resp = 1;
    case kGetResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resp_type_.get_resp_);
      break;
    }
    // .usp.GetSupportedDMResp get_supported_dm_resp = 2;
    case kGetSupportedDmResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resp_type_.get_supported_dm_resp_);
      break;
    }
    // .usp.GetInstancesResp get_instances_resp = 3;
    case kGetInstancesResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resp_type_.get_instances_resp_);
      break;
    }
    // .usp.SetResp set_resp = 4;
    case kSetResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resp_type_.set_resp_);
      break;
    }
    // .usp.AddResp add_resp = 5;
    case kAddResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resp_type_.add_resp_);
      break;
    }
    // .usp.DeleteResp delete_resp = 6;
    case kDeleteResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resp_type_.delete_resp_);
      break;
    }
    // .usp.OperateResp operate_resp = 7;
    case kOperateResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resp_type_.operate_resp_);
      break;
    }
    // .usp.NotifyResp notify_resp = 8;
    case kNotifyResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resp_type_.notify_resp_);
      break;
    }
    // .usp.GetSupportedProtocolResp get_supported_protocol_resp = 9;
    case kGetSupportedProtocolResp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *resp_type_.get_supported_protocol_resp_);
      break;
    }
    case RESP_TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.resp_type_case()) {
    case kGetResp: {
      _internal_mutable_get_resp()->::usp::GetResp::MergeFrom(from._internal_get_resp());
      break;
    }
    case kGetSupportedDmResp: {
      _internal_mutable_get_supported_dm_resp()->::usp::GetSupportedDMResp::MergeFrom(from._internal_get_supported_dm_resp());
      break;
    }
    case kGetInstancesResp: {
      _internal_mutable_get_instances_resp()->::usp::GetInstancesResp::MergeFrom(from._internal_get_instances_resp());
      break;
    }
    case kSetResp: {
      _internal_mutable_set_resp()->::usp::SetResp::MergeFrom(from._internal_set_resp());
      break;
    }
    case kAddResp: {
      _internal_mutable_add_resp()->::usp::AddResp::MergeFrom(from._internal_add_resp());
      break;
    }
    case kDeleteResp: {
      _internal_mutable_delete_resp()->::usp::DeleteResp::MergeFrom(from._internal_delete_resp());
      break;
    }
    case kOperateResp: {
      _internal_mutable_operate_resp()->::usp::OperateResp::MergeFrom(from._internal_operate_resp());
      break;
    }
    case kNotifyResp: {
      _internal_mutable_notify_resp()->::usp::NotifyResp::MergeFrom(from._internal_notify_resp());
      break;
    }
    case kGetSupportedProtocolResp: {
      _internal_mutable_get_supported_protocol_resp()->::usp::GetSupportedProtocolResp::MergeFrom(from._internal_get_supported_protocol_resp());
      break;
    }
    case RESP_TYPE_NOT_SET: {
      break;
    }
  }
}

void Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::InternalSwap(Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(resp_type_, other->resp_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Error_ParamError::InitAsDefaultInstance() {
}
class Error_ParamError::_Internal {
 public:
};

Error_ParamError::Error_ParamError(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Error.ParamError)
}
Error_ParamError::Error_ParamError(const Error_ParamError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_param_path().empty()) {
    param_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_path(),
      GetArena());
  }
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.Error.ParamError)
}

void Error_ParamError::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Error_ParamError_usp_2dmsg_2d1_2d1_2eproto.base);
  param_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

Error_ParamError::~Error_ParamError() {
  // @@protoc_insertion_point(destructor:usp.Error.ParamError)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Error_ParamError::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  param_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Error_ParamError::ArenaDtor(void* object) {
  Error_ParamError* _this = reinterpret_cast< Error_ParamError* >(object);
  (void)_this;
}
void Error_ParamError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Error_ParamError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Error_ParamError& Error_ParamError::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Error_ParamError_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Error_ParamError::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Error.ParamError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Error_ParamError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string param_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_param_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Error.ParamError.param_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // fixed32 err_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Error.ParamError.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Error_ParamError::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Error.ParamError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param_path = 1;
  if (this->param_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param_path().data(), static_cast<int>(this->_internal_param_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Error.ParamError.param_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_param_path(), target);
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_err_code(), target);
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Error.ParamError.err_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_err_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Error.ParamError)
  return target;
}

size_t Error_ParamError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Error.ParamError)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string param_path = 1;
  if (this->param_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param_path());
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error_ParamError::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Error.ParamError)
  GOOGLE_DCHECK_NE(&from, this);
  const Error_ParamError* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Error_ParamError>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Error.ParamError)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Error.ParamError)
    MergeFrom(*source);
  }
}

void Error_ParamError::MergeFrom(const Error_ParamError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Error.ParamError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param_path().size() > 0) {
    _internal_set_param_path(from._internal_param_path());
  }
  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void Error_ParamError::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Error.ParamError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error_ParamError::CopyFrom(const Error_ParamError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Error.ParamError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error_ParamError::IsInitialized() const {
  return true;
}

void Error_ParamError::InternalSwap(Error_ParamError* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_path_.Swap(&other->param_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Error_ParamError::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Error::InitAsDefaultInstance() {
}
class Error::_Internal {
 public:
};

Error::Error(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_errs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Error)
}
Error::Error(const Error& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      param_errs_(from.param_errs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.Error)
}

void Error::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Error_usp_2dmsg_2d1_2d1_2eproto.base);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:usp.Error)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Error::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Error::ArenaDtor(void* object) {
  Error* _this = reinterpret_cast< Error* >(object);
  (void)_this;
}
void Error::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Error& Error::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Error_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Error)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_errs_.Clear();
  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Error::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // fixed32 err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Error.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.Error.ParamError param_errs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_param_errs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Error::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Error)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(1, this->_internal_err_code(), target);
  }

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Error.err_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_err_msg(), target);
  }

  // repeated .usp.Error.ParamError param_errs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_param_errs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_param_errs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Error)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.Error.ParamError param_errs = 3;
  total_size += 1UL * this->_internal_param_errs_size();
  for (const auto& msg : this->param_errs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Error>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Error)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_errs_.MergeFrom(from.param_errs_);
  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void Error::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::InternalSwap(Error* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_errs_.InternalSwap(&other->param_errs_);
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Error::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Get::InitAsDefaultInstance() {
}
class Get::_Internal {
 public:
};

Get::Get(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_paths_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Get)
}
Get::Get(const Get& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      param_paths_(from.param_paths_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usp.Get)
}

void Get::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Get_usp_2dmsg_2d1_2d1_2eproto.base);
}

Get::~Get() {
  // @@protoc_insertion_point(destructor:usp.Get)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Get::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Get::ArenaDtor(void* object) {
  Get* _this = reinterpret_cast< Get* >(object);
  (void)_this;
}
void Get::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Get::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Get& Get::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Get_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Get::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Get)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_paths_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Get::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string param_paths = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_param_paths();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Get.param_paths"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Get::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Get)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string param_paths = 1;
  for (int i = 0, n = this->_internal_param_paths_size(); i < n; i++) {
    const auto& s = this->_internal_param_paths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Get.param_paths");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Get)
  return target;
}

size_t Get::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Get)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string param_paths = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(param_paths_.size());
  for (int i = 0, n = param_paths_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      param_paths_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Get::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Get)
  GOOGLE_DCHECK_NE(&from, this);
  const Get* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Get>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Get)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Get)
    MergeFrom(*source);
  }
}

void Get::MergeFrom(const Get& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Get)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_paths_.MergeFrom(from.param_paths_);
}

void Get::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Get)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Get::CopyFrom(const Get& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Get)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Get::IsInitialized() const {
  return true;
}

void Get::InternalSwap(Get* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_paths_.InternalSwap(&other->param_paths_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Get::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetResp_RequestedPathResult::InitAsDefaultInstance() {
}
class GetResp_RequestedPathResult::_Internal {
 public:
};

GetResp_RequestedPathResult::GetResp_RequestedPathResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  resolved_path_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetResp.RequestedPathResult)
}
GetResp_RequestedPathResult::GetResp_RequestedPathResult(const GetResp_RequestedPathResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      resolved_path_results_(from.resolved_path_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  requested_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requested_path().empty()) {
    requested_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_requested_path(),
      GetArena());
  }
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.GetResp.RequestedPathResult)
}

void GetResp_RequestedPathResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto.base);
  requested_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

GetResp_RequestedPathResult::~GetResp_RequestedPathResult() {
  // @@protoc_insertion_point(destructor:usp.GetResp.RequestedPathResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResp_RequestedPathResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  requested_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetResp_RequestedPathResult::ArenaDtor(void* object) {
  GetResp_RequestedPathResult* _this = reinterpret_cast< GetResp_RequestedPathResult* >(object);
  (void)_this;
}
void GetResp_RequestedPathResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResp_RequestedPathResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResp_RequestedPathResult& GetResp_RequestedPathResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetResp_RequestedPathResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetResp.RequestedPathResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resolved_path_results_.Clear();
  requested_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResp_RequestedPathResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string requested_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_requested_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetResp.RequestedPathResult.requested_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // fixed32 err_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetResp.RequestedPathResult.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.GetResp.ResolvedPathResult resolved_path_results = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resolved_path_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResp_RequestedPathResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetResp.RequestedPathResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requested_path = 1;
  if (this->requested_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requested_path().data(), static_cast<int>(this->_internal_requested_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetResp.RequestedPathResult.requested_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_requested_path(), target);
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_err_code(), target);
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetResp.RequestedPathResult.err_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_err_msg(), target);
  }

  // repeated .usp.GetResp.ResolvedPathResult resolved_path_results = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_resolved_path_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_resolved_path_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetResp.RequestedPathResult)
  return target;
}

size_t GetResp_RequestedPathResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetResp.RequestedPathResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.GetResp.ResolvedPathResult resolved_path_results = 4;
  total_size += 1UL * this->_internal_resolved_path_results_size();
  for (const auto& msg : this->resolved_path_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string requested_path = 1;
  if (this->requested_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requested_path());
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResp_RequestedPathResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetResp.RequestedPathResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResp_RequestedPathResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResp_RequestedPathResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetResp.RequestedPathResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetResp.RequestedPathResult)
    MergeFrom(*source);
  }
}

void GetResp_RequestedPathResult::MergeFrom(const GetResp_RequestedPathResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetResp.RequestedPathResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resolved_path_results_.MergeFrom(from.resolved_path_results_);
  if (from.requested_path().size() > 0) {
    _internal_set_requested_path(from._internal_requested_path());
  }
  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void GetResp_RequestedPathResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetResp.RequestedPathResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResp_RequestedPathResult::CopyFrom(const GetResp_RequestedPathResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetResp.RequestedPathResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResp_RequestedPathResult::IsInitialized() const {
  return true;
}

void GetResp_RequestedPathResult::InternalSwap(GetResp_RequestedPathResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  resolved_path_results_.InternalSwap(&other->resolved_path_results_);
  requested_path_.Swap(&other->requested_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResp_RequestedPathResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse() {}
GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse::MergeFrom(const GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetResp_ResolvedPathResult::InitAsDefaultInstance() {
}
class GetResp_ResolvedPathResult::_Internal {
 public:
};

GetResp_ResolvedPathResult::GetResp_ResolvedPathResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  result_params_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetResp.ResolvedPathResult)
}
GetResp_ResolvedPathResult::GetResp_ResolvedPathResult(const GetResp_ResolvedPathResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_params_.MergeFrom(from.result_params_);
  resolved_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resolved_path().empty()) {
    resolved_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_resolved_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.GetResp.ResolvedPathResult)
}

void GetResp_ResolvedPathResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResp_ResolvedPathResult_usp_2dmsg_2d1_2d1_2eproto.base);
  resolved_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetResp_ResolvedPathResult::~GetResp_ResolvedPathResult() {
  // @@protoc_insertion_point(destructor:usp.GetResp.ResolvedPathResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResp_ResolvedPathResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  resolved_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetResp_ResolvedPathResult::ArenaDtor(void* object) {
  GetResp_ResolvedPathResult* _this = reinterpret_cast< GetResp_ResolvedPathResult* >(object);
  (void)_this;
}
void GetResp_ResolvedPathResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResp_ResolvedPathResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResp_ResolvedPathResult& GetResp_ResolvedPathResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResp_ResolvedPathResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetResp_ResolvedPathResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetResp.ResolvedPathResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_params_.Clear();
  resolved_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResp_ResolvedPathResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string resolved_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_resolved_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetResp.ResolvedPathResult.resolved_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> result_params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&result_params_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResp_ResolvedPathResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetResp.ResolvedPathResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resolved_path = 1;
  if (this->resolved_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resolved_path().data(), static_cast<int>(this->_internal_resolved_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetResp.ResolvedPathResult.resolved_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resolved_path(), target);
  }

  // map<string, string> result_params = 2;
  if (!this->_internal_result_params().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.GetResp.ResolvedPathResult.ResultParamsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.GetResp.ResolvedPathResult.ResultParamsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_result_params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_result_params().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_result_params().begin();
          it != this->_internal_result_params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_result_params().begin();
          it != this->_internal_result_params().end(); ++it) {
        target = GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetResp.ResolvedPathResult)
  return target;
}

size_t GetResp_ResolvedPathResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetResp.ResolvedPathResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> result_params = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_result_params_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_result_params().begin();
      it != this->_internal_result_params().end(); ++it) {
    total_size += GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string resolved_path = 1;
  if (this->resolved_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resolved_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResp_ResolvedPathResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetResp.ResolvedPathResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResp_ResolvedPathResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResp_ResolvedPathResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetResp.ResolvedPathResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetResp.ResolvedPathResult)
    MergeFrom(*source);
  }
}

void GetResp_ResolvedPathResult::MergeFrom(const GetResp_ResolvedPathResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetResp.ResolvedPathResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_params_.MergeFrom(from.result_params_);
  if (from.resolved_path().size() > 0) {
    _internal_set_resolved_path(from._internal_resolved_path());
  }
}

void GetResp_ResolvedPathResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetResp.ResolvedPathResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResp_ResolvedPathResult::CopyFrom(const GetResp_ResolvedPathResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetResp.ResolvedPathResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResp_ResolvedPathResult::IsInitialized() const {
  return true;
}

void GetResp_ResolvedPathResult::InternalSwap(GetResp_ResolvedPathResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_params_.Swap(&other->result_params_);
  resolved_path_.Swap(&other->resolved_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResp_ResolvedPathResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetResp::InitAsDefaultInstance() {
}
class GetResp::_Internal {
 public:
};

GetResp::GetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  req_path_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetResp)
}
GetResp::GetResp(const GetResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      req_path_results_(from.req_path_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usp.GetResp)
}

void GetResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResp_usp_2dmsg_2d1_2d1_2eproto.base);
}

GetResp::~GetResp() {
  // @@protoc_insertion_point(destructor:usp.GetResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetResp::ArenaDtor(void* object) {
  GetResp* _this = reinterpret_cast< GetResp* >(object);
  (void)_this;
}
void GetResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResp& GetResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResp_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetResp::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_path_results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .usp.GetResp.RequestedPathResult req_path_results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_req_path_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .usp.GetResp.RequestedPathResult req_path_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_req_path_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_req_path_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetResp)
  return target;
}

size_t GetResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.GetResp.RequestedPathResult req_path_results = 1;
  total_size += 1UL * this->_internal_req_path_results_size();
  for (const auto& msg : this->req_path_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetResp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetResp)
    MergeFrom(*source);
  }
}

void GetResp::MergeFrom(const GetResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  req_path_results_.MergeFrom(from.req_path_results_);
}

void GetResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResp::CopyFrom(const GetResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResp::IsInitialized() const {
  return true;
}

void GetResp::InternalSwap(GetResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  req_path_results_.InternalSwap(&other->req_path_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSupportedDM::InitAsDefaultInstance() {
}
class GetSupportedDM::_Internal {
 public:
};

GetSupportedDM::GetSupportedDM(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  obj_paths_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetSupportedDM)
}
GetSupportedDM::GetSupportedDM(const GetSupportedDM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      obj_paths_(from.obj_paths_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&first_level_only_, &from.first_level_only_,
    static_cast<size_t>(reinterpret_cast<char*>(&return_params_) -
    reinterpret_cast<char*>(&first_level_only_)) + sizeof(return_params_));
  // @@protoc_insertion_point(copy_constructor:usp.GetSupportedDM)
}

void GetSupportedDM::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSupportedDM_usp_2dmsg_2d1_2d1_2eproto.base);
  ::memset(&first_level_only_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&return_params_) -
      reinterpret_cast<char*>(&first_level_only_)) + sizeof(return_params_));
}

GetSupportedDM::~GetSupportedDM() {
  // @@protoc_insertion_point(destructor:usp.GetSupportedDM)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSupportedDM::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetSupportedDM::ArenaDtor(void* object) {
  GetSupportedDM* _this = reinterpret_cast< GetSupportedDM* >(object);
  (void)_this;
}
void GetSupportedDM::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSupportedDM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSupportedDM& GetSupportedDM::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSupportedDM_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetSupportedDM::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetSupportedDM)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_paths_.Clear();
  ::memset(&first_level_only_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&return_params_) -
      reinterpret_cast<char*>(&first_level_only_)) + sizeof(return_params_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedDM::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string obj_paths = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_obj_paths();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDM.obj_paths"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // bool first_level_only = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          first_level_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool return_commands = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          return_commands_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool return_events = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          return_events_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool return_params = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          return_params_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSupportedDM::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetSupportedDM)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string obj_paths = 1;
  for (int i = 0, n = this->_internal_obj_paths_size(); i < n; i++) {
    const auto& s = this->_internal_obj_paths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDM.obj_paths");
    target = stream->WriteString(1, s, target);
  }

  // bool first_level_only = 2;
  if (this->first_level_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_first_level_only(), target);
  }

  // bool return_commands = 3;
  if (this->return_commands() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_return_commands(), target);
  }

  // bool return_events = 4;
  if (this->return_events() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_return_events(), target);
  }

  // bool return_params = 5;
  if (this->return_params() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_return_params(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetSupportedDM)
  return target;
}

size_t GetSupportedDM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetSupportedDM)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string obj_paths = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(obj_paths_.size());
  for (int i = 0, n = obj_paths_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      obj_paths_.Get(i));
  }

  // bool first_level_only = 2;
  if (this->first_level_only() != 0) {
    total_size += 1 + 1;
  }

  // bool return_commands = 3;
  if (this->return_commands() != 0) {
    total_size += 1 + 1;
  }

  // bool return_events = 4;
  if (this->return_events() != 0) {
    total_size += 1 + 1;
  }

  // bool return_params = 5;
  if (this->return_params() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSupportedDM::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetSupportedDM)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportedDM* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSupportedDM>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetSupportedDM)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetSupportedDM)
    MergeFrom(*source);
  }
}

void GetSupportedDM::MergeFrom(const GetSupportedDM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetSupportedDM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obj_paths_.MergeFrom(from.obj_paths_);
  if (from.first_level_only() != 0) {
    _internal_set_first_level_only(from._internal_first_level_only());
  }
  if (from.return_commands() != 0) {
    _internal_set_return_commands(from._internal_return_commands());
  }
  if (from.return_events() != 0) {
    _internal_set_return_events(from._internal_return_events());
  }
  if (from.return_params() != 0) {
    _internal_set_return_params(from._internal_return_params());
  }
}

void GetSupportedDM::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetSupportedDM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportedDM::CopyFrom(const GetSupportedDM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetSupportedDM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedDM::IsInitialized() const {
  return true;
}

void GetSupportedDM::InternalSwap(GetSupportedDM* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  obj_paths_.InternalSwap(&other->obj_paths_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSupportedDM, return_params_)
      + sizeof(GetSupportedDM::return_params_)
      - PROTOBUF_FIELD_OFFSET(GetSupportedDM, first_level_only_)>(
          reinterpret_cast<char*>(&first_level_only_),
          reinterpret_cast<char*>(&other->first_level_only_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedDM::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSupportedDMResp_RequestedObjectResult::InitAsDefaultInstance() {
}
class GetSupportedDMResp_RequestedObjectResult::_Internal {
 public:
};

GetSupportedDMResp_RequestedObjectResult::GetSupportedDMResp_RequestedObjectResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  supported_objs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetSupportedDMResp.RequestedObjectResult)
}
GetSupportedDMResp_RequestedObjectResult::GetSupportedDMResp_RequestedObjectResult(const GetSupportedDMResp_RequestedObjectResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      supported_objs_(from.supported_objs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  req_obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_req_obj_path().empty()) {
    req_obj_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_req_obj_path(),
      GetArena());
  }
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  data_model_inst_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_model_inst_uri().empty()) {
    data_model_inst_uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data_model_inst_uri(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.GetSupportedDMResp.RequestedObjectResult)
}

void GetSupportedDMResp_RequestedObjectResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSupportedDMResp_RequestedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base);
  req_obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_model_inst_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

GetSupportedDMResp_RequestedObjectResult::~GetSupportedDMResp_RequestedObjectResult() {
  // @@protoc_insertion_point(destructor:usp.GetSupportedDMResp.RequestedObjectResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSupportedDMResp_RequestedObjectResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  req_obj_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_model_inst_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSupportedDMResp_RequestedObjectResult::ArenaDtor(void* object) {
  GetSupportedDMResp_RequestedObjectResult* _this = reinterpret_cast< GetSupportedDMResp_RequestedObjectResult* >(object);
  (void)_this;
}
void GetSupportedDMResp_RequestedObjectResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSupportedDMResp_RequestedObjectResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSupportedDMResp_RequestedObjectResult& GetSupportedDMResp_RequestedObjectResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSupportedDMResp_RequestedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetSupportedDMResp_RequestedObjectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetSupportedDMResp.RequestedObjectResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supported_objs_.Clear();
  req_obj_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_model_inst_uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedDMResp_RequestedObjectResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string req_obj_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_req_obj_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDMResp.RequestedObjectResult.req_obj_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // fixed32 err_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDMResp.RequestedObjectResult.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string data_model_inst_uri = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_data_model_inst_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDMResp.RequestedObjectResult.data_model_inst_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.GetSupportedDMResp.SupportedObjectResult supported_objs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_supported_objs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSupportedDMResp_RequestedObjectResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetSupportedDMResp.RequestedObjectResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string req_obj_path = 1;
  if (this->req_obj_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_req_obj_path().data(), static_cast<int>(this->_internal_req_obj_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDMResp.RequestedObjectResult.req_obj_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_req_obj_path(), target);
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_err_code(), target);
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDMResp.RequestedObjectResult.err_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_err_msg(), target);
  }

  // string data_model_inst_uri = 4;
  if (this->data_model_inst_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_model_inst_uri().data(), static_cast<int>(this->_internal_data_model_inst_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDMResp.RequestedObjectResult.data_model_inst_uri");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_data_model_inst_uri(), target);
  }

  // repeated .usp.GetSupportedDMResp.SupportedObjectResult supported_objs = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_supported_objs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_supported_objs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetSupportedDMResp.RequestedObjectResult)
  return target;
}

size_t GetSupportedDMResp_RequestedObjectResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetSupportedDMResp.RequestedObjectResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.GetSupportedDMResp.SupportedObjectResult supported_objs = 5;
  total_size += 1UL * this->_internal_supported_objs_size();
  for (const auto& msg : this->supported_objs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string req_obj_path = 1;
  if (this->req_obj_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_req_obj_path());
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // string data_model_inst_uri = 4;
  if (this->data_model_inst_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_model_inst_uri());
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSupportedDMResp_RequestedObjectResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetSupportedDMResp.RequestedObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportedDMResp_RequestedObjectResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSupportedDMResp_RequestedObjectResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetSupportedDMResp.RequestedObjectResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetSupportedDMResp.RequestedObjectResult)
    MergeFrom(*source);
  }
}

void GetSupportedDMResp_RequestedObjectResult::MergeFrom(const GetSupportedDMResp_RequestedObjectResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetSupportedDMResp.RequestedObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  supported_objs_.MergeFrom(from.supported_objs_);
  if (from.req_obj_path().size() > 0) {
    _internal_set_req_obj_path(from._internal_req_obj_path());
  }
  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.data_model_inst_uri().size() > 0) {
    _internal_set_data_model_inst_uri(from._internal_data_model_inst_uri());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void GetSupportedDMResp_RequestedObjectResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetSupportedDMResp.RequestedObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportedDMResp_RequestedObjectResult::CopyFrom(const GetSupportedDMResp_RequestedObjectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetSupportedDMResp.RequestedObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedDMResp_RequestedObjectResult::IsInitialized() const {
  return true;
}

void GetSupportedDMResp_RequestedObjectResult::InternalSwap(GetSupportedDMResp_RequestedObjectResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  supported_objs_.InternalSwap(&other->supported_objs_);
  req_obj_path_.Swap(&other->req_obj_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_model_inst_uri_.Swap(&other->data_model_inst_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedDMResp_RequestedObjectResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSupportedDMResp_SupportedObjectResult::InitAsDefaultInstance() {
}
class GetSupportedDMResp_SupportedObjectResult::_Internal {
 public:
};

GetSupportedDMResp_SupportedObjectResult::GetSupportedDMResp_SupportedObjectResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  supported_commands_(arena),
  supported_events_(arena),
  supported_params_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetSupportedDMResp.SupportedObjectResult)
}
GetSupportedDMResp_SupportedObjectResult::GetSupportedDMResp_SupportedObjectResult(const GetSupportedDMResp_SupportedObjectResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      supported_commands_(from.supported_commands_),
      supported_events_(from.supported_events_),
      supported_params_(from.supported_params_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  supported_obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_supported_obj_path().empty()) {
    supported_obj_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_supported_obj_path(),
      GetArena());
  }
  ::memcpy(&access_, &from.access_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_multi_instance_) -
    reinterpret_cast<char*>(&access_)) + sizeof(is_multi_instance_));
  // @@protoc_insertion_point(copy_constructor:usp.GetSupportedDMResp.SupportedObjectResult)
}

void GetSupportedDMResp_SupportedObjectResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSupportedDMResp_SupportedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base);
  supported_obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&access_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_multi_instance_) -
      reinterpret_cast<char*>(&access_)) + sizeof(is_multi_instance_));
}

GetSupportedDMResp_SupportedObjectResult::~GetSupportedDMResp_SupportedObjectResult() {
  // @@protoc_insertion_point(destructor:usp.GetSupportedDMResp.SupportedObjectResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSupportedDMResp_SupportedObjectResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  supported_obj_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSupportedDMResp_SupportedObjectResult::ArenaDtor(void* object) {
  GetSupportedDMResp_SupportedObjectResult* _this = reinterpret_cast< GetSupportedDMResp_SupportedObjectResult* >(object);
  (void)_this;
}
void GetSupportedDMResp_SupportedObjectResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSupportedDMResp_SupportedObjectResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSupportedDMResp_SupportedObjectResult& GetSupportedDMResp_SupportedObjectResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSupportedDMResp_SupportedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetSupportedDMResp_SupportedObjectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetSupportedDMResp.SupportedObjectResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supported_commands_.Clear();
  supported_events_.Clear();
  supported_params_.Clear();
  supported_obj_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&access_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_multi_instance_) -
      reinterpret_cast<char*>(&access_)) + sizeof(is_multi_instance_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedDMResp_SupportedObjectResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string supported_obj_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_supported_obj_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDMResp.SupportedObjectResult.supported_obj_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.GetSupportedDMResp.ObjAccessType access = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_access(static_cast<::usp::GetSupportedDMResp_ObjAccessType>(val));
        } else goto handle_unusual;
        continue;
      // bool is_multi_instance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          is_multi_instance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.GetSupportedDMResp.SupportedCommandResult supported_commands = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_supported_commands(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .usp.GetSupportedDMResp.SupportedEventResult supported_events = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_supported_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .usp.GetSupportedDMResp.SupportedParamResult supported_params = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_supported_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSupportedDMResp_SupportedObjectResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetSupportedDMResp.SupportedObjectResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string supported_obj_path = 1;
  if (this->supported_obj_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_supported_obj_path().data(), static_cast<int>(this->_internal_supported_obj_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDMResp.SupportedObjectResult.supported_obj_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_supported_obj_path(), target);
  }

  // .usp.GetSupportedDMResp.ObjAccessType access = 2;
  if (this->access() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_access(), target);
  }

  // bool is_multi_instance = 3;
  if (this->is_multi_instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_multi_instance(), target);
  }

  // repeated .usp.GetSupportedDMResp.SupportedCommandResult supported_commands = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_supported_commands_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_supported_commands(i), target, stream);
  }

  // repeated .usp.GetSupportedDMResp.SupportedEventResult supported_events = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_supported_events_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_supported_events(i), target, stream);
  }

  // repeated .usp.GetSupportedDMResp.SupportedParamResult supported_params = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_supported_params_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_supported_params(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetSupportedDMResp.SupportedObjectResult)
  return target;
}

size_t GetSupportedDMResp_SupportedObjectResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetSupportedDMResp.SupportedObjectResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.GetSupportedDMResp.SupportedCommandResult supported_commands = 4;
  total_size += 1UL * this->_internal_supported_commands_size();
  for (const auto& msg : this->supported_commands_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .usp.GetSupportedDMResp.SupportedEventResult supported_events = 5;
  total_size += 1UL * this->_internal_supported_events_size();
  for (const auto& msg : this->supported_events_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .usp.GetSupportedDMResp.SupportedParamResult supported_params = 6;
  total_size += 1UL * this->_internal_supported_params_size();
  for (const auto& msg : this->supported_params_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string supported_obj_path = 1;
  if (this->supported_obj_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_supported_obj_path());
  }

  // .usp.GetSupportedDMResp.ObjAccessType access = 2;
  if (this->access() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_access());
  }

  // bool is_multi_instance = 3;
  if (this->is_multi_instance() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSupportedDMResp_SupportedObjectResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetSupportedDMResp.SupportedObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportedDMResp_SupportedObjectResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSupportedDMResp_SupportedObjectResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetSupportedDMResp.SupportedObjectResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetSupportedDMResp.SupportedObjectResult)
    MergeFrom(*source);
  }
}

void GetSupportedDMResp_SupportedObjectResult::MergeFrom(const GetSupportedDMResp_SupportedObjectResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetSupportedDMResp.SupportedObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  supported_commands_.MergeFrom(from.supported_commands_);
  supported_events_.MergeFrom(from.supported_events_);
  supported_params_.MergeFrom(from.supported_params_);
  if (from.supported_obj_path().size() > 0) {
    _internal_set_supported_obj_path(from._internal_supported_obj_path());
  }
  if (from.access() != 0) {
    _internal_set_access(from._internal_access());
  }
  if (from.is_multi_instance() != 0) {
    _internal_set_is_multi_instance(from._internal_is_multi_instance());
  }
}

void GetSupportedDMResp_SupportedObjectResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetSupportedDMResp.SupportedObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportedDMResp_SupportedObjectResult::CopyFrom(const GetSupportedDMResp_SupportedObjectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetSupportedDMResp.SupportedObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedDMResp_SupportedObjectResult::IsInitialized() const {
  return true;
}

void GetSupportedDMResp_SupportedObjectResult::InternalSwap(GetSupportedDMResp_SupportedObjectResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  supported_commands_.InternalSwap(&other->supported_commands_);
  supported_events_.InternalSwap(&other->supported_events_);
  supported_params_.InternalSwap(&other->supported_params_);
  supported_obj_path_.Swap(&other->supported_obj_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSupportedDMResp_SupportedObjectResult, is_multi_instance_)
      + sizeof(GetSupportedDMResp_SupportedObjectResult::is_multi_instance_)
      - PROTOBUF_FIELD_OFFSET(GetSupportedDMResp_SupportedObjectResult, access_)>(
          reinterpret_cast<char*>(&access_),
          reinterpret_cast<char*>(&other->access_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedDMResp_SupportedObjectResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSupportedDMResp_SupportedParamResult::InitAsDefaultInstance() {
}
class GetSupportedDMResp_SupportedParamResult::_Internal {
 public:
};

GetSupportedDMResp_SupportedParamResult::GetSupportedDMResp_SupportedParamResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetSupportedDMResp.SupportedParamResult)
}
GetSupportedDMResp_SupportedParamResult::GetSupportedDMResp_SupportedParamResult(const GetSupportedDMResp_SupportedParamResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_param_name().empty()) {
    param_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_name(),
      GetArena());
  }
  access_ = from.access_;
  // @@protoc_insertion_point(copy_constructor:usp.GetSupportedDMResp.SupportedParamResult)
}

void GetSupportedDMResp_SupportedParamResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSupportedDMResp_SupportedParamResult_usp_2dmsg_2d1_2d1_2eproto.base);
  param_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  access_ = 0;
}

GetSupportedDMResp_SupportedParamResult::~GetSupportedDMResp_SupportedParamResult() {
  // @@protoc_insertion_point(destructor:usp.GetSupportedDMResp.SupportedParamResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSupportedDMResp_SupportedParamResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  param_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSupportedDMResp_SupportedParamResult::ArenaDtor(void* object) {
  GetSupportedDMResp_SupportedParamResult* _this = reinterpret_cast< GetSupportedDMResp_SupportedParamResult* >(object);
  (void)_this;
}
void GetSupportedDMResp_SupportedParamResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSupportedDMResp_SupportedParamResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSupportedDMResp_SupportedParamResult& GetSupportedDMResp_SupportedParamResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSupportedDMResp_SupportedParamResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetSupportedDMResp_SupportedParamResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetSupportedDMResp.SupportedParamResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  access_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedDMResp_SupportedParamResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string param_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_param_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDMResp.SupportedParamResult.param_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.GetSupportedDMResp.ParamAccessType access = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_access(static_cast<::usp::GetSupportedDMResp_ParamAccessType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSupportedDMResp_SupportedParamResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetSupportedDMResp.SupportedParamResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param_name = 1;
  if (this->param_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param_name().data(), static_cast<int>(this->_internal_param_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDMResp.SupportedParamResult.param_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_param_name(), target);
  }

  // .usp.GetSupportedDMResp.ParamAccessType access = 2;
  if (this->access() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_access(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetSupportedDMResp.SupportedParamResult)
  return target;
}

size_t GetSupportedDMResp_SupportedParamResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetSupportedDMResp.SupportedParamResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string param_name = 1;
  if (this->param_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param_name());
  }

  // .usp.GetSupportedDMResp.ParamAccessType access = 2;
  if (this->access() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_access());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSupportedDMResp_SupportedParamResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetSupportedDMResp.SupportedParamResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportedDMResp_SupportedParamResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSupportedDMResp_SupportedParamResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetSupportedDMResp.SupportedParamResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetSupportedDMResp.SupportedParamResult)
    MergeFrom(*source);
  }
}

void GetSupportedDMResp_SupportedParamResult::MergeFrom(const GetSupportedDMResp_SupportedParamResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetSupportedDMResp.SupportedParamResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param_name().size() > 0) {
    _internal_set_param_name(from._internal_param_name());
  }
  if (from.access() != 0) {
    _internal_set_access(from._internal_access());
  }
}

void GetSupportedDMResp_SupportedParamResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetSupportedDMResp.SupportedParamResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportedDMResp_SupportedParamResult::CopyFrom(const GetSupportedDMResp_SupportedParamResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetSupportedDMResp.SupportedParamResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedDMResp_SupportedParamResult::IsInitialized() const {
  return true;
}

void GetSupportedDMResp_SupportedParamResult::InternalSwap(GetSupportedDMResp_SupportedParamResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_name_.Swap(&other->param_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(access_, other->access_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedDMResp_SupportedParamResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSupportedDMResp_SupportedCommandResult::InitAsDefaultInstance() {
}
class GetSupportedDMResp_SupportedCommandResult::_Internal {
 public:
};

GetSupportedDMResp_SupportedCommandResult::GetSupportedDMResp_SupportedCommandResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  input_arg_names_(arena),
  output_arg_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetSupportedDMResp.SupportedCommandResult)
}
GetSupportedDMResp_SupportedCommandResult::GetSupportedDMResp_SupportedCommandResult(const GetSupportedDMResp_SupportedCommandResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      input_arg_names_(from.input_arg_names_),
      output_arg_names_(from.output_arg_names_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command_name().empty()) {
    command_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_command_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.GetSupportedDMResp.SupportedCommandResult)
}

void GetSupportedDMResp_SupportedCommandResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSupportedDMResp_SupportedCommandResult_usp_2dmsg_2d1_2d1_2eproto.base);
  command_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSupportedDMResp_SupportedCommandResult::~GetSupportedDMResp_SupportedCommandResult() {
  // @@protoc_insertion_point(destructor:usp.GetSupportedDMResp.SupportedCommandResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSupportedDMResp_SupportedCommandResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSupportedDMResp_SupportedCommandResult::ArenaDtor(void* object) {
  GetSupportedDMResp_SupportedCommandResult* _this = reinterpret_cast< GetSupportedDMResp_SupportedCommandResult* >(object);
  (void)_this;
}
void GetSupportedDMResp_SupportedCommandResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSupportedDMResp_SupportedCommandResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSupportedDMResp_SupportedCommandResult& GetSupportedDMResp_SupportedCommandResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSupportedDMResp_SupportedCommandResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetSupportedDMResp_SupportedCommandResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetSupportedDMResp.SupportedCommandResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_arg_names_.Clear();
  output_arg_names_.Clear();
  command_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedDMResp_SupportedCommandResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDMResp.SupportedCommandResult.command_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string input_arg_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_input_arg_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDMResp.SupportedCommandResult.input_arg_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string output_arg_names = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_output_arg_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDMResp.SupportedCommandResult.output_arg_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSupportedDMResp_SupportedCommandResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetSupportedDMResp.SupportedCommandResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command_name = 1;
  if (this->command_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command_name().data(), static_cast<int>(this->_internal_command_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDMResp.SupportedCommandResult.command_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command_name(), target);
  }

  // repeated string input_arg_names = 2;
  for (int i = 0, n = this->_internal_input_arg_names_size(); i < n; i++) {
    const auto& s = this->_internal_input_arg_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDMResp.SupportedCommandResult.input_arg_names");
    target = stream->WriteString(2, s, target);
  }

  // repeated string output_arg_names = 3;
  for (int i = 0, n = this->_internal_output_arg_names_size(); i < n; i++) {
    const auto& s = this->_internal_output_arg_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDMResp.SupportedCommandResult.output_arg_names");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetSupportedDMResp.SupportedCommandResult)
  return target;
}

size_t GetSupportedDMResp_SupportedCommandResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetSupportedDMResp.SupportedCommandResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string input_arg_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(input_arg_names_.size());
  for (int i = 0, n = input_arg_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      input_arg_names_.Get(i));
  }

  // repeated string output_arg_names = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(output_arg_names_.size());
  for (int i = 0, n = output_arg_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      output_arg_names_.Get(i));
  }

  // string command_name = 1;
  if (this->command_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSupportedDMResp_SupportedCommandResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetSupportedDMResp.SupportedCommandResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportedDMResp_SupportedCommandResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSupportedDMResp_SupportedCommandResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetSupportedDMResp.SupportedCommandResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetSupportedDMResp.SupportedCommandResult)
    MergeFrom(*source);
  }
}

void GetSupportedDMResp_SupportedCommandResult::MergeFrom(const GetSupportedDMResp_SupportedCommandResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetSupportedDMResp.SupportedCommandResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_arg_names_.MergeFrom(from.input_arg_names_);
  output_arg_names_.MergeFrom(from.output_arg_names_);
  if (from.command_name().size() > 0) {
    _internal_set_command_name(from._internal_command_name());
  }
}

void GetSupportedDMResp_SupportedCommandResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetSupportedDMResp.SupportedCommandResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportedDMResp_SupportedCommandResult::CopyFrom(const GetSupportedDMResp_SupportedCommandResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetSupportedDMResp.SupportedCommandResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedDMResp_SupportedCommandResult::IsInitialized() const {
  return true;
}

void GetSupportedDMResp_SupportedCommandResult::InternalSwap(GetSupportedDMResp_SupportedCommandResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  input_arg_names_.InternalSwap(&other->input_arg_names_);
  output_arg_names_.InternalSwap(&other->output_arg_names_);
  command_name_.Swap(&other->command_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedDMResp_SupportedCommandResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSupportedDMResp_SupportedEventResult::InitAsDefaultInstance() {
}
class GetSupportedDMResp_SupportedEventResult::_Internal {
 public:
};

GetSupportedDMResp_SupportedEventResult::GetSupportedDMResp_SupportedEventResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arg_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetSupportedDMResp.SupportedEventResult)
}
GetSupportedDMResp_SupportedEventResult::GetSupportedDMResp_SupportedEventResult(const GetSupportedDMResp_SupportedEventResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arg_names_(from.arg_names_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  event_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_event_name().empty()) {
    event_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_event_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.GetSupportedDMResp.SupportedEventResult)
}

void GetSupportedDMResp_SupportedEventResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSupportedDMResp_SupportedEventResult_usp_2dmsg_2d1_2d1_2eproto.base);
  event_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSupportedDMResp_SupportedEventResult::~GetSupportedDMResp_SupportedEventResult() {
  // @@protoc_insertion_point(destructor:usp.GetSupportedDMResp.SupportedEventResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSupportedDMResp_SupportedEventResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  event_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSupportedDMResp_SupportedEventResult::ArenaDtor(void* object) {
  GetSupportedDMResp_SupportedEventResult* _this = reinterpret_cast< GetSupportedDMResp_SupportedEventResult* >(object);
  (void)_this;
}
void GetSupportedDMResp_SupportedEventResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSupportedDMResp_SupportedEventResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSupportedDMResp_SupportedEventResult& GetSupportedDMResp_SupportedEventResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSupportedDMResp_SupportedEventResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetSupportedDMResp_SupportedEventResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetSupportedDMResp.SupportedEventResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arg_names_.Clear();
  event_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedDMResp_SupportedEventResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string event_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_event_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDMResp.SupportedEventResult.event_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string arg_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_arg_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedDMResp.SupportedEventResult.arg_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSupportedDMResp_SupportedEventResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetSupportedDMResp.SupportedEventResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string event_name = 1;
  if (this->event_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_event_name().data(), static_cast<int>(this->_internal_event_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDMResp.SupportedEventResult.event_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_event_name(), target);
  }

  // repeated string arg_names = 2;
  for (int i = 0, n = this->_internal_arg_names_size(); i < n; i++) {
    const auto& s = this->_internal_arg_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedDMResp.SupportedEventResult.arg_names");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetSupportedDMResp.SupportedEventResult)
  return target;
}

size_t GetSupportedDMResp_SupportedEventResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetSupportedDMResp.SupportedEventResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string arg_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(arg_names_.size());
  for (int i = 0, n = arg_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      arg_names_.Get(i));
  }

  // string event_name = 1;
  if (this->event_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_event_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSupportedDMResp_SupportedEventResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetSupportedDMResp.SupportedEventResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportedDMResp_SupportedEventResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSupportedDMResp_SupportedEventResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetSupportedDMResp.SupportedEventResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetSupportedDMResp.SupportedEventResult)
    MergeFrom(*source);
  }
}

void GetSupportedDMResp_SupportedEventResult::MergeFrom(const GetSupportedDMResp_SupportedEventResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetSupportedDMResp.SupportedEventResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arg_names_.MergeFrom(from.arg_names_);
  if (from.event_name().size() > 0) {
    _internal_set_event_name(from._internal_event_name());
  }
}

void GetSupportedDMResp_SupportedEventResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetSupportedDMResp.SupportedEventResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportedDMResp_SupportedEventResult::CopyFrom(const GetSupportedDMResp_SupportedEventResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetSupportedDMResp.SupportedEventResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedDMResp_SupportedEventResult::IsInitialized() const {
  return true;
}

void GetSupportedDMResp_SupportedEventResult::InternalSwap(GetSupportedDMResp_SupportedEventResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arg_names_.InternalSwap(&other->arg_names_);
  event_name_.Swap(&other->event_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedDMResp_SupportedEventResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSupportedDMResp::InitAsDefaultInstance() {
}
class GetSupportedDMResp::_Internal {
 public:
};

GetSupportedDMResp::GetSupportedDMResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  req_obj_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetSupportedDMResp)
}
GetSupportedDMResp::GetSupportedDMResp(const GetSupportedDMResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      req_obj_results_(from.req_obj_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usp.GetSupportedDMResp)
}

void GetSupportedDMResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSupportedDMResp_usp_2dmsg_2d1_2d1_2eproto.base);
}

GetSupportedDMResp::~GetSupportedDMResp() {
  // @@protoc_insertion_point(destructor:usp.GetSupportedDMResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSupportedDMResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetSupportedDMResp::ArenaDtor(void* object) {
  GetSupportedDMResp* _this = reinterpret_cast< GetSupportedDMResp* >(object);
  (void)_this;
}
void GetSupportedDMResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSupportedDMResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSupportedDMResp& GetSupportedDMResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSupportedDMResp_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetSupportedDMResp::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetSupportedDMResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_obj_results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedDMResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .usp.GetSupportedDMResp.RequestedObjectResult req_obj_results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_req_obj_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSupportedDMResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetSupportedDMResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .usp.GetSupportedDMResp.RequestedObjectResult req_obj_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_req_obj_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_req_obj_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetSupportedDMResp)
  return target;
}

size_t GetSupportedDMResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetSupportedDMResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.GetSupportedDMResp.RequestedObjectResult req_obj_results = 1;
  total_size += 1UL * this->_internal_req_obj_results_size();
  for (const auto& msg : this->req_obj_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSupportedDMResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetSupportedDMResp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportedDMResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSupportedDMResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetSupportedDMResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetSupportedDMResp)
    MergeFrom(*source);
  }
}

void GetSupportedDMResp::MergeFrom(const GetSupportedDMResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetSupportedDMResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  req_obj_results_.MergeFrom(from.req_obj_results_);
}

void GetSupportedDMResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetSupportedDMResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportedDMResp::CopyFrom(const GetSupportedDMResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetSupportedDMResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedDMResp::IsInitialized() const {
  return true;
}

void GetSupportedDMResp::InternalSwap(GetSupportedDMResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  req_obj_results_.InternalSwap(&other->req_obj_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedDMResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetInstances::InitAsDefaultInstance() {
}
class GetInstances::_Internal {
 public:
};

GetInstances::GetInstances(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  obj_paths_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetInstances)
}
GetInstances::GetInstances(const GetInstances& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      obj_paths_(from.obj_paths_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  first_level_only_ = from.first_level_only_;
  // @@protoc_insertion_point(copy_constructor:usp.GetInstances)
}

void GetInstances::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetInstances_usp_2dmsg_2d1_2d1_2eproto.base);
  first_level_only_ = false;
}

GetInstances::~GetInstances() {
  // @@protoc_insertion_point(destructor:usp.GetInstances)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetInstances::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetInstances::ArenaDtor(void* object) {
  GetInstances* _this = reinterpret_cast< GetInstances* >(object);
  (void)_this;
}
void GetInstances::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInstances::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetInstances& GetInstances::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetInstances_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetInstances::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetInstances)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_paths_.Clear();
  first_level_only_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInstances::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string obj_paths = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_obj_paths();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetInstances.obj_paths"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // bool first_level_only = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          first_level_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInstances::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetInstances)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string obj_paths = 1;
  for (int i = 0, n = this->_internal_obj_paths_size(); i < n; i++) {
    const auto& s = this->_internal_obj_paths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetInstances.obj_paths");
    target = stream->WriteString(1, s, target);
  }

  // bool first_level_only = 2;
  if (this->first_level_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_first_level_only(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetInstances)
  return target;
}

size_t GetInstances::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetInstances)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string obj_paths = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(obj_paths_.size());
  for (int i = 0, n = obj_paths_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      obj_paths_.Get(i));
  }

  // bool first_level_only = 2;
  if (this->first_level_only() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInstances::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetInstances)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInstances* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetInstances>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetInstances)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetInstances)
    MergeFrom(*source);
  }
}

void GetInstances::MergeFrom(const GetInstances& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetInstances)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obj_paths_.MergeFrom(from.obj_paths_);
  if (from.first_level_only() != 0) {
    _internal_set_first_level_only(from._internal_first_level_only());
  }
}

void GetInstances::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetInstances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInstances::CopyFrom(const GetInstances& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetInstances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInstances::IsInitialized() const {
  return true;
}

void GetInstances::InternalSwap(GetInstances* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  obj_paths_.InternalSwap(&other->obj_paths_);
  swap(first_level_only_, other->first_level_only_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInstances::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetInstancesResp_RequestedPathResult::InitAsDefaultInstance() {
}
class GetInstancesResp_RequestedPathResult::_Internal {
 public:
};

GetInstancesResp_RequestedPathResult::GetInstancesResp_RequestedPathResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  curr_insts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetInstancesResp.RequestedPathResult)
}
GetInstancesResp_RequestedPathResult::GetInstancesResp_RequestedPathResult(const GetInstancesResp_RequestedPathResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      curr_insts_(from.curr_insts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  requested_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requested_path().empty()) {
    requested_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_requested_path(),
      GetArena());
  }
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.GetInstancesResp.RequestedPathResult)
}

void GetInstancesResp_RequestedPathResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetInstancesResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto.base);
  requested_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

GetInstancesResp_RequestedPathResult::~GetInstancesResp_RequestedPathResult() {
  // @@protoc_insertion_point(destructor:usp.GetInstancesResp.RequestedPathResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetInstancesResp_RequestedPathResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  requested_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetInstancesResp_RequestedPathResult::ArenaDtor(void* object) {
  GetInstancesResp_RequestedPathResult* _this = reinterpret_cast< GetInstancesResp_RequestedPathResult* >(object);
  (void)_this;
}
void GetInstancesResp_RequestedPathResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInstancesResp_RequestedPathResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetInstancesResp_RequestedPathResult& GetInstancesResp_RequestedPathResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetInstancesResp_RequestedPathResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetInstancesResp_RequestedPathResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetInstancesResp.RequestedPathResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  curr_insts_.Clear();
  requested_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInstancesResp_RequestedPathResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string requested_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_requested_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetInstancesResp.RequestedPathResult.requested_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // fixed32 err_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetInstancesResp.RequestedPathResult.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.GetInstancesResp.CurrInstance curr_insts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_curr_insts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInstancesResp_RequestedPathResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetInstancesResp.RequestedPathResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requested_path = 1;
  if (this->requested_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requested_path().data(), static_cast<int>(this->_internal_requested_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetInstancesResp.RequestedPathResult.requested_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_requested_path(), target);
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_err_code(), target);
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetInstancesResp.RequestedPathResult.err_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_err_msg(), target);
  }

  // repeated .usp.GetInstancesResp.CurrInstance curr_insts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_curr_insts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_curr_insts(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetInstancesResp.RequestedPathResult)
  return target;
}

size_t GetInstancesResp_RequestedPathResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetInstancesResp.RequestedPathResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.GetInstancesResp.CurrInstance curr_insts = 4;
  total_size += 1UL * this->_internal_curr_insts_size();
  for (const auto& msg : this->curr_insts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string requested_path = 1;
  if (this->requested_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requested_path());
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInstancesResp_RequestedPathResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetInstancesResp.RequestedPathResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInstancesResp_RequestedPathResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetInstancesResp_RequestedPathResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetInstancesResp.RequestedPathResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetInstancesResp.RequestedPathResult)
    MergeFrom(*source);
  }
}

void GetInstancesResp_RequestedPathResult::MergeFrom(const GetInstancesResp_RequestedPathResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetInstancesResp.RequestedPathResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  curr_insts_.MergeFrom(from.curr_insts_);
  if (from.requested_path().size() > 0) {
    _internal_set_requested_path(from._internal_requested_path());
  }
  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void GetInstancesResp_RequestedPathResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetInstancesResp.RequestedPathResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInstancesResp_RequestedPathResult::CopyFrom(const GetInstancesResp_RequestedPathResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetInstancesResp.RequestedPathResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInstancesResp_RequestedPathResult::IsInitialized() const {
  return true;
}

void GetInstancesResp_RequestedPathResult::InternalSwap(GetInstancesResp_RequestedPathResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  curr_insts_.InternalSwap(&other->curr_insts_);
  requested_path_.Swap(&other->requested_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInstancesResp_RequestedPathResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse() {}
GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse::MergeFrom(const GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetInstancesResp_CurrInstance::InitAsDefaultInstance() {
}
class GetInstancesResp_CurrInstance::_Internal {
 public:
};

GetInstancesResp_CurrInstance::GetInstancesResp_CurrInstance(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  unique_keys_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetInstancesResp.CurrInstance)
}
GetInstancesResp_CurrInstance::GetInstancesResp_CurrInstance(const GetInstancesResp_CurrInstance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unique_keys_.MergeFrom(from.unique_keys_);
  instantiated_obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instantiated_obj_path().empty()) {
    instantiated_obj_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instantiated_obj_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.GetInstancesResp.CurrInstance)
}

void GetInstancesResp_CurrInstance::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetInstancesResp_CurrInstance_usp_2dmsg_2d1_2d1_2eproto.base);
  instantiated_obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetInstancesResp_CurrInstance::~GetInstancesResp_CurrInstance() {
  // @@protoc_insertion_point(destructor:usp.GetInstancesResp.CurrInstance)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetInstancesResp_CurrInstance::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instantiated_obj_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetInstancesResp_CurrInstance::ArenaDtor(void* object) {
  GetInstancesResp_CurrInstance* _this = reinterpret_cast< GetInstancesResp_CurrInstance* >(object);
  (void)_this;
}
void GetInstancesResp_CurrInstance::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInstancesResp_CurrInstance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetInstancesResp_CurrInstance& GetInstancesResp_CurrInstance::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetInstancesResp_CurrInstance_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetInstancesResp_CurrInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetInstancesResp.CurrInstance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unique_keys_.Clear();
  instantiated_obj_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInstancesResp_CurrInstance::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instantiated_obj_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instantiated_obj_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetInstancesResp.CurrInstance.instantiated_obj_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> unique_keys = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&unique_keys_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInstancesResp_CurrInstance::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetInstancesResp.CurrInstance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instantiated_obj_path = 1;
  if (this->instantiated_obj_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instantiated_obj_path().data(), static_cast<int>(this->_internal_instantiated_obj_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetInstancesResp.CurrInstance.instantiated_obj_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instantiated_obj_path(), target);
  }

  // map<string, string> unique_keys = 2;
  if (!this->_internal_unique_keys().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.GetInstancesResp.CurrInstance.UniqueKeysEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.GetInstancesResp.CurrInstance.UniqueKeysEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_unique_keys().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_unique_keys().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_unique_keys().begin();
          it != this->_internal_unique_keys().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_unique_keys().begin();
          it != this->_internal_unique_keys().end(); ++it) {
        target = GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetInstancesResp.CurrInstance)
  return target;
}

size_t GetInstancesResp_CurrInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetInstancesResp.CurrInstance)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> unique_keys = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_unique_keys_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_unique_keys().begin();
      it != this->_internal_unique_keys().end(); ++it) {
    total_size += GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string instantiated_obj_path = 1;
  if (this->instantiated_obj_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instantiated_obj_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInstancesResp_CurrInstance::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetInstancesResp.CurrInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInstancesResp_CurrInstance* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetInstancesResp_CurrInstance>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetInstancesResp.CurrInstance)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetInstancesResp.CurrInstance)
    MergeFrom(*source);
  }
}

void GetInstancesResp_CurrInstance::MergeFrom(const GetInstancesResp_CurrInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetInstancesResp.CurrInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unique_keys_.MergeFrom(from.unique_keys_);
  if (from.instantiated_obj_path().size() > 0) {
    _internal_set_instantiated_obj_path(from._internal_instantiated_obj_path());
  }
}

void GetInstancesResp_CurrInstance::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetInstancesResp.CurrInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInstancesResp_CurrInstance::CopyFrom(const GetInstancesResp_CurrInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetInstancesResp.CurrInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInstancesResp_CurrInstance::IsInitialized() const {
  return true;
}

void GetInstancesResp_CurrInstance::InternalSwap(GetInstancesResp_CurrInstance* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  unique_keys_.Swap(&other->unique_keys_);
  instantiated_obj_path_.Swap(&other->instantiated_obj_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInstancesResp_CurrInstance::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetInstancesResp::InitAsDefaultInstance() {
}
class GetInstancesResp::_Internal {
 public:
};

GetInstancesResp::GetInstancesResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  req_path_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetInstancesResp)
}
GetInstancesResp::GetInstancesResp(const GetInstancesResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      req_path_results_(from.req_path_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usp.GetInstancesResp)
}

void GetInstancesResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetInstancesResp_usp_2dmsg_2d1_2d1_2eproto.base);
}

GetInstancesResp::~GetInstancesResp() {
  // @@protoc_insertion_point(destructor:usp.GetInstancesResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetInstancesResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetInstancesResp::ArenaDtor(void* object) {
  GetInstancesResp* _this = reinterpret_cast< GetInstancesResp* >(object);
  (void)_this;
}
void GetInstancesResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetInstancesResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetInstancesResp& GetInstancesResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetInstancesResp_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetInstancesResp::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetInstancesResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_path_results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetInstancesResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .usp.GetInstancesResp.RequestedPathResult req_path_results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_req_path_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetInstancesResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetInstancesResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .usp.GetInstancesResp.RequestedPathResult req_path_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_req_path_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_req_path_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetInstancesResp)
  return target;
}

size_t GetInstancesResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetInstancesResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.GetInstancesResp.RequestedPathResult req_path_results = 1;
  total_size += 1UL * this->_internal_req_path_results_size();
  for (const auto& msg : this->req_path_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetInstancesResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetInstancesResp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInstancesResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetInstancesResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetInstancesResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetInstancesResp)
    MergeFrom(*source);
  }
}

void GetInstancesResp::MergeFrom(const GetInstancesResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetInstancesResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  req_path_results_.MergeFrom(from.req_path_results_);
}

void GetInstancesResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetInstancesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInstancesResp::CopyFrom(const GetInstancesResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetInstancesResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInstancesResp::IsInitialized() const {
  return true;
}

void GetInstancesResp::InternalSwap(GetInstancesResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  req_path_results_.InternalSwap(&other->req_path_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetInstancesResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSupportedProtocol::InitAsDefaultInstance() {
}
class GetSupportedProtocol::_Internal {
 public:
};

GetSupportedProtocol::GetSupportedProtocol(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetSupportedProtocol)
}
GetSupportedProtocol::GetSupportedProtocol(const GetSupportedProtocol& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  controller_supported_protocol_versions_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_controller_supported_protocol_versions().empty()) {
    controller_supported_protocol_versions_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_controller_supported_protocol_versions(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.GetSupportedProtocol)
}

void GetSupportedProtocol::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSupportedProtocol_usp_2dmsg_2d1_2d1_2eproto.base);
  controller_supported_protocol_versions_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSupportedProtocol::~GetSupportedProtocol() {
  // @@protoc_insertion_point(destructor:usp.GetSupportedProtocol)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSupportedProtocol::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  controller_supported_protocol_versions_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSupportedProtocol::ArenaDtor(void* object) {
  GetSupportedProtocol* _this = reinterpret_cast< GetSupportedProtocol* >(object);
  (void)_this;
}
void GetSupportedProtocol::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSupportedProtocol::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSupportedProtocol& GetSupportedProtocol::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSupportedProtocol_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetSupportedProtocol::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetSupportedProtocol)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  controller_supported_protocol_versions_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedProtocol::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string controller_supported_protocol_versions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_controller_supported_protocol_versions();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedProtocol.controller_supported_protocol_versions"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSupportedProtocol::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetSupportedProtocol)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string controller_supported_protocol_versions = 1;
  if (this->controller_supported_protocol_versions().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_controller_supported_protocol_versions().data(), static_cast<int>(this->_internal_controller_supported_protocol_versions().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedProtocol.controller_supported_protocol_versions");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_controller_supported_protocol_versions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetSupportedProtocol)
  return target;
}

size_t GetSupportedProtocol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetSupportedProtocol)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string controller_supported_protocol_versions = 1;
  if (this->controller_supported_protocol_versions().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_controller_supported_protocol_versions());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSupportedProtocol::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetSupportedProtocol)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportedProtocol* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSupportedProtocol>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetSupportedProtocol)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetSupportedProtocol)
    MergeFrom(*source);
  }
}

void GetSupportedProtocol::MergeFrom(const GetSupportedProtocol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetSupportedProtocol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.controller_supported_protocol_versions().size() > 0) {
    _internal_set_controller_supported_protocol_versions(from._internal_controller_supported_protocol_versions());
  }
}

void GetSupportedProtocol::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetSupportedProtocol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportedProtocol::CopyFrom(const GetSupportedProtocol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetSupportedProtocol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedProtocol::IsInitialized() const {
  return true;
}

void GetSupportedProtocol::InternalSwap(GetSupportedProtocol* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  controller_supported_protocol_versions_.Swap(&other->controller_supported_protocol_versions_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedProtocol::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetSupportedProtocolResp::InitAsDefaultInstance() {
}
class GetSupportedProtocolResp::_Internal {
 public:
};

GetSupportedProtocolResp::GetSupportedProtocolResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.GetSupportedProtocolResp)
}
GetSupportedProtocolResp::GetSupportedProtocolResp(const GetSupportedProtocolResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  agent_supported_protocol_versions_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_agent_supported_protocol_versions().empty()) {
    agent_supported_protocol_versions_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_agent_supported_protocol_versions(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.GetSupportedProtocolResp)
}

void GetSupportedProtocolResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSupportedProtocolResp_usp_2dmsg_2d1_2d1_2eproto.base);
  agent_supported_protocol_versions_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSupportedProtocolResp::~GetSupportedProtocolResp() {
  // @@protoc_insertion_point(destructor:usp.GetSupportedProtocolResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSupportedProtocolResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  agent_supported_protocol_versions_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSupportedProtocolResp::ArenaDtor(void* object) {
  GetSupportedProtocolResp* _this = reinterpret_cast< GetSupportedProtocolResp* >(object);
  (void)_this;
}
void GetSupportedProtocolResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSupportedProtocolResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSupportedProtocolResp& GetSupportedProtocolResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSupportedProtocolResp_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void GetSupportedProtocolResp::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.GetSupportedProtocolResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  agent_supported_protocol_versions_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSupportedProtocolResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string agent_supported_protocol_versions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_agent_supported_protocol_versions();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.GetSupportedProtocolResp.agent_supported_protocol_versions"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSupportedProtocolResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.GetSupportedProtocolResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string agent_supported_protocol_versions = 1;
  if (this->agent_supported_protocol_versions().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_supported_protocol_versions().data(), static_cast<int>(this->_internal_agent_supported_protocol_versions().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.GetSupportedProtocolResp.agent_supported_protocol_versions");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_agent_supported_protocol_versions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.GetSupportedProtocolResp)
  return target;
}

size_t GetSupportedProtocolResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.GetSupportedProtocolResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string agent_supported_protocol_versions = 1;
  if (this->agent_supported_protocol_versions().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_supported_protocol_versions());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSupportedProtocolResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.GetSupportedProtocolResp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSupportedProtocolResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSupportedProtocolResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.GetSupportedProtocolResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.GetSupportedProtocolResp)
    MergeFrom(*source);
  }
}

void GetSupportedProtocolResp::MergeFrom(const GetSupportedProtocolResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.GetSupportedProtocolResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.agent_supported_protocol_versions().size() > 0) {
    _internal_set_agent_supported_protocol_versions(from._internal_agent_supported_protocol_versions());
  }
}

void GetSupportedProtocolResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.GetSupportedProtocolResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSupportedProtocolResp::CopyFrom(const GetSupportedProtocolResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.GetSupportedProtocolResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSupportedProtocolResp::IsInitialized() const {
  return true;
}

void GetSupportedProtocolResp::InternalSwap(GetSupportedProtocolResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  agent_supported_protocol_versions_.Swap(&other->agent_supported_protocol_versions_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSupportedProtocolResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Add_CreateObject::InitAsDefaultInstance() {
}
class Add_CreateObject::_Internal {
 public:
};

Add_CreateObject::Add_CreateObject(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_settings_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Add.CreateObject)
}
Add_CreateObject::Add_CreateObject(const Add_CreateObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      param_settings_(from.param_settings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj_path().empty()) {
    obj_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_obj_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.Add.CreateObject)
}

void Add_CreateObject::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Add_CreateObject_usp_2dmsg_2d1_2d1_2eproto.base);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Add_CreateObject::~Add_CreateObject() {
  // @@protoc_insertion_point(destructor:usp.Add.CreateObject)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Add_CreateObject::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  obj_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Add_CreateObject::ArenaDtor(void* object) {
  Add_CreateObject* _this = reinterpret_cast< Add_CreateObject* >(object);
  (void)_this;
}
void Add_CreateObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Add_CreateObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Add_CreateObject& Add_CreateObject::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Add_CreateObject_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Add_CreateObject::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Add.CreateObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_settings_.Clear();
  obj_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Add_CreateObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string obj_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_obj_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Add.CreateObject.obj_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.Add.CreateParamSetting param_settings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_param_settings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Add_CreateObject::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Add.CreateObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_obj_path().data(), static_cast<int>(this->_internal_obj_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Add.CreateObject.obj_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_obj_path(), target);
  }

  // repeated .usp.Add.CreateParamSetting param_settings = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_param_settings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_param_settings(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Add.CreateObject)
  return target;
}

size_t Add_CreateObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Add.CreateObject)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.Add.CreateParamSetting param_settings = 2;
  total_size += 1UL * this->_internal_param_settings_size();
  for (const auto& msg : this->param_settings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_obj_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Add_CreateObject::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Add.CreateObject)
  GOOGLE_DCHECK_NE(&from, this);
  const Add_CreateObject* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Add_CreateObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Add.CreateObject)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Add.CreateObject)
    MergeFrom(*source);
  }
}

void Add_CreateObject::MergeFrom(const Add_CreateObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Add.CreateObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_settings_.MergeFrom(from.param_settings_);
  if (from.obj_path().size() > 0) {
    _internal_set_obj_path(from._internal_obj_path());
  }
}

void Add_CreateObject::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Add.CreateObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Add_CreateObject::CopyFrom(const Add_CreateObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Add.CreateObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Add_CreateObject::IsInitialized() const {
  return true;
}

void Add_CreateObject::InternalSwap(Add_CreateObject* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_settings_.InternalSwap(&other->param_settings_);
  obj_path_.Swap(&other->obj_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Add_CreateObject::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Add_CreateParamSetting::InitAsDefaultInstance() {
}
class Add_CreateParamSetting::_Internal {
 public:
};

Add_CreateParamSetting::Add_CreateParamSetting(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Add.CreateParamSetting)
}
Add_CreateParamSetting::Add_CreateParamSetting(const Add_CreateParamSetting& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_param().empty()) {
    param_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  required_ = from.required_;
  // @@protoc_insertion_point(copy_constructor:usp.Add.CreateParamSetting)
}

void Add_CreateParamSetting::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Add_CreateParamSetting_usp_2dmsg_2d1_2d1_2eproto.base);
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  required_ = false;
}

Add_CreateParamSetting::~Add_CreateParamSetting() {
  // @@protoc_insertion_point(destructor:usp.Add.CreateParamSetting)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Add_CreateParamSetting::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  param_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Add_CreateParamSetting::ArenaDtor(void* object) {
  Add_CreateParamSetting* _this = reinterpret_cast< Add_CreateParamSetting* >(object);
  (void)_this;
}
void Add_CreateParamSetting::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Add_CreateParamSetting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Add_CreateParamSetting& Add_CreateParamSetting::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Add_CreateParamSetting_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Add_CreateParamSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Add.CreateParamSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  required_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Add_CreateParamSetting::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_param();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Add.CreateParamSetting.param"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Add.CreateParamSetting.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool required = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          required_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Add_CreateParamSetting::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Add.CreateParamSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param = 1;
  if (this->param().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Add.CreateParamSetting.param");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_param(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Add.CreateParamSetting.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  // bool required = 3;
  if (this->required() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_required(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Add.CreateParamSetting)
  return target;
}

size_t Add_CreateParamSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Add.CreateParamSetting)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string param = 1;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // bool required = 3;
  if (this->required() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Add_CreateParamSetting::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Add.CreateParamSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const Add_CreateParamSetting* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Add_CreateParamSetting>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Add.CreateParamSetting)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Add.CreateParamSetting)
    MergeFrom(*source);
  }
}

void Add_CreateParamSetting::MergeFrom(const Add_CreateParamSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Add.CreateParamSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param().size() > 0) {
    _internal_set_param(from._internal_param());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.required() != 0) {
    _internal_set_required(from._internal_required());
  }
}

void Add_CreateParamSetting::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Add.CreateParamSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Add_CreateParamSetting::CopyFrom(const Add_CreateParamSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Add.CreateParamSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Add_CreateParamSetting::IsInitialized() const {
  return true;
}

void Add_CreateParamSetting::InternalSwap(Add_CreateParamSetting* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_.Swap(&other->param_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(required_, other->required_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Add_CreateParamSetting::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Add::InitAsDefaultInstance() {
}
class Add::_Internal {
 public:
};

Add::Add(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  create_objs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Add)
}
Add::Add(const Add& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      create_objs_(from.create_objs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  allow_partial_ = from.allow_partial_;
  // @@protoc_insertion_point(copy_constructor:usp.Add)
}

void Add::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Add_usp_2dmsg_2d1_2d1_2eproto.base);
  allow_partial_ = false;
}

Add::~Add() {
  // @@protoc_insertion_point(destructor:usp.Add)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Add::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Add::ArenaDtor(void* object) {
  Add* _this = reinterpret_cast< Add* >(object);
  (void)_this;
}
void Add::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Add::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Add& Add::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Add_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Add::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Add)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  create_objs_.Clear();
  allow_partial_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Add::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool allow_partial = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          allow_partial_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.Add.CreateObject create_objs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_create_objs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Add::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Add)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool allow_partial = 1;
  if (this->allow_partial() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_allow_partial(), target);
  }

  // repeated .usp.Add.CreateObject create_objs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_create_objs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_create_objs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Add)
  return target;
}

size_t Add::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Add)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.Add.CreateObject create_objs = 2;
  total_size += 1UL * this->_internal_create_objs_size();
  for (const auto& msg : this->create_objs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool allow_partial = 1;
  if (this->allow_partial() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Add::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Add)
  GOOGLE_DCHECK_NE(&from, this);
  const Add* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Add>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Add)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Add)
    MergeFrom(*source);
  }
}

void Add::MergeFrom(const Add& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Add)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  create_objs_.MergeFrom(from.create_objs_);
  if (from.allow_partial() != 0) {
    _internal_set_allow_partial(from._internal_allow_partial());
  }
}

void Add::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Add::CopyFrom(const Add& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Add)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Add::IsInitialized() const {
  return true;
}

void Add::InternalSwap(Add* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  create_objs_.InternalSwap(&other->create_objs_);
  swap(allow_partial_, other->allow_partial_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Add::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::InitAsDefaultInstance() {
}
class AddResp_CreatedObjectResult_OperationStatus_OperationFailure::_Internal {
 public:
};

AddResp_CreatedObjectResult_OperationStatus_OperationFailure::AddResp_CreatedObjectResult_OperationStatus_OperationFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
}
AddResp_CreatedObjectResult_OperationStatus_OperationFailure::AddResp_CreatedObjectResult_OperationStatus_OperationFailure(const AddResp_CreatedObjectResult_OperationStatus_OperationFailure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
}

void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

AddResp_CreatedObjectResult_OperationStatus_OperationFailure::~AddResp_CreatedObjectResult_OperationStatus_OperationFailure() {
  // @@protoc_insertion_point(destructor:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::ArenaDtor(void* object) {
  AddResp_CreatedObjectResult_OperationStatus_OperationFailure* _this = reinterpret_cast< AddResp_CreatedObjectResult_OperationStatus_OperationFailure* >(object);
  (void)_this;
}
void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddResp_CreatedObjectResult_OperationStatus_OperationFailure& AddResp_CreatedObjectResult_OperationStatus_OperationFailure::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddResp_CreatedObjectResult_OperationStatus_OperationFailure::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // fixed32 err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddResp_CreatedObjectResult_OperationStatus_OperationFailure::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(1, this->_internal_err_code(), target);
  }

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure.err_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_err_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
  return target;
}

size_t AddResp_CreatedObjectResult_OperationStatus_OperationFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResp_CreatedObjectResult_OperationStatus_OperationFailure* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddResp_CreatedObjectResult_OperationStatus_OperationFailure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
    MergeFrom(*source);
  }
}

void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::MergeFrom(const AddResp_CreatedObjectResult_OperationStatus_OperationFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::CopyFrom(const AddResp_CreatedObjectResult_OperationStatus_OperationFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResp_CreatedObjectResult_OperationStatus_OperationFailure::IsInitialized() const {
  return true;
}

void AddResp_CreatedObjectResult_OperationStatus_OperationFailure::InternalSwap(AddResp_CreatedObjectResult_OperationStatus_OperationFailure* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddResp_CreatedObjectResult_OperationStatus_OperationFailure::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse() {}
AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse::MergeFrom(const AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::InitAsDefaultInstance() {
}
class AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::_Internal {
 public:
};

AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_errs_(arena),
  unique_keys_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
}
AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess(const AddResp_CreatedObjectResult_OperationStatus_OperationSuccess& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      param_errs_(from.param_errs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unique_keys_.MergeFrom(from.unique_keys_);
  instantiated_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instantiated_path().empty()) {
    instantiated_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_instantiated_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
}

void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base);
  instantiated_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::~AddResp_CreatedObjectResult_OperationStatus_OperationSuccess() {
  // @@protoc_insertion_point(destructor:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  instantiated_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::ArenaDtor(void* object) {
  AddResp_CreatedObjectResult_OperationStatus_OperationSuccess* _this = reinterpret_cast< AddResp_CreatedObjectResult_OperationStatus_OperationSuccess* >(object);
  (void)_this;
}
void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddResp_CreatedObjectResult_OperationStatus_OperationSuccess& AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_errs_.Clear();
  unique_keys_.Clear();
  instantiated_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instantiated_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instantiated_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess.instantiated_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.AddResp.ParameterError param_errs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_param_errs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> unique_keys = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&unique_keys_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instantiated_path = 1;
  if (this->instantiated_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instantiated_path().data(), static_cast<int>(this->_internal_instantiated_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess.instantiated_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instantiated_path(), target);
  }

  // repeated .usp.AddResp.ParameterError param_errs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_param_errs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_param_errs(i), target, stream);
  }

  // map<string, string> unique_keys = 3;
  if (!this->_internal_unique_keys().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess.UniqueKeysEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess.UniqueKeysEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_unique_keys().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_unique_keys().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_unique_keys().begin();
          it != this->_internal_unique_keys().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_unique_keys().begin();
          it != this->_internal_unique_keys().end(); ++it) {
        target = AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
  return target;
}

size_t AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.AddResp.ParameterError param_errs = 2;
  total_size += 1UL * this->_internal_param_errs_size();
  for (const auto& msg : this->param_errs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, string> unique_keys = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_unique_keys_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_unique_keys().begin();
      it != this->_internal_unique_keys().end(); ++it) {
    total_size += AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string instantiated_path = 1;
  if (this->instantiated_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instantiated_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResp_CreatedObjectResult_OperationStatus_OperationSuccess* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddResp_CreatedObjectResult_OperationStatus_OperationSuccess>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
    MergeFrom(*source);
  }
}

void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::MergeFrom(const AddResp_CreatedObjectResult_OperationStatus_OperationSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_errs_.MergeFrom(from.param_errs_);
  unique_keys_.MergeFrom(from.unique_keys_);
  if (from.instantiated_path().size() > 0) {
    _internal_set_instantiated_path(from._internal_instantiated_path());
  }
}

void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::CopyFrom(const AddResp_CreatedObjectResult_OperationStatus_OperationSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::IsInitialized() const {
  return true;
}

void AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::InternalSwap(AddResp_CreatedObjectResult_OperationStatus_OperationSuccess* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_errs_.InternalSwap(&other->param_errs_);
  unique_keys_.Swap(&other->unique_keys_);
  instantiated_path_.Swap(&other->instantiated_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddResp_CreatedObjectResult_OperationStatus::InitAsDefaultInstance() {
  ::usp::_AddResp_CreatedObjectResult_OperationStatus_default_instance_.oper_failure_ = const_cast< ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure*>(
      ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure::internal_default_instance());
  ::usp::_AddResp_CreatedObjectResult_OperationStatus_default_instance_.oper_success_ = const_cast< ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess*>(
      ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::internal_default_instance());
}
class AddResp_CreatedObjectResult_OperationStatus::_Internal {
 public:
  static const ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure& oper_failure(const AddResp_CreatedObjectResult_OperationStatus* msg);
  static const ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess& oper_success(const AddResp_CreatedObjectResult_OperationStatus* msg);
};

const ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure&
AddResp_CreatedObjectResult_OperationStatus::_Internal::oper_failure(const AddResp_CreatedObjectResult_OperationStatus* msg) {
  return *msg->oper_status_.oper_failure_;
}
const ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess&
AddResp_CreatedObjectResult_OperationStatus::_Internal::oper_success(const AddResp_CreatedObjectResult_OperationStatus* msg) {
  return *msg->oper_status_.oper_success_;
}
void AddResp_CreatedObjectResult_OperationStatus::set_allocated_oper_failure(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure* oper_failure) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_oper_status();
  if (oper_failure) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oper_failure);
    if (message_arena != submessage_arena) {
      oper_failure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oper_failure, submessage_arena);
    }
    set_has_oper_failure();
    oper_status_.oper_failure_ = oper_failure;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.AddResp.CreatedObjectResult.OperationStatus.oper_failure)
}
void AddResp_CreatedObjectResult_OperationStatus::set_allocated_oper_success(::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess* oper_success) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_oper_status();
  if (oper_success) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oper_success);
    if (message_arena != submessage_arena) {
      oper_success = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oper_success, submessage_arena);
    }
    set_has_oper_success();
    oper_status_.oper_success_ = oper_success;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.AddResp.CreatedObjectResult.OperationStatus.oper_success)
}
AddResp_CreatedObjectResult_OperationStatus::AddResp_CreatedObjectResult_OperationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.AddResp.CreatedObjectResult.OperationStatus)
}
AddResp_CreatedObjectResult_OperationStatus::AddResp_CreatedObjectResult_OperationStatus(const AddResp_CreatedObjectResult_OperationStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_oper_status();
  switch (from.oper_status_case()) {
    case kOperFailure: {
      _internal_mutable_oper_failure()->::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure::MergeFrom(from._internal_oper_failure());
      break;
    }
    case kOperSuccess: {
      _internal_mutable_oper_success()->::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::MergeFrom(from._internal_oper_success());
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:usp.AddResp.CreatedObjectResult.OperationStatus)
}

void AddResp_CreatedObjectResult_OperationStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddResp_CreatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base);
  clear_has_oper_status();
}

AddResp_CreatedObjectResult_OperationStatus::~AddResp_CreatedObjectResult_OperationStatus() {
  // @@protoc_insertion_point(destructor:usp.AddResp.CreatedObjectResult.OperationStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddResp_CreatedObjectResult_OperationStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_oper_status()) {
    clear_oper_status();
  }
}

void AddResp_CreatedObjectResult_OperationStatus::ArenaDtor(void* object) {
  AddResp_CreatedObjectResult_OperationStatus* _this = reinterpret_cast< AddResp_CreatedObjectResult_OperationStatus* >(object);
  (void)_this;
}
void AddResp_CreatedObjectResult_OperationStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddResp_CreatedObjectResult_OperationStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddResp_CreatedObjectResult_OperationStatus& AddResp_CreatedObjectResult_OperationStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddResp_CreatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void AddResp_CreatedObjectResult_OperationStatus::clear_oper_status() {
// @@protoc_insertion_point(one_of_clear_start:usp.AddResp.CreatedObjectResult.OperationStatus)
  switch (oper_status_case()) {
    case kOperFailure: {
      if (GetArena() == nullptr) {
        delete oper_status_.oper_failure_;
      }
      break;
    }
    case kOperSuccess: {
      if (GetArena() == nullptr) {
        delete oper_status_.oper_success_;
      }
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPER_STATUS_NOT_SET;
}


void AddResp_CreatedObjectResult_OperationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.AddResp.CreatedObjectResult.OperationStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_oper_status();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddResp_CreatedObjectResult_OperationStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure oper_failure = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_oper_failure(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess oper_success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oper_success(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddResp_CreatedObjectResult_OperationStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.AddResp.CreatedObjectResult.OperationStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure oper_failure = 1;
  if (_internal_has_oper_failure()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::oper_failure(this), target, stream);
  }

  // .usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess oper_success = 2;
  if (_internal_has_oper_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oper_success(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.AddResp.CreatedObjectResult.OperationStatus)
  return target;
}

size_t AddResp_CreatedObjectResult_OperationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.AddResp.CreatedObjectResult.OperationStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (oper_status_case()) {
    // .usp.AddResp.CreatedObjectResult.OperationStatus.OperationFailure oper_failure = 1;
    case kOperFailure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oper_status_.oper_failure_);
      break;
    }
    // .usp.AddResp.CreatedObjectResult.OperationStatus.OperationSuccess oper_success = 2;
    case kOperSuccess: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oper_status_.oper_success_);
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResp_CreatedObjectResult_OperationStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.AddResp.CreatedObjectResult.OperationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResp_CreatedObjectResult_OperationStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddResp_CreatedObjectResult_OperationStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.AddResp.CreatedObjectResult.OperationStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.AddResp.CreatedObjectResult.OperationStatus)
    MergeFrom(*source);
  }
}

void AddResp_CreatedObjectResult_OperationStatus::MergeFrom(const AddResp_CreatedObjectResult_OperationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.AddResp.CreatedObjectResult.OperationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.oper_status_case()) {
    case kOperFailure: {
      _internal_mutable_oper_failure()->::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure::MergeFrom(from._internal_oper_failure());
      break;
    }
    case kOperSuccess: {
      _internal_mutable_oper_success()->::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess::MergeFrom(from._internal_oper_success());
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
}

void AddResp_CreatedObjectResult_OperationStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.AddResp.CreatedObjectResult.OperationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResp_CreatedObjectResult_OperationStatus::CopyFrom(const AddResp_CreatedObjectResult_OperationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.AddResp.CreatedObjectResult.OperationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResp_CreatedObjectResult_OperationStatus::IsInitialized() const {
  return true;
}

void AddResp_CreatedObjectResult_OperationStatus::InternalSwap(AddResp_CreatedObjectResult_OperationStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(oper_status_, other->oper_status_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddResp_CreatedObjectResult_OperationStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddResp_CreatedObjectResult::InitAsDefaultInstance() {
  ::usp::_AddResp_CreatedObjectResult_default_instance_._instance.get_mutable()->oper_status_ = const_cast< ::usp::AddResp_CreatedObjectResult_OperationStatus*>(
      ::usp::AddResp_CreatedObjectResult_OperationStatus::internal_default_instance());
}
class AddResp_CreatedObjectResult::_Internal {
 public:
  static const ::usp::AddResp_CreatedObjectResult_OperationStatus& oper_status(const AddResp_CreatedObjectResult* msg);
};

const ::usp::AddResp_CreatedObjectResult_OperationStatus&
AddResp_CreatedObjectResult::_Internal::oper_status(const AddResp_CreatedObjectResult* msg) {
  return *msg->oper_status_;
}
AddResp_CreatedObjectResult::AddResp_CreatedObjectResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.AddResp.CreatedObjectResult)
}
AddResp_CreatedObjectResult::AddResp_CreatedObjectResult(const AddResp_CreatedObjectResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  requested_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requested_path().empty()) {
    requested_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_requested_path(),
      GetArena());
  }
  if (from._internal_has_oper_status()) {
    oper_status_ = new ::usp::AddResp_CreatedObjectResult_OperationStatus(*from.oper_status_);
  } else {
    oper_status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:usp.AddResp.CreatedObjectResult)
}

void AddResp_CreatedObjectResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddResp_CreatedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base);
  requested_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oper_status_ = nullptr;
}

AddResp_CreatedObjectResult::~AddResp_CreatedObjectResult() {
  // @@protoc_insertion_point(destructor:usp.AddResp.CreatedObjectResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddResp_CreatedObjectResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  requested_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete oper_status_;
}

void AddResp_CreatedObjectResult::ArenaDtor(void* object) {
  AddResp_CreatedObjectResult* _this = reinterpret_cast< AddResp_CreatedObjectResult* >(object);
  (void)_this;
}
void AddResp_CreatedObjectResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddResp_CreatedObjectResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddResp_CreatedObjectResult& AddResp_CreatedObjectResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddResp_CreatedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void AddResp_CreatedObjectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.AddResp.CreatedObjectResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requested_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && oper_status_ != nullptr) {
    delete oper_status_;
  }
  oper_status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddResp_CreatedObjectResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string requested_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_requested_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.AddResp.CreatedObjectResult.requested_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.AddResp.CreatedObjectResult.OperationStatus oper_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oper_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddResp_CreatedObjectResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.AddResp.CreatedObjectResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requested_path = 1;
  if (this->requested_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requested_path().data(), static_cast<int>(this->_internal_requested_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.AddResp.CreatedObjectResult.requested_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_requested_path(), target);
  }

  // .usp.AddResp.CreatedObjectResult.OperationStatus oper_status = 2;
  if (this->has_oper_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oper_status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.AddResp.CreatedObjectResult)
  return target;
}

size_t AddResp_CreatedObjectResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.AddResp.CreatedObjectResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string requested_path = 1;
  if (this->requested_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requested_path());
  }

  // .usp.AddResp.CreatedObjectResult.OperationStatus oper_status = 2;
  if (this->has_oper_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oper_status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResp_CreatedObjectResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.AddResp.CreatedObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResp_CreatedObjectResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddResp_CreatedObjectResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.AddResp.CreatedObjectResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.AddResp.CreatedObjectResult)
    MergeFrom(*source);
  }
}

void AddResp_CreatedObjectResult::MergeFrom(const AddResp_CreatedObjectResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.AddResp.CreatedObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requested_path().size() > 0) {
    _internal_set_requested_path(from._internal_requested_path());
  }
  if (from.has_oper_status()) {
    _internal_mutable_oper_status()->::usp::AddResp_CreatedObjectResult_OperationStatus::MergeFrom(from._internal_oper_status());
  }
}

void AddResp_CreatedObjectResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.AddResp.CreatedObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResp_CreatedObjectResult::CopyFrom(const AddResp_CreatedObjectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.AddResp.CreatedObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResp_CreatedObjectResult::IsInitialized() const {
  return true;
}

void AddResp_CreatedObjectResult::InternalSwap(AddResp_CreatedObjectResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  requested_path_.Swap(&other->requested_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(oper_status_, other->oper_status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddResp_CreatedObjectResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddResp_ParameterError::InitAsDefaultInstance() {
}
class AddResp_ParameterError::_Internal {
 public:
};

AddResp_ParameterError::AddResp_ParameterError(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.AddResp.ParameterError)
}
AddResp_ParameterError::AddResp_ParameterError(const AddResp_ParameterError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_param().empty()) {
    param_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param(),
      GetArena());
  }
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.AddResp.ParameterError)
}

void AddResp_ParameterError::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto.base);
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

AddResp_ParameterError::~AddResp_ParameterError() {
  // @@protoc_insertion_point(destructor:usp.AddResp.ParameterError)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddResp_ParameterError::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  param_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddResp_ParameterError::ArenaDtor(void* object) {
  AddResp_ParameterError* _this = reinterpret_cast< AddResp_ParameterError* >(object);
  (void)_this;
}
void AddResp_ParameterError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddResp_ParameterError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddResp_ParameterError& AddResp_ParameterError::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void AddResp_ParameterError::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.AddResp.ParameterError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddResp_ParameterError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_param();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.AddResp.ParameterError.param"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // fixed32 err_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.AddResp.ParameterError.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddResp_ParameterError::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.AddResp.ParameterError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param = 1;
  if (this->param().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.AddResp.ParameterError.param");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_param(), target);
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_err_code(), target);
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.AddResp.ParameterError.err_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_err_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.AddResp.ParameterError)
  return target;
}

size_t AddResp_ParameterError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.AddResp.ParameterError)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string param = 1;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param());
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResp_ParameterError::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.AddResp.ParameterError)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResp_ParameterError* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddResp_ParameterError>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.AddResp.ParameterError)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.AddResp.ParameterError)
    MergeFrom(*source);
  }
}

void AddResp_ParameterError::MergeFrom(const AddResp_ParameterError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.AddResp.ParameterError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param().size() > 0) {
    _internal_set_param(from._internal_param());
  }
  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void AddResp_ParameterError::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.AddResp.ParameterError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResp_ParameterError::CopyFrom(const AddResp_ParameterError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.AddResp.ParameterError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResp_ParameterError::IsInitialized() const {
  return true;
}

void AddResp_ParameterError::InternalSwap(AddResp_ParameterError* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_.Swap(&other->param_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddResp_ParameterError::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddResp::InitAsDefaultInstance() {
}
class AddResp::_Internal {
 public:
};

AddResp::AddResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  created_obj_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.AddResp)
}
AddResp::AddResp(const AddResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      created_obj_results_(from.created_obj_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usp.AddResp)
}

void AddResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddResp_usp_2dmsg_2d1_2d1_2eproto.base);
}

AddResp::~AddResp() {
  // @@protoc_insertion_point(destructor:usp.AddResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddResp::ArenaDtor(void* object) {
  AddResp* _this = reinterpret_cast< AddResp* >(object);
  (void)_this;
}
void AddResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddResp& AddResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddResp_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void AddResp::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.AddResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  created_obj_results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .usp.AddResp.CreatedObjectResult created_obj_results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_created_obj_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.AddResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .usp.AddResp.CreatedObjectResult created_obj_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_created_obj_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_created_obj_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.AddResp)
  return target;
}

size_t AddResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.AddResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.AddResp.CreatedObjectResult created_obj_results = 1;
  total_size += 1UL * this->_internal_created_obj_results_size();
  for (const auto& msg : this->created_obj_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.AddResp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.AddResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.AddResp)
    MergeFrom(*source);
  }
}

void AddResp::MergeFrom(const AddResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.AddResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  created_obj_results_.MergeFrom(from.created_obj_results_);
}

void AddResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.AddResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResp::CopyFrom(const AddResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.AddResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResp::IsInitialized() const {
  return true;
}

void AddResp::InternalSwap(AddResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  created_obj_results_.InternalSwap(&other->created_obj_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Delete::InitAsDefaultInstance() {
}
class Delete::_Internal {
 public:
};

Delete::Delete(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  obj_paths_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Delete)
}
Delete::Delete(const Delete& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      obj_paths_(from.obj_paths_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  allow_partial_ = from.allow_partial_;
  // @@protoc_insertion_point(copy_constructor:usp.Delete)
}

void Delete::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Delete_usp_2dmsg_2d1_2d1_2eproto.base);
  allow_partial_ = false;
}

Delete::~Delete() {
  // @@protoc_insertion_point(destructor:usp.Delete)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Delete::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Delete::ArenaDtor(void* object) {
  Delete* _this = reinterpret_cast< Delete* >(object);
  (void)_this;
}
void Delete::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Delete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Delete& Delete::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Delete_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Delete::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Delete)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_paths_.Clear();
  allow_partial_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Delete::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool allow_partial = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          allow_partial_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string obj_paths = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_obj_paths();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Delete.obj_paths"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Delete::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Delete)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool allow_partial = 1;
  if (this->allow_partial() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_allow_partial(), target);
  }

  // repeated string obj_paths = 2;
  for (int i = 0, n = this->_internal_obj_paths_size(); i < n; i++) {
    const auto& s = this->_internal_obj_paths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Delete.obj_paths");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Delete)
  return target;
}

size_t Delete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Delete)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string obj_paths = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(obj_paths_.size());
  for (int i = 0, n = obj_paths_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      obj_paths_.Get(i));
  }

  // bool allow_partial = 1;
  if (this->allow_partial() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Delete::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Delete)
  GOOGLE_DCHECK_NE(&from, this);
  const Delete* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Delete>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Delete)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Delete)
    MergeFrom(*source);
  }
}

void Delete::MergeFrom(const Delete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Delete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  obj_paths_.MergeFrom(from.obj_paths_);
  if (from.allow_partial() != 0) {
    _internal_set_allow_partial(from._internal_allow_partial());
  }
}

void Delete::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Delete::CopyFrom(const Delete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Delete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Delete::IsInitialized() const {
  return true;
}

void Delete::InternalSwap(Delete* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  obj_paths_.InternalSwap(&other->obj_paths_);
  swap(allow_partial_, other->allow_partial_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Delete::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::InitAsDefaultInstance() {
}
class DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::_Internal {
 public:
};

DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
}
DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure(const DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::~DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure() {
  // @@protoc_insertion_point(destructor:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::ArenaDtor(void* object) {
  DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure* _this = reinterpret_cast< DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure* >(object);
  (void)_this;
}
void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure& DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // fixed32 err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(1, this->_internal_err_code(), target);
  }

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure.err_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_err_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
  return target;
}

size_t DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
    MergeFrom(*source);
  }
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::MergeFrom(const DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::CopyFrom(const DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::IsInitialized() const {
  return true;
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::InternalSwap(DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::InitAsDefaultInstance() {
}
class DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::_Internal {
 public:
};

DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  affected_paths_(arena),
  unaffected_path_errs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
}
DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess(const DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      affected_paths_(from.affected_paths_),
      unaffected_path_errs_(from.unaffected_path_errs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base);
}

DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::~DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess() {
  // @@protoc_insertion_point(destructor:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::ArenaDtor(void* object) {
  DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess* _this = reinterpret_cast< DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess* >(object);
  (void)_this;
}
void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess& DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  affected_paths_.Clear();
  unaffected_path_errs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string affected_paths = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_affected_paths();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess.affected_paths"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .usp.DeleteResp.UnaffectedPathError unaffected_path_errs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_unaffected_path_errs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string affected_paths = 1;
  for (int i = 0, n = this->_internal_affected_paths_size(); i < n; i++) {
    const auto& s = this->_internal_affected_paths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess.affected_paths");
    target = stream->WriteString(1, s, target);
  }

  // repeated .usp.DeleteResp.UnaffectedPathError unaffected_path_errs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_unaffected_path_errs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_unaffected_path_errs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
  return target;
}

size_t DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string affected_paths = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(affected_paths_.size());
  for (int i = 0, n = affected_paths_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      affected_paths_.Get(i));
  }

  // repeated .usp.DeleteResp.UnaffectedPathError unaffected_path_errs = 2;
  total_size += 1UL * this->_internal_unaffected_path_errs_size();
  for (const auto& msg : this->unaffected_path_errs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
    MergeFrom(*source);
  }
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::MergeFrom(const DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  affected_paths_.MergeFrom(from.affected_paths_);
  unaffected_path_errs_.MergeFrom(from.unaffected_path_errs_);
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::CopyFrom(const DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::IsInitialized() const {
  return true;
}

void DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::InternalSwap(DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  affected_paths_.InternalSwap(&other->affected_paths_);
  unaffected_path_errs_.InternalSwap(&other->unaffected_path_errs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResp_DeletedObjectResult_OperationStatus::InitAsDefaultInstance() {
  ::usp::_DeleteResp_DeletedObjectResult_OperationStatus_default_instance_.oper_failure_ = const_cast< ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure*>(
      ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::internal_default_instance());
  ::usp::_DeleteResp_DeletedObjectResult_OperationStatus_default_instance_.oper_success_ = const_cast< ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess*>(
      ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::internal_default_instance());
}
class DeleteResp_DeletedObjectResult_OperationStatus::_Internal {
 public:
  static const ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure& oper_failure(const DeleteResp_DeletedObjectResult_OperationStatus* msg);
  static const ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess& oper_success(const DeleteResp_DeletedObjectResult_OperationStatus* msg);
};

const ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure&
DeleteResp_DeletedObjectResult_OperationStatus::_Internal::oper_failure(const DeleteResp_DeletedObjectResult_OperationStatus* msg) {
  return *msg->oper_status_.oper_failure_;
}
const ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess&
DeleteResp_DeletedObjectResult_OperationStatus::_Internal::oper_success(const DeleteResp_DeletedObjectResult_OperationStatus* msg) {
  return *msg->oper_status_.oper_success_;
}
void DeleteResp_DeletedObjectResult_OperationStatus::set_allocated_oper_failure(::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure* oper_failure) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_oper_status();
  if (oper_failure) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oper_failure);
    if (message_arena != submessage_arena) {
      oper_failure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oper_failure, submessage_arena);
    }
    set_has_oper_failure();
    oper_status_.oper_failure_ = oper_failure;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.DeleteResp.DeletedObjectResult.OperationStatus.oper_failure)
}
void DeleteResp_DeletedObjectResult_OperationStatus::set_allocated_oper_success(::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess* oper_success) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_oper_status();
  if (oper_success) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oper_success);
    if (message_arena != submessage_arena) {
      oper_success = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oper_success, submessage_arena);
    }
    set_has_oper_success();
    oper_status_.oper_success_ = oper_success;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.DeleteResp.DeletedObjectResult.OperationStatus.oper_success)
}
DeleteResp_DeletedObjectResult_OperationStatus::DeleteResp_DeletedObjectResult_OperationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.DeleteResp.DeletedObjectResult.OperationStatus)
}
DeleteResp_DeletedObjectResult_OperationStatus::DeleteResp_DeletedObjectResult_OperationStatus(const DeleteResp_DeletedObjectResult_OperationStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_oper_status();
  switch (from.oper_status_case()) {
    case kOperFailure: {
      _internal_mutable_oper_failure()->::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::MergeFrom(from._internal_oper_failure());
      break;
    }
    case kOperSuccess: {
      _internal_mutable_oper_success()->::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::MergeFrom(from._internal_oper_success());
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:usp.DeleteResp.DeletedObjectResult.OperationStatus)
}

void DeleteResp_DeletedObjectResult_OperationStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteResp_DeletedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base);
  clear_has_oper_status();
}

DeleteResp_DeletedObjectResult_OperationStatus::~DeleteResp_DeletedObjectResult_OperationStatus() {
  // @@protoc_insertion_point(destructor:usp.DeleteResp.DeletedObjectResult.OperationStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResp_DeletedObjectResult_OperationStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_oper_status()) {
    clear_oper_status();
  }
}

void DeleteResp_DeletedObjectResult_OperationStatus::ArenaDtor(void* object) {
  DeleteResp_DeletedObjectResult_OperationStatus* _this = reinterpret_cast< DeleteResp_DeletedObjectResult_OperationStatus* >(object);
  (void)_this;
}
void DeleteResp_DeletedObjectResult_OperationStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResp_DeletedObjectResult_OperationStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResp_DeletedObjectResult_OperationStatus& DeleteResp_DeletedObjectResult_OperationStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResp_DeletedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void DeleteResp_DeletedObjectResult_OperationStatus::clear_oper_status() {
// @@protoc_insertion_point(one_of_clear_start:usp.DeleteResp.DeletedObjectResult.OperationStatus)
  switch (oper_status_case()) {
    case kOperFailure: {
      if (GetArena() == nullptr) {
        delete oper_status_.oper_failure_;
      }
      break;
    }
    case kOperSuccess: {
      if (GetArena() == nullptr) {
        delete oper_status_.oper_success_;
      }
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPER_STATUS_NOT_SET;
}


void DeleteResp_DeletedObjectResult_OperationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.DeleteResp.DeletedObjectResult.OperationStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_oper_status();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResp_DeletedObjectResult_OperationStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure oper_failure = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_oper_failure(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess oper_success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oper_success(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResp_DeletedObjectResult_OperationStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.DeleteResp.DeletedObjectResult.OperationStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure oper_failure = 1;
  if (_internal_has_oper_failure()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::oper_failure(this), target, stream);
  }

  // .usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess oper_success = 2;
  if (_internal_has_oper_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oper_success(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.DeleteResp.DeletedObjectResult.OperationStatus)
  return target;
}

size_t DeleteResp_DeletedObjectResult_OperationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.DeleteResp.DeletedObjectResult.OperationStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (oper_status_case()) {
    // .usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationFailure oper_failure = 1;
    case kOperFailure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oper_status_.oper_failure_);
      break;
    }
    // .usp.DeleteResp.DeletedObjectResult.OperationStatus.OperationSuccess oper_success = 2;
    case kOperSuccess: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oper_status_.oper_success_);
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResp_DeletedObjectResult_OperationStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResp_DeletedObjectResult_OperationStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResp_DeletedObjectResult_OperationStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.DeleteResp.DeletedObjectResult.OperationStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.DeleteResp.DeletedObjectResult.OperationStatus)
    MergeFrom(*source);
  }
}

void DeleteResp_DeletedObjectResult_OperationStatus::MergeFrom(const DeleteResp_DeletedObjectResult_OperationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.oper_status_case()) {
    case kOperFailure: {
      _internal_mutable_oper_failure()->::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure::MergeFrom(from._internal_oper_failure());
      break;
    }
    case kOperSuccess: {
      _internal_mutable_oper_success()->::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess::MergeFrom(from._internal_oper_success());
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
}

void DeleteResp_DeletedObjectResult_OperationStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResp_DeletedObjectResult_OperationStatus::CopyFrom(const DeleteResp_DeletedObjectResult_OperationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.DeleteResp.DeletedObjectResult.OperationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResp_DeletedObjectResult_OperationStatus::IsInitialized() const {
  return true;
}

void DeleteResp_DeletedObjectResult_OperationStatus::InternalSwap(DeleteResp_DeletedObjectResult_OperationStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(oper_status_, other->oper_status_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResp_DeletedObjectResult_OperationStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResp_DeletedObjectResult::InitAsDefaultInstance() {
  ::usp::_DeleteResp_DeletedObjectResult_default_instance_._instance.get_mutable()->oper_status_ = const_cast< ::usp::DeleteResp_DeletedObjectResult_OperationStatus*>(
      ::usp::DeleteResp_DeletedObjectResult_OperationStatus::internal_default_instance());
}
class DeleteResp_DeletedObjectResult::_Internal {
 public:
  static const ::usp::DeleteResp_DeletedObjectResult_OperationStatus& oper_status(const DeleteResp_DeletedObjectResult* msg);
};

const ::usp::DeleteResp_DeletedObjectResult_OperationStatus&
DeleteResp_DeletedObjectResult::_Internal::oper_status(const DeleteResp_DeletedObjectResult* msg) {
  return *msg->oper_status_;
}
DeleteResp_DeletedObjectResult::DeleteResp_DeletedObjectResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.DeleteResp.DeletedObjectResult)
}
DeleteResp_DeletedObjectResult::DeleteResp_DeletedObjectResult(const DeleteResp_DeletedObjectResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  requested_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requested_path().empty()) {
    requested_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_requested_path(),
      GetArena());
  }
  if (from._internal_has_oper_status()) {
    oper_status_ = new ::usp::DeleteResp_DeletedObjectResult_OperationStatus(*from.oper_status_);
  } else {
    oper_status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:usp.DeleteResp.DeletedObjectResult)
}

void DeleteResp_DeletedObjectResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteResp_DeletedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base);
  requested_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oper_status_ = nullptr;
}

DeleteResp_DeletedObjectResult::~DeleteResp_DeletedObjectResult() {
  // @@protoc_insertion_point(destructor:usp.DeleteResp.DeletedObjectResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResp_DeletedObjectResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  requested_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete oper_status_;
}

void DeleteResp_DeletedObjectResult::ArenaDtor(void* object) {
  DeleteResp_DeletedObjectResult* _this = reinterpret_cast< DeleteResp_DeletedObjectResult* >(object);
  (void)_this;
}
void DeleteResp_DeletedObjectResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResp_DeletedObjectResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResp_DeletedObjectResult& DeleteResp_DeletedObjectResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResp_DeletedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void DeleteResp_DeletedObjectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.DeleteResp.DeletedObjectResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requested_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && oper_status_ != nullptr) {
    delete oper_status_;
  }
  oper_status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResp_DeletedObjectResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string requested_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_requested_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.DeleteResp.DeletedObjectResult.requested_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.DeleteResp.DeletedObjectResult.OperationStatus oper_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oper_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResp_DeletedObjectResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.DeleteResp.DeletedObjectResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requested_path = 1;
  if (this->requested_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requested_path().data(), static_cast<int>(this->_internal_requested_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.DeleteResp.DeletedObjectResult.requested_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_requested_path(), target);
  }

  // .usp.DeleteResp.DeletedObjectResult.OperationStatus oper_status = 2;
  if (this->has_oper_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oper_status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.DeleteResp.DeletedObjectResult)
  return target;
}

size_t DeleteResp_DeletedObjectResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.DeleteResp.DeletedObjectResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string requested_path = 1;
  if (this->requested_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requested_path());
  }

  // .usp.DeleteResp.DeletedObjectResult.OperationStatus oper_status = 2;
  if (this->has_oper_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oper_status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResp_DeletedObjectResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.DeleteResp.DeletedObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResp_DeletedObjectResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResp_DeletedObjectResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.DeleteResp.DeletedObjectResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.DeleteResp.DeletedObjectResult)
    MergeFrom(*source);
  }
}

void DeleteResp_DeletedObjectResult::MergeFrom(const DeleteResp_DeletedObjectResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.DeleteResp.DeletedObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requested_path().size() > 0) {
    _internal_set_requested_path(from._internal_requested_path());
  }
  if (from.has_oper_status()) {
    _internal_mutable_oper_status()->::usp::DeleteResp_DeletedObjectResult_OperationStatus::MergeFrom(from._internal_oper_status());
  }
}

void DeleteResp_DeletedObjectResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.DeleteResp.DeletedObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResp_DeletedObjectResult::CopyFrom(const DeleteResp_DeletedObjectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.DeleteResp.DeletedObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResp_DeletedObjectResult::IsInitialized() const {
  return true;
}

void DeleteResp_DeletedObjectResult::InternalSwap(DeleteResp_DeletedObjectResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  requested_path_.Swap(&other->requested_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(oper_status_, other->oper_status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResp_DeletedObjectResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResp_UnaffectedPathError::InitAsDefaultInstance() {
}
class DeleteResp_UnaffectedPathError::_Internal {
 public:
};

DeleteResp_UnaffectedPathError::DeleteResp_UnaffectedPathError(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.DeleteResp.UnaffectedPathError)
}
DeleteResp_UnaffectedPathError::DeleteResp_UnaffectedPathError(const DeleteResp_UnaffectedPathError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unaffected_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_unaffected_path().empty()) {
    unaffected_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_unaffected_path(),
      GetArena());
  }
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.DeleteResp.UnaffectedPathError)
}

void DeleteResp_UnaffectedPathError::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteResp_UnaffectedPathError_usp_2dmsg_2d1_2d1_2eproto.base);
  unaffected_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

DeleteResp_UnaffectedPathError::~DeleteResp_UnaffectedPathError() {
  // @@protoc_insertion_point(destructor:usp.DeleteResp.UnaffectedPathError)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResp_UnaffectedPathError::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  unaffected_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteResp_UnaffectedPathError::ArenaDtor(void* object) {
  DeleteResp_UnaffectedPathError* _this = reinterpret_cast< DeleteResp_UnaffectedPathError* >(object);
  (void)_this;
}
void DeleteResp_UnaffectedPathError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResp_UnaffectedPathError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResp_UnaffectedPathError& DeleteResp_UnaffectedPathError::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResp_UnaffectedPathError_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void DeleteResp_UnaffectedPathError::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.DeleteResp.UnaffectedPathError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unaffected_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResp_UnaffectedPathError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string unaffected_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_unaffected_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.DeleteResp.UnaffectedPathError.unaffected_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // fixed32 err_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.DeleteResp.UnaffectedPathError.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResp_UnaffectedPathError::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.DeleteResp.UnaffectedPathError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string unaffected_path = 1;
  if (this->unaffected_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unaffected_path().data(), static_cast<int>(this->_internal_unaffected_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.DeleteResp.UnaffectedPathError.unaffected_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_unaffected_path(), target);
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_err_code(), target);
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.DeleteResp.UnaffectedPathError.err_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_err_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.DeleteResp.UnaffectedPathError)
  return target;
}

size_t DeleteResp_UnaffectedPathError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.DeleteResp.UnaffectedPathError)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unaffected_path = 1;
  if (this->unaffected_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unaffected_path());
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResp_UnaffectedPathError::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.DeleteResp.UnaffectedPathError)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResp_UnaffectedPathError* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResp_UnaffectedPathError>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.DeleteResp.UnaffectedPathError)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.DeleteResp.UnaffectedPathError)
    MergeFrom(*source);
  }
}

void DeleteResp_UnaffectedPathError::MergeFrom(const DeleteResp_UnaffectedPathError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.DeleteResp.UnaffectedPathError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.unaffected_path().size() > 0) {
    _internal_set_unaffected_path(from._internal_unaffected_path());
  }
  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void DeleteResp_UnaffectedPathError::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.DeleteResp.UnaffectedPathError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResp_UnaffectedPathError::CopyFrom(const DeleteResp_UnaffectedPathError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.DeleteResp.UnaffectedPathError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResp_UnaffectedPathError::IsInitialized() const {
  return true;
}

void DeleteResp_UnaffectedPathError::InternalSwap(DeleteResp_UnaffectedPathError* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  unaffected_path_.Swap(&other->unaffected_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResp_UnaffectedPathError::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteResp::InitAsDefaultInstance() {
}
class DeleteResp::_Internal {
 public:
};

DeleteResp::DeleteResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  deleted_obj_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.DeleteResp)
}
DeleteResp::DeleteResp(const DeleteResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      deleted_obj_results_(from.deleted_obj_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usp.DeleteResp)
}

void DeleteResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteResp_usp_2dmsg_2d1_2d1_2eproto.base);
}

DeleteResp::~DeleteResp() {
  // @@protoc_insertion_point(destructor:usp.DeleteResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteResp::ArenaDtor(void* object) {
  DeleteResp* _this = reinterpret_cast< DeleteResp* >(object);
  (void)_this;
}
void DeleteResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteResp& DeleteResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteResp_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void DeleteResp::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.DeleteResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deleted_obj_results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .usp.DeleteResp.DeletedObjectResult deleted_obj_results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_deleted_obj_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.DeleteResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .usp.DeleteResp.DeletedObjectResult deleted_obj_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_deleted_obj_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_deleted_obj_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.DeleteResp)
  return target;
}

size_t DeleteResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.DeleteResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.DeleteResp.DeletedObjectResult deleted_obj_results = 1;
  total_size += 1UL * this->_internal_deleted_obj_results_size();
  for (const auto& msg : this->deleted_obj_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.DeleteResp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.DeleteResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.DeleteResp)
    MergeFrom(*source);
  }
}

void DeleteResp::MergeFrom(const DeleteResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.DeleteResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  deleted_obj_results_.MergeFrom(from.deleted_obj_results_);
}

void DeleteResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.DeleteResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResp::CopyFrom(const DeleteResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.DeleteResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResp::IsInitialized() const {
  return true;
}

void DeleteResp::InternalSwap(DeleteResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  deleted_obj_results_.InternalSwap(&other->deleted_obj_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Set_UpdateObject::InitAsDefaultInstance() {
}
class Set_UpdateObject::_Internal {
 public:
};

Set_UpdateObject::Set_UpdateObject(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_settings_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Set.UpdateObject)
}
Set_UpdateObject::Set_UpdateObject(const Set_UpdateObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      param_settings_(from.param_settings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj_path().empty()) {
    obj_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_obj_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.Set.UpdateObject)
}

void Set_UpdateObject::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Set_UpdateObject_usp_2dmsg_2d1_2d1_2eproto.base);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Set_UpdateObject::~Set_UpdateObject() {
  // @@protoc_insertion_point(destructor:usp.Set.UpdateObject)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Set_UpdateObject::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  obj_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Set_UpdateObject::ArenaDtor(void* object) {
  Set_UpdateObject* _this = reinterpret_cast< Set_UpdateObject* >(object);
  (void)_this;
}
void Set_UpdateObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Set_UpdateObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Set_UpdateObject& Set_UpdateObject::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Set_UpdateObject_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Set_UpdateObject::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Set.UpdateObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_settings_.Clear();
  obj_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Set_UpdateObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string obj_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_obj_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Set.UpdateObject.obj_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.Set.UpdateParamSetting param_settings = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_param_settings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Set_UpdateObject::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Set.UpdateObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_obj_path().data(), static_cast<int>(this->_internal_obj_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Set.UpdateObject.obj_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_obj_path(), target);
  }

  // repeated .usp.Set.UpdateParamSetting param_settings = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_param_settings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_param_settings(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Set.UpdateObject)
  return target;
}

size_t Set_UpdateObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Set.UpdateObject)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.Set.UpdateParamSetting param_settings = 2;
  total_size += 1UL * this->_internal_param_settings_size();
  for (const auto& msg : this->param_settings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_obj_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Set_UpdateObject::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Set.UpdateObject)
  GOOGLE_DCHECK_NE(&from, this);
  const Set_UpdateObject* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Set_UpdateObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Set.UpdateObject)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Set.UpdateObject)
    MergeFrom(*source);
  }
}

void Set_UpdateObject::MergeFrom(const Set_UpdateObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Set.UpdateObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_settings_.MergeFrom(from.param_settings_);
  if (from.obj_path().size() > 0) {
    _internal_set_obj_path(from._internal_obj_path());
  }
}

void Set_UpdateObject::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Set.UpdateObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Set_UpdateObject::CopyFrom(const Set_UpdateObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Set.UpdateObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Set_UpdateObject::IsInitialized() const {
  return true;
}

void Set_UpdateObject::InternalSwap(Set_UpdateObject* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_settings_.InternalSwap(&other->param_settings_);
  obj_path_.Swap(&other->obj_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Set_UpdateObject::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Set_UpdateParamSetting::InitAsDefaultInstance() {
}
class Set_UpdateParamSetting::_Internal {
 public:
};

Set_UpdateParamSetting::Set_UpdateParamSetting(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Set.UpdateParamSetting)
}
Set_UpdateParamSetting::Set_UpdateParamSetting(const Set_UpdateParamSetting& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_param().empty()) {
    param_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  required_ = from.required_;
  // @@protoc_insertion_point(copy_constructor:usp.Set.UpdateParamSetting)
}

void Set_UpdateParamSetting::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Set_UpdateParamSetting_usp_2dmsg_2d1_2d1_2eproto.base);
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  required_ = false;
}

Set_UpdateParamSetting::~Set_UpdateParamSetting() {
  // @@protoc_insertion_point(destructor:usp.Set.UpdateParamSetting)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Set_UpdateParamSetting::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  param_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Set_UpdateParamSetting::ArenaDtor(void* object) {
  Set_UpdateParamSetting* _this = reinterpret_cast< Set_UpdateParamSetting* >(object);
  (void)_this;
}
void Set_UpdateParamSetting::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Set_UpdateParamSetting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Set_UpdateParamSetting& Set_UpdateParamSetting::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Set_UpdateParamSetting_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Set_UpdateParamSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Set.UpdateParamSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  required_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Set_UpdateParamSetting::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_param();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Set.UpdateParamSetting.param"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Set.UpdateParamSetting.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool required = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          required_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Set_UpdateParamSetting::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Set.UpdateParamSetting)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param = 1;
  if (this->param().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Set.UpdateParamSetting.param");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_param(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Set.UpdateParamSetting.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  // bool required = 3;
  if (this->required() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_required(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Set.UpdateParamSetting)
  return target;
}

size_t Set_UpdateParamSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Set.UpdateParamSetting)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string param = 1;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // bool required = 3;
  if (this->required() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Set_UpdateParamSetting::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Set.UpdateParamSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const Set_UpdateParamSetting* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Set_UpdateParamSetting>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Set.UpdateParamSetting)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Set.UpdateParamSetting)
    MergeFrom(*source);
  }
}

void Set_UpdateParamSetting::MergeFrom(const Set_UpdateParamSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Set.UpdateParamSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param().size() > 0) {
    _internal_set_param(from._internal_param());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.required() != 0) {
    _internal_set_required(from._internal_required());
  }
}

void Set_UpdateParamSetting::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Set.UpdateParamSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Set_UpdateParamSetting::CopyFrom(const Set_UpdateParamSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Set.UpdateParamSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Set_UpdateParamSetting::IsInitialized() const {
  return true;
}

void Set_UpdateParamSetting::InternalSwap(Set_UpdateParamSetting* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_.Swap(&other->param_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(required_, other->required_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Set_UpdateParamSetting::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Set::InitAsDefaultInstance() {
}
class Set::_Internal {
 public:
};

Set::Set(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  update_objs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Set)
}
Set::Set(const Set& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      update_objs_(from.update_objs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  allow_partial_ = from.allow_partial_;
  // @@protoc_insertion_point(copy_constructor:usp.Set)
}

void Set::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Set_usp_2dmsg_2d1_2d1_2eproto.base);
  allow_partial_ = false;
}

Set::~Set() {
  // @@protoc_insertion_point(destructor:usp.Set)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Set::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Set::ArenaDtor(void* object) {
  Set* _this = reinterpret_cast< Set* >(object);
  (void)_this;
}
void Set::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Set::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Set& Set::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Set_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Set::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Set)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  update_objs_.Clear();
  allow_partial_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Set::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool allow_partial = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          allow_partial_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.Set.UpdateObject update_objs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_update_objs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Set::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Set)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool allow_partial = 1;
  if (this->allow_partial() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_allow_partial(), target);
  }

  // repeated .usp.Set.UpdateObject update_objs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_update_objs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_update_objs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Set)
  return target;
}

size_t Set::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Set)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.Set.UpdateObject update_objs = 2;
  total_size += 1UL * this->_internal_update_objs_size();
  for (const auto& msg : this->update_objs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool allow_partial = 1;
  if (this->allow_partial() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Set::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Set)
  GOOGLE_DCHECK_NE(&from, this);
  const Set* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Set>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Set)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Set)
    MergeFrom(*source);
  }
}

void Set::MergeFrom(const Set& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Set)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  update_objs_.MergeFrom(from.update_objs_);
  if (from.allow_partial() != 0) {
    _internal_set_allow_partial(from._internal_allow_partial());
  }
}

void Set::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Set::CopyFrom(const Set& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Set::IsInitialized() const {
  return true;
}

void Set::InternalSwap(Set* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  update_objs_.InternalSwap(&other->update_objs_);
  swap(allow_partial_, other->allow_partial_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Set::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::InitAsDefaultInstance() {
}
class SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::_Internal {
 public:
};

SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  updated_inst_failures_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
}
SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure(const SetResp_UpdatedObjectResult_OperationStatus_OperationFailure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      updated_inst_failures_(from.updated_inst_failures_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::~SetResp_UpdatedObjectResult_OperationStatus_OperationFailure() {
  // @@protoc_insertion_point(destructor:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::ArenaDtor(void* object) {
  SetResp_UpdatedObjectResult_OperationStatus_OperationFailure* _this = reinterpret_cast< SetResp_UpdatedObjectResult_OperationStatus_OperationFailure* >(object);
  (void)_this;
}
void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResp_UpdatedObjectResult_OperationStatus_OperationFailure& SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  updated_inst_failures_.Clear();
  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // fixed32 err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.SetResp.UpdatedInstanceFailure updated_inst_failures = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_updated_inst_failures(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(1, this->_internal_err_code(), target);
  }

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure.err_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_err_msg(), target);
  }

  // repeated .usp.SetResp.UpdatedInstanceFailure updated_inst_failures = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_updated_inst_failures_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_updated_inst_failures(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
  return target;
}

size_t SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.SetResp.UpdatedInstanceFailure updated_inst_failures = 3;
  total_size += 1UL * this->_internal_updated_inst_failures_size();
  for (const auto& msg : this->updated_inst_failures_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResp_UpdatedObjectResult_OperationStatus_OperationFailure* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResp_UpdatedObjectResult_OperationStatus_OperationFailure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
    MergeFrom(*source);
  }
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::MergeFrom(const SetResp_UpdatedObjectResult_OperationStatus_OperationFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  updated_inst_failures_.MergeFrom(from.updated_inst_failures_);
  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::CopyFrom(const SetResp_UpdatedObjectResult_OperationStatus_OperationFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::IsInitialized() const {
  return true;
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::InternalSwap(SetResp_UpdatedObjectResult_OperationStatus_OperationFailure* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  updated_inst_failures_.InternalSwap(&other->updated_inst_failures_);
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::InitAsDefaultInstance() {
}
class SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::_Internal {
 public:
};

SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  updated_inst_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
}
SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess(const SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      updated_inst_results_(from.updated_inst_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base);
}

SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::~SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess() {
  // @@protoc_insertion_point(destructor:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::ArenaDtor(void* object) {
  SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess* _this = reinterpret_cast< SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess* >(object);
  (void)_this;
}
void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess& SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  updated_inst_results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .usp.SetResp.UpdatedInstanceResult updated_inst_results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_updated_inst_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .usp.SetResp.UpdatedInstanceResult updated_inst_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_updated_inst_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_updated_inst_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
  return target;
}

size_t SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.SetResp.UpdatedInstanceResult updated_inst_results = 1;
  total_size += 1UL * this->_internal_updated_inst_results_size();
  for (const auto& msg : this->updated_inst_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
    MergeFrom(*source);
  }
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::MergeFrom(const SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  updated_inst_results_.MergeFrom(from.updated_inst_results_);
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::CopyFrom(const SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::IsInitialized() const {
  return true;
}

void SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::InternalSwap(SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  updated_inst_results_.InternalSwap(&other->updated_inst_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResp_UpdatedObjectResult_OperationStatus::InitAsDefaultInstance() {
  ::usp::_SetResp_UpdatedObjectResult_OperationStatus_default_instance_.oper_failure_ = const_cast< ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure*>(
      ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::internal_default_instance());
  ::usp::_SetResp_UpdatedObjectResult_OperationStatus_default_instance_.oper_success_ = const_cast< ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess*>(
      ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::internal_default_instance());
}
class SetResp_UpdatedObjectResult_OperationStatus::_Internal {
 public:
  static const ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure& oper_failure(const SetResp_UpdatedObjectResult_OperationStatus* msg);
  static const ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess& oper_success(const SetResp_UpdatedObjectResult_OperationStatus* msg);
};

const ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure&
SetResp_UpdatedObjectResult_OperationStatus::_Internal::oper_failure(const SetResp_UpdatedObjectResult_OperationStatus* msg) {
  return *msg->oper_status_.oper_failure_;
}
const ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess&
SetResp_UpdatedObjectResult_OperationStatus::_Internal::oper_success(const SetResp_UpdatedObjectResult_OperationStatus* msg) {
  return *msg->oper_status_.oper_success_;
}
void SetResp_UpdatedObjectResult_OperationStatus::set_allocated_oper_failure(::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure* oper_failure) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_oper_status();
  if (oper_failure) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oper_failure);
    if (message_arena != submessage_arena) {
      oper_failure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oper_failure, submessage_arena);
    }
    set_has_oper_failure();
    oper_status_.oper_failure_ = oper_failure;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.SetResp.UpdatedObjectResult.OperationStatus.oper_failure)
}
void SetResp_UpdatedObjectResult_OperationStatus::set_allocated_oper_success(::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess* oper_success) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_oper_status();
  if (oper_success) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oper_success);
    if (message_arena != submessage_arena) {
      oper_success = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oper_success, submessage_arena);
    }
    set_has_oper_success();
    oper_status_.oper_success_ = oper_success;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.SetResp.UpdatedObjectResult.OperationStatus.oper_success)
}
SetResp_UpdatedObjectResult_OperationStatus::SetResp_UpdatedObjectResult_OperationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.SetResp.UpdatedObjectResult.OperationStatus)
}
SetResp_UpdatedObjectResult_OperationStatus::SetResp_UpdatedObjectResult_OperationStatus(const SetResp_UpdatedObjectResult_OperationStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_oper_status();
  switch (from.oper_status_case()) {
    case kOperFailure: {
      _internal_mutable_oper_failure()->::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::MergeFrom(from._internal_oper_failure());
      break;
    }
    case kOperSuccess: {
      _internal_mutable_oper_success()->::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::MergeFrom(from._internal_oper_success());
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:usp.SetResp.UpdatedObjectResult.OperationStatus)
}

void SetResp_UpdatedObjectResult_OperationStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetResp_UpdatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base);
  clear_has_oper_status();
}

SetResp_UpdatedObjectResult_OperationStatus::~SetResp_UpdatedObjectResult_OperationStatus() {
  // @@protoc_insertion_point(destructor:usp.SetResp.UpdatedObjectResult.OperationStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResp_UpdatedObjectResult_OperationStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_oper_status()) {
    clear_oper_status();
  }
}

void SetResp_UpdatedObjectResult_OperationStatus::ArenaDtor(void* object) {
  SetResp_UpdatedObjectResult_OperationStatus* _this = reinterpret_cast< SetResp_UpdatedObjectResult_OperationStatus* >(object);
  (void)_this;
}
void SetResp_UpdatedObjectResult_OperationStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResp_UpdatedObjectResult_OperationStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResp_UpdatedObjectResult_OperationStatus& SetResp_UpdatedObjectResult_OperationStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResp_UpdatedObjectResult_OperationStatus_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void SetResp_UpdatedObjectResult_OperationStatus::clear_oper_status() {
// @@protoc_insertion_point(one_of_clear_start:usp.SetResp.UpdatedObjectResult.OperationStatus)
  switch (oper_status_case()) {
    case kOperFailure: {
      if (GetArena() == nullptr) {
        delete oper_status_.oper_failure_;
      }
      break;
    }
    case kOperSuccess: {
      if (GetArena() == nullptr) {
        delete oper_status_.oper_success_;
      }
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPER_STATUS_NOT_SET;
}


void SetResp_UpdatedObjectResult_OperationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.SetResp.UpdatedObjectResult.OperationStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_oper_status();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResp_UpdatedObjectResult_OperationStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure oper_failure = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_oper_failure(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess oper_success = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oper_success(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResp_UpdatedObjectResult_OperationStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.SetResp.UpdatedObjectResult.OperationStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure oper_failure = 1;
  if (_internal_has_oper_failure()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::oper_failure(this), target, stream);
  }

  // .usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess oper_success = 2;
  if (_internal_has_oper_success()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oper_success(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.SetResp.UpdatedObjectResult.OperationStatus)
  return target;
}

size_t SetResp_UpdatedObjectResult_OperationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.SetResp.UpdatedObjectResult.OperationStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (oper_status_case()) {
    // .usp.SetResp.UpdatedObjectResult.OperationStatus.OperationFailure oper_failure = 1;
    case kOperFailure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oper_status_.oper_failure_);
      break;
    }
    // .usp.SetResp.UpdatedObjectResult.OperationStatus.OperationSuccess oper_success = 2;
    case kOperSuccess: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *oper_status_.oper_success_);
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResp_UpdatedObjectResult_OperationStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResp_UpdatedObjectResult_OperationStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResp_UpdatedObjectResult_OperationStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.SetResp.UpdatedObjectResult.OperationStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.SetResp.UpdatedObjectResult.OperationStatus)
    MergeFrom(*source);
  }
}

void SetResp_UpdatedObjectResult_OperationStatus::MergeFrom(const SetResp_UpdatedObjectResult_OperationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.oper_status_case()) {
    case kOperFailure: {
      _internal_mutable_oper_failure()->::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure::MergeFrom(from._internal_oper_failure());
      break;
    }
    case kOperSuccess: {
      _internal_mutable_oper_success()->::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess::MergeFrom(from._internal_oper_success());
      break;
    }
    case OPER_STATUS_NOT_SET: {
      break;
    }
  }
}

void SetResp_UpdatedObjectResult_OperationStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResp_UpdatedObjectResult_OperationStatus::CopyFrom(const SetResp_UpdatedObjectResult_OperationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.SetResp.UpdatedObjectResult.OperationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResp_UpdatedObjectResult_OperationStatus::IsInitialized() const {
  return true;
}

void SetResp_UpdatedObjectResult_OperationStatus::InternalSwap(SetResp_UpdatedObjectResult_OperationStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(oper_status_, other->oper_status_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResp_UpdatedObjectResult_OperationStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResp_UpdatedObjectResult::InitAsDefaultInstance() {
  ::usp::_SetResp_UpdatedObjectResult_default_instance_._instance.get_mutable()->oper_status_ = const_cast< ::usp::SetResp_UpdatedObjectResult_OperationStatus*>(
      ::usp::SetResp_UpdatedObjectResult_OperationStatus::internal_default_instance());
}
class SetResp_UpdatedObjectResult::_Internal {
 public:
  static const ::usp::SetResp_UpdatedObjectResult_OperationStatus& oper_status(const SetResp_UpdatedObjectResult* msg);
};

const ::usp::SetResp_UpdatedObjectResult_OperationStatus&
SetResp_UpdatedObjectResult::_Internal::oper_status(const SetResp_UpdatedObjectResult* msg) {
  return *msg->oper_status_;
}
SetResp_UpdatedObjectResult::SetResp_UpdatedObjectResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.SetResp.UpdatedObjectResult)
}
SetResp_UpdatedObjectResult::SetResp_UpdatedObjectResult(const SetResp_UpdatedObjectResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  requested_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requested_path().empty()) {
    requested_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_requested_path(),
      GetArena());
  }
  if (from._internal_has_oper_status()) {
    oper_status_ = new ::usp::SetResp_UpdatedObjectResult_OperationStatus(*from.oper_status_);
  } else {
    oper_status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:usp.SetResp.UpdatedObjectResult)
}

void SetResp_UpdatedObjectResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetResp_UpdatedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base);
  requested_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oper_status_ = nullptr;
}

SetResp_UpdatedObjectResult::~SetResp_UpdatedObjectResult() {
  // @@protoc_insertion_point(destructor:usp.SetResp.UpdatedObjectResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResp_UpdatedObjectResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  requested_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete oper_status_;
}

void SetResp_UpdatedObjectResult::ArenaDtor(void* object) {
  SetResp_UpdatedObjectResult* _this = reinterpret_cast< SetResp_UpdatedObjectResult* >(object);
  (void)_this;
}
void SetResp_UpdatedObjectResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResp_UpdatedObjectResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResp_UpdatedObjectResult& SetResp_UpdatedObjectResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResp_UpdatedObjectResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void SetResp_UpdatedObjectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.SetResp.UpdatedObjectResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requested_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && oper_status_ != nullptr) {
    delete oper_status_;
  }
  oper_status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResp_UpdatedObjectResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string requested_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_requested_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.SetResp.UpdatedObjectResult.requested_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.SetResp.UpdatedObjectResult.OperationStatus oper_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oper_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResp_UpdatedObjectResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.SetResp.UpdatedObjectResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requested_path = 1;
  if (this->requested_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requested_path().data(), static_cast<int>(this->_internal_requested_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.SetResp.UpdatedObjectResult.requested_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_requested_path(), target);
  }

  // .usp.SetResp.UpdatedObjectResult.OperationStatus oper_status = 2;
  if (this->has_oper_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oper_status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.SetResp.UpdatedObjectResult)
  return target;
}

size_t SetResp_UpdatedObjectResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.SetResp.UpdatedObjectResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string requested_path = 1;
  if (this->requested_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requested_path());
  }

  // .usp.SetResp.UpdatedObjectResult.OperationStatus oper_status = 2;
  if (this->has_oper_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oper_status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResp_UpdatedObjectResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.SetResp.UpdatedObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResp_UpdatedObjectResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResp_UpdatedObjectResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.SetResp.UpdatedObjectResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.SetResp.UpdatedObjectResult)
    MergeFrom(*source);
  }
}

void SetResp_UpdatedObjectResult::MergeFrom(const SetResp_UpdatedObjectResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.SetResp.UpdatedObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requested_path().size() > 0) {
    _internal_set_requested_path(from._internal_requested_path());
  }
  if (from.has_oper_status()) {
    _internal_mutable_oper_status()->::usp::SetResp_UpdatedObjectResult_OperationStatus::MergeFrom(from._internal_oper_status());
  }
}

void SetResp_UpdatedObjectResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.SetResp.UpdatedObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResp_UpdatedObjectResult::CopyFrom(const SetResp_UpdatedObjectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.SetResp.UpdatedObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResp_UpdatedObjectResult::IsInitialized() const {
  return true;
}

void SetResp_UpdatedObjectResult::InternalSwap(SetResp_UpdatedObjectResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  requested_path_.Swap(&other->requested_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(oper_status_, other->oper_status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResp_UpdatedObjectResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResp_UpdatedInstanceFailure::InitAsDefaultInstance() {
}
class SetResp_UpdatedInstanceFailure::_Internal {
 public:
};

SetResp_UpdatedInstanceFailure::SetResp_UpdatedInstanceFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_errs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.SetResp.UpdatedInstanceFailure)
}
SetResp_UpdatedInstanceFailure::SetResp_UpdatedInstanceFailure(const SetResp_UpdatedInstanceFailure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      param_errs_(from.param_errs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  affected_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_affected_path().empty()) {
    affected_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_affected_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.SetResp.UpdatedInstanceFailure)
}

void SetResp_UpdatedInstanceFailure::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetResp_UpdatedInstanceFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  affected_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetResp_UpdatedInstanceFailure::~SetResp_UpdatedInstanceFailure() {
  // @@protoc_insertion_point(destructor:usp.SetResp.UpdatedInstanceFailure)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResp_UpdatedInstanceFailure::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  affected_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetResp_UpdatedInstanceFailure::ArenaDtor(void* object) {
  SetResp_UpdatedInstanceFailure* _this = reinterpret_cast< SetResp_UpdatedInstanceFailure* >(object);
  (void)_this;
}
void SetResp_UpdatedInstanceFailure::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResp_UpdatedInstanceFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResp_UpdatedInstanceFailure& SetResp_UpdatedInstanceFailure::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResp_UpdatedInstanceFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void SetResp_UpdatedInstanceFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.SetResp.UpdatedInstanceFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_errs_.Clear();
  affected_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResp_UpdatedInstanceFailure::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string affected_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_affected_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.SetResp.UpdatedInstanceFailure.affected_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.SetResp.ParameterError param_errs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_param_errs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResp_UpdatedInstanceFailure::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.SetResp.UpdatedInstanceFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string affected_path = 1;
  if (this->affected_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_affected_path().data(), static_cast<int>(this->_internal_affected_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.SetResp.UpdatedInstanceFailure.affected_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_affected_path(), target);
  }

  // repeated .usp.SetResp.ParameterError param_errs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_param_errs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_param_errs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.SetResp.UpdatedInstanceFailure)
  return target;
}

size_t SetResp_UpdatedInstanceFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.SetResp.UpdatedInstanceFailure)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.SetResp.ParameterError param_errs = 2;
  total_size += 1UL * this->_internal_param_errs_size();
  for (const auto& msg : this->param_errs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string affected_path = 1;
  if (this->affected_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_affected_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResp_UpdatedInstanceFailure::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.SetResp.UpdatedInstanceFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResp_UpdatedInstanceFailure* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResp_UpdatedInstanceFailure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.SetResp.UpdatedInstanceFailure)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.SetResp.UpdatedInstanceFailure)
    MergeFrom(*source);
  }
}

void SetResp_UpdatedInstanceFailure::MergeFrom(const SetResp_UpdatedInstanceFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.SetResp.UpdatedInstanceFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_errs_.MergeFrom(from.param_errs_);
  if (from.affected_path().size() > 0) {
    _internal_set_affected_path(from._internal_affected_path());
  }
}

void SetResp_UpdatedInstanceFailure::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.SetResp.UpdatedInstanceFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResp_UpdatedInstanceFailure::CopyFrom(const SetResp_UpdatedInstanceFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.SetResp.UpdatedInstanceFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResp_UpdatedInstanceFailure::IsInitialized() const {
  return true;
}

void SetResp_UpdatedInstanceFailure::InternalSwap(SetResp_UpdatedInstanceFailure* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_errs_.InternalSwap(&other->param_errs_);
  affected_path_.Swap(&other->affected_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResp_UpdatedInstanceFailure::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse() {}
SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse::MergeFrom(const SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SetResp_UpdatedInstanceResult::InitAsDefaultInstance() {
}
class SetResp_UpdatedInstanceResult::_Internal {
 public:
};

SetResp_UpdatedInstanceResult::SetResp_UpdatedInstanceResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  param_errs_(arena),
  updated_params_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.SetResp.UpdatedInstanceResult)
}
SetResp_UpdatedInstanceResult::SetResp_UpdatedInstanceResult(const SetResp_UpdatedInstanceResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      param_errs_(from.param_errs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  updated_params_.MergeFrom(from.updated_params_);
  affected_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_affected_path().empty()) {
    affected_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_affected_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.SetResp.UpdatedInstanceResult)
}

void SetResp_UpdatedInstanceResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetResp_UpdatedInstanceResult_usp_2dmsg_2d1_2d1_2eproto.base);
  affected_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetResp_UpdatedInstanceResult::~SetResp_UpdatedInstanceResult() {
  // @@protoc_insertion_point(destructor:usp.SetResp.UpdatedInstanceResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResp_UpdatedInstanceResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  affected_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetResp_UpdatedInstanceResult::ArenaDtor(void* object) {
  SetResp_UpdatedInstanceResult* _this = reinterpret_cast< SetResp_UpdatedInstanceResult* >(object);
  (void)_this;
}
void SetResp_UpdatedInstanceResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResp_UpdatedInstanceResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResp_UpdatedInstanceResult& SetResp_UpdatedInstanceResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResp_UpdatedInstanceResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void SetResp_UpdatedInstanceResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.SetResp.UpdatedInstanceResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_errs_.Clear();
  updated_params_.Clear();
  affected_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResp_UpdatedInstanceResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string affected_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_affected_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.SetResp.UpdatedInstanceResult.affected_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .usp.SetResp.ParameterError param_errs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_param_errs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> updated_params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&updated_params_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResp_UpdatedInstanceResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.SetResp.UpdatedInstanceResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string affected_path = 1;
  if (this->affected_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_affected_path().data(), static_cast<int>(this->_internal_affected_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.SetResp.UpdatedInstanceResult.affected_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_affected_path(), target);
  }

  // repeated .usp.SetResp.ParameterError param_errs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_param_errs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_param_errs(i), target, stream);
  }

  // map<string, string> updated_params = 3;
  if (!this->_internal_updated_params().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.SetResp.UpdatedInstanceResult.UpdatedParamsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.SetResp.UpdatedInstanceResult.UpdatedParamsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_updated_params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_updated_params().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_updated_params().begin();
          it != this->_internal_updated_params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_updated_params().begin();
          it != this->_internal_updated_params().end(); ++it) {
        target = SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.SetResp.UpdatedInstanceResult)
  return target;
}

size_t SetResp_UpdatedInstanceResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.SetResp.UpdatedInstanceResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.SetResp.ParameterError param_errs = 2;
  total_size += 1UL * this->_internal_param_errs_size();
  for (const auto& msg : this->param_errs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, string> updated_params = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_updated_params_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_updated_params().begin();
      it != this->_internal_updated_params().end(); ++it) {
    total_size += SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string affected_path = 1;
  if (this->affected_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_affected_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResp_UpdatedInstanceResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.SetResp.UpdatedInstanceResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResp_UpdatedInstanceResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResp_UpdatedInstanceResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.SetResp.UpdatedInstanceResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.SetResp.UpdatedInstanceResult)
    MergeFrom(*source);
  }
}

void SetResp_UpdatedInstanceResult::MergeFrom(const SetResp_UpdatedInstanceResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.SetResp.UpdatedInstanceResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_errs_.MergeFrom(from.param_errs_);
  updated_params_.MergeFrom(from.updated_params_);
  if (from.affected_path().size() > 0) {
    _internal_set_affected_path(from._internal_affected_path());
  }
}

void SetResp_UpdatedInstanceResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.SetResp.UpdatedInstanceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResp_UpdatedInstanceResult::CopyFrom(const SetResp_UpdatedInstanceResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.SetResp.UpdatedInstanceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResp_UpdatedInstanceResult::IsInitialized() const {
  return true;
}

void SetResp_UpdatedInstanceResult::InternalSwap(SetResp_UpdatedInstanceResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_errs_.InternalSwap(&other->param_errs_);
  updated_params_.Swap(&other->updated_params_);
  affected_path_.Swap(&other->affected_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResp_UpdatedInstanceResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResp_ParameterError::InitAsDefaultInstance() {
}
class SetResp_ParameterError::_Internal {
 public:
};

SetResp_ParameterError::SetResp_ParameterError(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.SetResp.ParameterError)
}
SetResp_ParameterError::SetResp_ParameterError(const SetResp_ParameterError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_param().empty()) {
    param_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param(),
      GetArena());
  }
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.SetResp.ParameterError)
}

void SetResp_ParameterError::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto.base);
  param_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

SetResp_ParameterError::~SetResp_ParameterError() {
  // @@protoc_insertion_point(destructor:usp.SetResp.ParameterError)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResp_ParameterError::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  param_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetResp_ParameterError::ArenaDtor(void* object) {
  SetResp_ParameterError* _this = reinterpret_cast< SetResp_ParameterError* >(object);
  (void)_this;
}
void SetResp_ParameterError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResp_ParameterError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResp_ParameterError& SetResp_ParameterError::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResp_ParameterError_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void SetResp_ParameterError::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.SetResp.ParameterError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResp_ParameterError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_param();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.SetResp.ParameterError.param"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // fixed32 err_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.SetResp.ParameterError.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResp_ParameterError::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.SetResp.ParameterError)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param = 1;
  if (this->param().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param().data(), static_cast<int>(this->_internal_param().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.SetResp.ParameterError.param");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_param(), target);
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_err_code(), target);
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.SetResp.ParameterError.err_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_err_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.SetResp.ParameterError)
  return target;
}

size_t SetResp_ParameterError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.SetResp.ParameterError)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string param = 1;
  if (this->param().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param());
  }

  // string err_msg = 3;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 2;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResp_ParameterError::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.SetResp.ParameterError)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResp_ParameterError* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResp_ParameterError>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.SetResp.ParameterError)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.SetResp.ParameterError)
    MergeFrom(*source);
  }
}

void SetResp_ParameterError::MergeFrom(const SetResp_ParameterError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.SetResp.ParameterError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param().size() > 0) {
    _internal_set_param(from._internal_param());
  }
  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void SetResp_ParameterError::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.SetResp.ParameterError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResp_ParameterError::CopyFrom(const SetResp_ParameterError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.SetResp.ParameterError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResp_ParameterError::IsInitialized() const {
  return true;
}

void SetResp_ParameterError::InternalSwap(SetResp_ParameterError* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_.Swap(&other->param_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResp_ParameterError::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetResp::InitAsDefaultInstance() {
}
class SetResp::_Internal {
 public:
};

SetResp::SetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  updated_obj_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.SetResp)
}
SetResp::SetResp(const SetResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      updated_obj_results_(from.updated_obj_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usp.SetResp)
}

void SetResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetResp_usp_2dmsg_2d1_2d1_2eproto.base);
}

SetResp::~SetResp() {
  // @@protoc_insertion_point(destructor:usp.SetResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetResp::ArenaDtor(void* object) {
  SetResp* _this = reinterpret_cast< SetResp* >(object);
  (void)_this;
}
void SetResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetResp& SetResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetResp_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void SetResp::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.SetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  updated_obj_results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .usp.SetResp.UpdatedObjectResult updated_obj_results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_updated_obj_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.SetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .usp.SetResp.UpdatedObjectResult updated_obj_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_updated_obj_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_updated_obj_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.SetResp)
  return target;
}

size_t SetResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.SetResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.SetResp.UpdatedObjectResult updated_obj_results = 1;
  total_size += 1UL * this->_internal_updated_obj_results_size();
  for (const auto& msg : this->updated_obj_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.SetResp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.SetResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.SetResp)
    MergeFrom(*source);
  }
}

void SetResp::MergeFrom(const SetResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.SetResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  updated_obj_results_.MergeFrom(from.updated_obj_results_);
}

void SetResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.SetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResp::CopyFrom(const SetResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.SetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResp::IsInitialized() const {
  return true;
}

void SetResp::InternalSwap(SetResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  updated_obj_results_.InternalSwap(&other->updated_obj_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Operate_InputArgsEntry_DoNotUse::Operate_InputArgsEntry_DoNotUse() {}
Operate_InputArgsEntry_DoNotUse::Operate_InputArgsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Operate_InputArgsEntry_DoNotUse::MergeFrom(const Operate_InputArgsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Operate_InputArgsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Operate_InputArgsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Operate::InitAsDefaultInstance() {
}
class Operate::_Internal {
 public:
};

Operate::Operate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  input_args_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Operate)
}
Operate::Operate(const Operate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  input_args_.MergeFrom(from.input_args_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_command(),
      GetArena());
  }
  command_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command_key().empty()) {
    command_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_command_key(),
      GetArena());
  }
  send_resp_ = from.send_resp_;
  // @@protoc_insertion_point(copy_constructor:usp.Operate)
}

void Operate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Operate_usp_2dmsg_2d1_2d1_2eproto.base);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  command_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  send_resp_ = false;
}

Operate::~Operate() {
  // @@protoc_insertion_point(destructor:usp.Operate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Operate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  command_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Operate::ArenaDtor(void* object) {
  Operate* _this = reinterpret_cast< Operate* >(object);
  (void)_this;
}
void Operate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Operate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Operate& Operate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Operate_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Operate::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Operate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_args_.Clear();
  command_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  command_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  send_resp_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Operate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Operate.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string command_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_command_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Operate.command_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool send_resp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          send_resp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> input_args = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&input_args_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Operate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Operate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Operate.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string command_key = 2;
  if (this->command_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command_key().data(), static_cast<int>(this->_internal_command_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Operate.command_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_command_key(), target);
  }

  // bool send_resp = 3;
  if (this->send_resp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_send_resp(), target);
  }

  // map<string, string> input_args = 4;
  if (!this->_internal_input_args().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.Operate.InputArgsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.Operate.InputArgsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_input_args().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_input_args().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_input_args().begin();
          it != this->_internal_input_args().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Operate_InputArgsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_input_args().begin();
          it != this->_internal_input_args().end(); ++it) {
        target = Operate_InputArgsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Operate)
  return target;
}

size_t Operate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Operate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> input_args = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_input_args_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_input_args().begin();
      it != this->_internal_input_args().end(); ++it) {
    total_size += Operate_InputArgsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string command_key = 2;
  if (this->command_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command_key());
  }

  // bool send_resp = 3;
  if (this->send_resp() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Operate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Operate)
  GOOGLE_DCHECK_NE(&from, this);
  const Operate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Operate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Operate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Operate)
    MergeFrom(*source);
  }
}

void Operate::MergeFrom(const Operate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Operate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_args_.MergeFrom(from.input_args_);
  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.command_key().size() > 0) {
    _internal_set_command_key(from._internal_command_key());
  }
  if (from.send_resp() != 0) {
    _internal_set_send_resp(from._internal_send_resp());
  }
}

void Operate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Operate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operate::CopyFrom(const Operate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Operate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operate::IsInitialized() const {
  return true;
}

void Operate::InternalSwap(Operate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  input_args_.Swap(&other->input_args_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  command_key_.Swap(&other->command_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(send_resp_, other->send_resp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Operate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse() {}
OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse::MergeFrom(const OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void OperateResp_OperationResult_OutputArgs::InitAsDefaultInstance() {
}
class OperateResp_OperationResult_OutputArgs::_Internal {
 public:
};

OperateResp_OperationResult_OutputArgs::OperateResp_OperationResult_OutputArgs(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  output_args_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.OperateResp.OperationResult.OutputArgs)
}
OperateResp_OperationResult_OutputArgs::OperateResp_OperationResult_OutputArgs(const OperateResp_OperationResult_OutputArgs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  output_args_.MergeFrom(from.output_args_);
  // @@protoc_insertion_point(copy_constructor:usp.OperateResp.OperationResult.OutputArgs)
}

void OperateResp_OperationResult_OutputArgs::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OperateResp_OperationResult_OutputArgs_usp_2dmsg_2d1_2d1_2eproto.base);
}

OperateResp_OperationResult_OutputArgs::~OperateResp_OperationResult_OutputArgs() {
  // @@protoc_insertion_point(destructor:usp.OperateResp.OperationResult.OutputArgs)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OperateResp_OperationResult_OutputArgs::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void OperateResp_OperationResult_OutputArgs::ArenaDtor(void* object) {
  OperateResp_OperationResult_OutputArgs* _this = reinterpret_cast< OperateResp_OperationResult_OutputArgs* >(object);
  (void)_this;
}
void OperateResp_OperationResult_OutputArgs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OperateResp_OperationResult_OutputArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperateResp_OperationResult_OutputArgs& OperateResp_OperationResult_OutputArgs::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OperateResp_OperationResult_OutputArgs_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void OperateResp_OperationResult_OutputArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.OperateResp.OperationResult.OutputArgs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_args_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperateResp_OperationResult_OutputArgs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, string> output_args = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&output_args_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OperateResp_OperationResult_OutputArgs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.OperateResp.OperationResult.OutputArgs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> output_args = 1;
  if (!this->_internal_output_args().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.OperateResp.OperationResult.OutputArgs.OutputArgsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.OperateResp.OperationResult.OutputArgs.OutputArgsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_output_args().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_output_args().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_output_args().begin();
          it != this->_internal_output_args().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_output_args().begin();
          it != this->_internal_output_args().end(); ++it) {
        target = OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.OperateResp.OperationResult.OutputArgs)
  return target;
}

size_t OperateResp_OperationResult_OutputArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.OperateResp.OperationResult.OutputArgs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> output_args = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_output_args_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_output_args().begin();
      it != this->_internal_output_args().end(); ++it) {
    total_size += OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperateResp_OperationResult_OutputArgs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.OperateResp.OperationResult.OutputArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const OperateResp_OperationResult_OutputArgs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperateResp_OperationResult_OutputArgs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.OperateResp.OperationResult.OutputArgs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.OperateResp.OperationResult.OutputArgs)
    MergeFrom(*source);
  }
}

void OperateResp_OperationResult_OutputArgs::MergeFrom(const OperateResp_OperationResult_OutputArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.OperateResp.OperationResult.OutputArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_args_.MergeFrom(from.output_args_);
}

void OperateResp_OperationResult_OutputArgs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.OperateResp.OperationResult.OutputArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperateResp_OperationResult_OutputArgs::CopyFrom(const OperateResp_OperationResult_OutputArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.OperateResp.OperationResult.OutputArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperateResp_OperationResult_OutputArgs::IsInitialized() const {
  return true;
}

void OperateResp_OperationResult_OutputArgs::InternalSwap(OperateResp_OperationResult_OutputArgs* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  output_args_.Swap(&other->output_args_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperateResp_OperationResult_OutputArgs::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OperateResp_OperationResult_CommandFailure::InitAsDefaultInstance() {
}
class OperateResp_OperationResult_CommandFailure::_Internal {
 public:
};

OperateResp_OperationResult_CommandFailure::OperateResp_OperationResult_CommandFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.OperateResp.OperationResult.CommandFailure)
}
OperateResp_OperationResult_CommandFailure::OperateResp_OperationResult_CommandFailure(const OperateResp_OperationResult_CommandFailure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.OperateResp.OperationResult.CommandFailure)
}

void OperateResp_OperationResult_CommandFailure::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OperateResp_OperationResult_CommandFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

OperateResp_OperationResult_CommandFailure::~OperateResp_OperationResult_CommandFailure() {
  // @@protoc_insertion_point(destructor:usp.OperateResp.OperationResult.CommandFailure)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OperateResp_OperationResult_CommandFailure::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OperateResp_OperationResult_CommandFailure::ArenaDtor(void* object) {
  OperateResp_OperationResult_CommandFailure* _this = reinterpret_cast< OperateResp_OperationResult_CommandFailure* >(object);
  (void)_this;
}
void OperateResp_OperationResult_CommandFailure::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OperateResp_OperationResult_CommandFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperateResp_OperationResult_CommandFailure& OperateResp_OperationResult_CommandFailure::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OperateResp_OperationResult_CommandFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void OperateResp_OperationResult_CommandFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.OperateResp.OperationResult.CommandFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperateResp_OperationResult_CommandFailure::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // fixed32 err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.OperateResp.OperationResult.CommandFailure.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OperateResp_OperationResult_CommandFailure::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.OperateResp.OperationResult.CommandFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(1, this->_internal_err_code(), target);
  }

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.OperateResp.OperationResult.CommandFailure.err_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_err_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.OperateResp.OperationResult.CommandFailure)
  return target;
}

size_t OperateResp_OperationResult_CommandFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.OperateResp.OperationResult.CommandFailure)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperateResp_OperationResult_CommandFailure::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.OperateResp.OperationResult.CommandFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const OperateResp_OperationResult_CommandFailure* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperateResp_OperationResult_CommandFailure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.OperateResp.OperationResult.CommandFailure)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.OperateResp.OperationResult.CommandFailure)
    MergeFrom(*source);
  }
}

void OperateResp_OperationResult_CommandFailure::MergeFrom(const OperateResp_OperationResult_CommandFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.OperateResp.OperationResult.CommandFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void OperateResp_OperationResult_CommandFailure::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.OperateResp.OperationResult.CommandFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperateResp_OperationResult_CommandFailure::CopyFrom(const OperateResp_OperationResult_CommandFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.OperateResp.OperationResult.CommandFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperateResp_OperationResult_CommandFailure::IsInitialized() const {
  return true;
}

void OperateResp_OperationResult_CommandFailure::InternalSwap(OperateResp_OperationResult_CommandFailure* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperateResp_OperationResult_CommandFailure::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OperateResp_OperationResult::InitAsDefaultInstance() {
  ::usp::_OperateResp_OperationResult_default_instance_.req_obj_path_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::usp::_OperateResp_OperationResult_default_instance_.req_output_args_ = const_cast< ::usp::OperateResp_OperationResult_OutputArgs*>(
      ::usp::OperateResp_OperationResult_OutputArgs::internal_default_instance());
  ::usp::_OperateResp_OperationResult_default_instance_.cmd_failure_ = const_cast< ::usp::OperateResp_OperationResult_CommandFailure*>(
      ::usp::OperateResp_OperationResult_CommandFailure::internal_default_instance());
}
class OperateResp_OperationResult::_Internal {
 public:
  static const ::usp::OperateResp_OperationResult_OutputArgs& req_output_args(const OperateResp_OperationResult* msg);
  static const ::usp::OperateResp_OperationResult_CommandFailure& cmd_failure(const OperateResp_OperationResult* msg);
};

const ::usp::OperateResp_OperationResult_OutputArgs&
OperateResp_OperationResult::_Internal::req_output_args(const OperateResp_OperationResult* msg) {
  return *msg->operation_resp_.req_output_args_;
}
const ::usp::OperateResp_OperationResult_CommandFailure&
OperateResp_OperationResult::_Internal::cmd_failure(const OperateResp_OperationResult* msg) {
  return *msg->operation_resp_.cmd_failure_;
}
void OperateResp_OperationResult::set_allocated_req_output_args(::usp::OperateResp_OperationResult_OutputArgs* req_output_args) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_operation_resp();
  if (req_output_args) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(req_output_args);
    if (message_arena != submessage_arena) {
      req_output_args = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req_output_args, submessage_arena);
    }
    set_has_req_output_args();
    operation_resp_.req_output_args_ = req_output_args;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.OperateResp.OperationResult.req_output_args)
}
void OperateResp_OperationResult::set_allocated_cmd_failure(::usp::OperateResp_OperationResult_CommandFailure* cmd_failure) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_operation_resp();
  if (cmd_failure) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cmd_failure);
    if (message_arena != submessage_arena) {
      cmd_failure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmd_failure, submessage_arena);
    }
    set_has_cmd_failure();
    operation_resp_.cmd_failure_ = cmd_failure;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.OperateResp.OperationResult.cmd_failure)
}
OperateResp_OperationResult::OperateResp_OperationResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.OperateResp.OperationResult)
}
OperateResp_OperationResult::OperateResp_OperationResult(const OperateResp_OperationResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  executed_command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_executed_command().empty()) {
    executed_command_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_executed_command(),
      GetArena());
  }
  clear_has_operation_resp();
  switch (from.operation_resp_case()) {
    case kReqObjPath: {
      _internal_set_req_obj_path(from._internal_req_obj_path());
      break;
    }
    case kReqOutputArgs: {
      _internal_mutable_req_output_args()->::usp::OperateResp_OperationResult_OutputArgs::MergeFrom(from._internal_req_output_args());
      break;
    }
    case kCmdFailure: {
      _internal_mutable_cmd_failure()->::usp::OperateResp_OperationResult_CommandFailure::MergeFrom(from._internal_cmd_failure());
      break;
    }
    case OPERATION_RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:usp.OperateResp.OperationResult)
}

void OperateResp_OperationResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OperateResp_OperationResult_usp_2dmsg_2d1_2d1_2eproto.base);
  executed_command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_operation_resp();
}

OperateResp_OperationResult::~OperateResp_OperationResult() {
  // @@protoc_insertion_point(destructor:usp.OperateResp.OperationResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OperateResp_OperationResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  executed_command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_operation_resp()) {
    clear_operation_resp();
  }
}

void OperateResp_OperationResult::ArenaDtor(void* object) {
  OperateResp_OperationResult* _this = reinterpret_cast< OperateResp_OperationResult* >(object);
  (void)_this;
}
void OperateResp_OperationResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OperateResp_OperationResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperateResp_OperationResult& OperateResp_OperationResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OperateResp_OperationResult_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void OperateResp_OperationResult::clear_operation_resp() {
// @@protoc_insertion_point(one_of_clear_start:usp.OperateResp.OperationResult)
  switch (operation_resp_case()) {
    case kReqObjPath: {
      operation_resp_.req_obj_path_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kReqOutputArgs: {
      if (GetArena() == nullptr) {
        delete operation_resp_.req_output_args_;
      }
      break;
    }
    case kCmdFailure: {
      if (GetArena() == nullptr) {
        delete operation_resp_.cmd_failure_;
      }
      break;
    }
    case OPERATION_RESP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPERATION_RESP_NOT_SET;
}


void OperateResp_OperationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.OperateResp.OperationResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  executed_command_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_operation_resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperateResp_OperationResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string executed_command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_executed_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.OperateResp.OperationResult.executed_command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string req_obj_path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_req_obj_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.OperateResp.OperationResult.req_obj_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.OperateResp.OperationResult.OutputArgs req_output_args = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_req_output_args(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.OperateResp.OperationResult.CommandFailure cmd_failure = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_cmd_failure(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OperateResp_OperationResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.OperateResp.OperationResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string executed_command = 1;
  if (this->executed_command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_executed_command().data(), static_cast<int>(this->_internal_executed_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.OperateResp.OperationResult.executed_command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_executed_command(), target);
  }

  // string req_obj_path = 2;
  if (_internal_has_req_obj_path()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_req_obj_path().data(), static_cast<int>(this->_internal_req_obj_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.OperateResp.OperationResult.req_obj_path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_req_obj_path(), target);
  }

  // .usp.OperateResp.OperationResult.OutputArgs req_output_args = 3;
  if (_internal_has_req_output_args()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::req_output_args(this), target, stream);
  }

  // .usp.OperateResp.OperationResult.CommandFailure cmd_failure = 4;
  if (_internal_has_cmd_failure()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::cmd_failure(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.OperateResp.OperationResult)
  return target;
}

size_t OperateResp_OperationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.OperateResp.OperationResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string executed_command = 1;
  if (this->executed_command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_executed_command());
  }

  switch (operation_resp_case()) {
    // string req_obj_path = 2;
    case kReqObjPath: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_req_obj_path());
      break;
    }
    // .usp.OperateResp.OperationResult.OutputArgs req_output_args = 3;
    case kReqOutputArgs: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_resp_.req_output_args_);
      break;
    }
    // .usp.OperateResp.OperationResult.CommandFailure cmd_failure = 4;
    case kCmdFailure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_resp_.cmd_failure_);
      break;
    }
    case OPERATION_RESP_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperateResp_OperationResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.OperateResp.OperationResult)
  GOOGLE_DCHECK_NE(&from, this);
  const OperateResp_OperationResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperateResp_OperationResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.OperateResp.OperationResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.OperateResp.OperationResult)
    MergeFrom(*source);
  }
}

void OperateResp_OperationResult::MergeFrom(const OperateResp_OperationResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.OperateResp.OperationResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.executed_command().size() > 0) {
    _internal_set_executed_command(from._internal_executed_command());
  }
  switch (from.operation_resp_case()) {
    case kReqObjPath: {
      _internal_set_req_obj_path(from._internal_req_obj_path());
      break;
    }
    case kReqOutputArgs: {
      _internal_mutable_req_output_args()->::usp::OperateResp_OperationResult_OutputArgs::MergeFrom(from._internal_req_output_args());
      break;
    }
    case kCmdFailure: {
      _internal_mutable_cmd_failure()->::usp::OperateResp_OperationResult_CommandFailure::MergeFrom(from._internal_cmd_failure());
      break;
    }
    case OPERATION_RESP_NOT_SET: {
      break;
    }
  }
}

void OperateResp_OperationResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.OperateResp.OperationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperateResp_OperationResult::CopyFrom(const OperateResp_OperationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.OperateResp.OperationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperateResp_OperationResult::IsInitialized() const {
  return true;
}

void OperateResp_OperationResult::InternalSwap(OperateResp_OperationResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  executed_command_.Swap(&other->executed_command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(operation_resp_, other->operation_resp_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperateResp_OperationResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OperateResp::InitAsDefaultInstance() {
}
class OperateResp::_Internal {
 public:
};

OperateResp::OperateResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  operation_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.OperateResp)
}
OperateResp::OperateResp(const OperateResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      operation_results_(from.operation_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usp.OperateResp)
}

void OperateResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OperateResp_usp_2dmsg_2d1_2d1_2eproto.base);
}

OperateResp::~OperateResp() {
  // @@protoc_insertion_point(destructor:usp.OperateResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OperateResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void OperateResp::ArenaDtor(void* object) {
  OperateResp* _this = reinterpret_cast< OperateResp* >(object);
  (void)_this;
}
void OperateResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OperateResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperateResp& OperateResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OperateResp_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void OperateResp::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.OperateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operation_results_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OperateResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .usp.OperateResp.OperationResult operation_results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_operation_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OperateResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.OperateResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .usp.OperateResp.OperationResult operation_results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_operation_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_operation_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.OperateResp)
  return target;
}

size_t OperateResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.OperateResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usp.OperateResp.OperationResult operation_results = 1;
  total_size += 1UL * this->_internal_operation_results_size();
  for (const auto& msg : this->operation_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperateResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.OperateResp)
  GOOGLE_DCHECK_NE(&from, this);
  const OperateResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperateResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.OperateResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.OperateResp)
    MergeFrom(*source);
  }
}

void OperateResp::MergeFrom(const OperateResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.OperateResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operation_results_.MergeFrom(from.operation_results_);
}

void OperateResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.OperateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperateResp::CopyFrom(const OperateResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.OperateResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperateResp::IsInitialized() const {
  return true;
}

void OperateResp::InternalSwap(OperateResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  operation_results_.InternalSwap(&other->operation_results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperateResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Notify_Event_ParamsEntry_DoNotUse::Notify_Event_ParamsEntry_DoNotUse() {}
Notify_Event_ParamsEntry_DoNotUse::Notify_Event_ParamsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Notify_Event_ParamsEntry_DoNotUse::MergeFrom(const Notify_Event_ParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Notify_Event_ParamsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Notify_Event_ParamsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Notify_Event::InitAsDefaultInstance() {
}
class Notify_Event::_Internal {
 public:
};

Notify_Event::Notify_Event(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  params_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Notify.Event)
}
Notify_Event::Notify_Event(const Notify_Event& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj_path().empty()) {
    obj_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_obj_path(),
      GetArena());
  }
  event_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_event_name().empty()) {
    event_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_event_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.Notify.Event)
}

void Notify_Event::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Notify_Event_usp_2dmsg_2d1_2d1_2eproto.base);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Notify_Event::~Notify_Event() {
  // @@protoc_insertion_point(destructor:usp.Notify.Event)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notify_Event::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  obj_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  event_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Notify_Event::ArenaDtor(void* object) {
  Notify_Event* _this = reinterpret_cast< Notify_Event* >(object);
  (void)_this;
}
void Notify_Event::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notify_Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Notify_Event& Notify_Event::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Notify_Event_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Notify_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Notify.Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  obj_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  event_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notify_Event::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string obj_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_obj_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.Event.obj_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string event_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_event_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.Event.event_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> params = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&params_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notify_Event::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Notify.Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_obj_path().data(), static_cast<int>(this->_internal_obj_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.Event.obj_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_obj_path(), target);
  }

  // string event_name = 2;
  if (this->event_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_event_name().data(), static_cast<int>(this->_internal_event_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.Event.event_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_event_name(), target);
  }

  // map<string, string> params = 3;
  if (!this->_internal_params().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.Notify.Event.ParamsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.Notify.Event.ParamsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_params().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_params().begin();
          it != this->_internal_params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Notify_Event_ParamsEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_params().begin();
          it != this->_internal_params().end(); ++it) {
        target = Notify_Event_ParamsEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Notify.Event)
  return target;
}

size_t Notify_Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Notify.Event)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> params = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_params_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_params().begin();
      it != this->_internal_params().end(); ++it) {
    total_size += Notify_Event_ParamsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_obj_path());
  }

  // string event_name = 2;
  if (this->event_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_event_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notify_Event::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Notify.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Notify_Event* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notify_Event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Notify.Event)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Notify.Event)
    MergeFrom(*source);
  }
}

void Notify_Event::MergeFrom(const Notify_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Notify.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.obj_path().size() > 0) {
    _internal_set_obj_path(from._internal_obj_path());
  }
  if (from.event_name().size() > 0) {
    _internal_set_event_name(from._internal_event_name());
  }
}

void Notify_Event::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Notify.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify_Event::CopyFrom(const Notify_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Notify.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify_Event::IsInitialized() const {
  return true;
}

void Notify_Event::InternalSwap(Notify_Event* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  params_.Swap(&other->params_);
  obj_path_.Swap(&other->obj_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  event_name_.Swap(&other->event_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Notify_Event::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Notify_ValueChange::InitAsDefaultInstance() {
}
class Notify_ValueChange::_Internal {
 public:
};

Notify_ValueChange::Notify_ValueChange(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Notify.ValueChange)
}
Notify_ValueChange::Notify_ValueChange(const Notify_ValueChange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  param_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_param_path().empty()) {
    param_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_path(),
      GetArena());
  }
  param_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_param_value().empty()) {
    param_value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_param_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.Notify.ValueChange)
}

void Notify_ValueChange::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Notify_ValueChange_usp_2dmsg_2d1_2d1_2eproto.base);
  param_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Notify_ValueChange::~Notify_ValueChange() {
  // @@protoc_insertion_point(destructor:usp.Notify.ValueChange)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notify_ValueChange::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  param_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  param_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Notify_ValueChange::ArenaDtor(void* object) {
  Notify_ValueChange* _this = reinterpret_cast< Notify_ValueChange* >(object);
  (void)_this;
}
void Notify_ValueChange::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notify_ValueChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Notify_ValueChange& Notify_ValueChange::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Notify_ValueChange_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Notify_ValueChange::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Notify.ValueChange)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notify_ValueChange::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string param_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_param_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.ValueChange.param_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string param_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_param_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.ValueChange.param_value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notify_ValueChange::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Notify.ValueChange)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string param_path = 1;
  if (this->param_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param_path().data(), static_cast<int>(this->_internal_param_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.ValueChange.param_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_param_path(), target);
  }

  // string param_value = 2;
  if (this->param_value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_param_value().data(), static_cast<int>(this->_internal_param_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.ValueChange.param_value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_param_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Notify.ValueChange)
  return target;
}

size_t Notify_ValueChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Notify.ValueChange)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string param_path = 1;
  if (this->param_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param_path());
  }

  // string param_value = 2;
  if (this->param_value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_param_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notify_ValueChange::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Notify.ValueChange)
  GOOGLE_DCHECK_NE(&from, this);
  const Notify_ValueChange* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notify_ValueChange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Notify.ValueChange)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Notify.ValueChange)
    MergeFrom(*source);
  }
}

void Notify_ValueChange::MergeFrom(const Notify_ValueChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Notify.ValueChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.param_path().size() > 0) {
    _internal_set_param_path(from._internal_param_path());
  }
  if (from.param_value().size() > 0) {
    _internal_set_param_value(from._internal_param_value());
  }
}

void Notify_ValueChange::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Notify.ValueChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify_ValueChange::CopyFrom(const Notify_ValueChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Notify.ValueChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify_ValueChange::IsInitialized() const {
  return true;
}

void Notify_ValueChange::InternalSwap(Notify_ValueChange* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  param_path_.Swap(&other->param_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  param_value_.Swap(&other->param_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Notify_ValueChange::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Notify_ObjectCreation_UniqueKeysEntry_DoNotUse::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse() {}
Notify_ObjectCreation_UniqueKeysEntry_DoNotUse::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Notify_ObjectCreation_UniqueKeysEntry_DoNotUse::MergeFrom(const Notify_ObjectCreation_UniqueKeysEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Notify_ObjectCreation_UniqueKeysEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Notify_ObjectCreation_UniqueKeysEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Notify_ObjectCreation::InitAsDefaultInstance() {
}
class Notify_ObjectCreation::_Internal {
 public:
};

Notify_ObjectCreation::Notify_ObjectCreation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  unique_keys_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Notify.ObjectCreation)
}
Notify_ObjectCreation::Notify_ObjectCreation(const Notify_ObjectCreation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unique_keys_.MergeFrom(from.unique_keys_);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj_path().empty()) {
    obj_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_obj_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.Notify.ObjectCreation)
}

void Notify_ObjectCreation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Notify_ObjectCreation_usp_2dmsg_2d1_2d1_2eproto.base);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Notify_ObjectCreation::~Notify_ObjectCreation() {
  // @@protoc_insertion_point(destructor:usp.Notify.ObjectCreation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notify_ObjectCreation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  obj_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Notify_ObjectCreation::ArenaDtor(void* object) {
  Notify_ObjectCreation* _this = reinterpret_cast< Notify_ObjectCreation* >(object);
  (void)_this;
}
void Notify_ObjectCreation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notify_ObjectCreation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Notify_ObjectCreation& Notify_ObjectCreation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Notify_ObjectCreation_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Notify_ObjectCreation::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Notify.ObjectCreation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unique_keys_.Clear();
  obj_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notify_ObjectCreation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string obj_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_obj_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.ObjectCreation.obj_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> unique_keys = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&unique_keys_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notify_ObjectCreation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Notify.ObjectCreation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_obj_path().data(), static_cast<int>(this->_internal_obj_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.ObjectCreation.obj_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_obj_path(), target);
  }

  // map<string, string> unique_keys = 2;
  if (!this->_internal_unique_keys().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.Notify.ObjectCreation.UniqueKeysEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.Notify.ObjectCreation.UniqueKeysEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_unique_keys().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_unique_keys().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_unique_keys().begin();
          it != this->_internal_unique_keys().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Notify_ObjectCreation_UniqueKeysEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_unique_keys().begin();
          it != this->_internal_unique_keys().end(); ++it) {
        target = Notify_ObjectCreation_UniqueKeysEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Notify.ObjectCreation)
  return target;
}

size_t Notify_ObjectCreation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Notify.ObjectCreation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> unique_keys = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_unique_keys_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_unique_keys().begin();
      it != this->_internal_unique_keys().end(); ++it) {
    total_size += Notify_ObjectCreation_UniqueKeysEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_obj_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notify_ObjectCreation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Notify.ObjectCreation)
  GOOGLE_DCHECK_NE(&from, this);
  const Notify_ObjectCreation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notify_ObjectCreation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Notify.ObjectCreation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Notify.ObjectCreation)
    MergeFrom(*source);
  }
}

void Notify_ObjectCreation::MergeFrom(const Notify_ObjectCreation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Notify.ObjectCreation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unique_keys_.MergeFrom(from.unique_keys_);
  if (from.obj_path().size() > 0) {
    _internal_set_obj_path(from._internal_obj_path());
  }
}

void Notify_ObjectCreation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Notify.ObjectCreation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify_ObjectCreation::CopyFrom(const Notify_ObjectCreation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Notify.ObjectCreation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify_ObjectCreation::IsInitialized() const {
  return true;
}

void Notify_ObjectCreation::InternalSwap(Notify_ObjectCreation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  unique_keys_.Swap(&other->unique_keys_);
  obj_path_.Swap(&other->obj_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Notify_ObjectCreation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Notify_ObjectDeletion::InitAsDefaultInstance() {
}
class Notify_ObjectDeletion::_Internal {
 public:
};

Notify_ObjectDeletion::Notify_ObjectDeletion(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Notify.ObjectDeletion)
}
Notify_ObjectDeletion::Notify_ObjectDeletion(const Notify_ObjectDeletion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj_path().empty()) {
    obj_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_obj_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.Notify.ObjectDeletion)
}

void Notify_ObjectDeletion::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Notify_ObjectDeletion_usp_2dmsg_2d1_2d1_2eproto.base);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Notify_ObjectDeletion::~Notify_ObjectDeletion() {
  // @@protoc_insertion_point(destructor:usp.Notify.ObjectDeletion)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notify_ObjectDeletion::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  obj_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Notify_ObjectDeletion::ArenaDtor(void* object) {
  Notify_ObjectDeletion* _this = reinterpret_cast< Notify_ObjectDeletion* >(object);
  (void)_this;
}
void Notify_ObjectDeletion::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notify_ObjectDeletion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Notify_ObjectDeletion& Notify_ObjectDeletion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Notify_ObjectDeletion_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Notify_ObjectDeletion::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Notify.ObjectDeletion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notify_ObjectDeletion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string obj_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_obj_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.ObjectDeletion.obj_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notify_ObjectDeletion::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Notify.ObjectDeletion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_obj_path().data(), static_cast<int>(this->_internal_obj_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.ObjectDeletion.obj_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_obj_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Notify.ObjectDeletion)
  return target;
}

size_t Notify_ObjectDeletion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Notify.ObjectDeletion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_obj_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notify_ObjectDeletion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Notify.ObjectDeletion)
  GOOGLE_DCHECK_NE(&from, this);
  const Notify_ObjectDeletion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notify_ObjectDeletion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Notify.ObjectDeletion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Notify.ObjectDeletion)
    MergeFrom(*source);
  }
}

void Notify_ObjectDeletion::MergeFrom(const Notify_ObjectDeletion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Notify.ObjectDeletion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_path().size() > 0) {
    _internal_set_obj_path(from._internal_obj_path());
  }
}

void Notify_ObjectDeletion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Notify.ObjectDeletion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify_ObjectDeletion::CopyFrom(const Notify_ObjectDeletion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Notify.ObjectDeletion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify_ObjectDeletion::IsInitialized() const {
  return true;
}

void Notify_ObjectDeletion::InternalSwap(Notify_ObjectDeletion* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  obj_path_.Swap(&other->obj_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Notify_ObjectDeletion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse() {}
Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse::MergeFrom(const Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Notify_OperationComplete_OutputArgs::InitAsDefaultInstance() {
}
class Notify_OperationComplete_OutputArgs::_Internal {
 public:
};

Notify_OperationComplete_OutputArgs::Notify_OperationComplete_OutputArgs(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  output_args_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Notify.OperationComplete.OutputArgs)
}
Notify_OperationComplete_OutputArgs::Notify_OperationComplete_OutputArgs(const Notify_OperationComplete_OutputArgs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  output_args_.MergeFrom(from.output_args_);
  // @@protoc_insertion_point(copy_constructor:usp.Notify.OperationComplete.OutputArgs)
}

void Notify_OperationComplete_OutputArgs::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Notify_OperationComplete_OutputArgs_usp_2dmsg_2d1_2d1_2eproto.base);
}

Notify_OperationComplete_OutputArgs::~Notify_OperationComplete_OutputArgs() {
  // @@protoc_insertion_point(destructor:usp.Notify.OperationComplete.OutputArgs)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notify_OperationComplete_OutputArgs::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Notify_OperationComplete_OutputArgs::ArenaDtor(void* object) {
  Notify_OperationComplete_OutputArgs* _this = reinterpret_cast< Notify_OperationComplete_OutputArgs* >(object);
  (void)_this;
}
void Notify_OperationComplete_OutputArgs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notify_OperationComplete_OutputArgs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Notify_OperationComplete_OutputArgs& Notify_OperationComplete_OutputArgs::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Notify_OperationComplete_OutputArgs_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Notify_OperationComplete_OutputArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Notify.OperationComplete.OutputArgs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_args_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notify_OperationComplete_OutputArgs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, string> output_args = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&output_args_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notify_OperationComplete_OutputArgs::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Notify.OperationComplete.OutputArgs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> output_args = 1;
  if (!this->_internal_output_args().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.Notify.OperationComplete.OutputArgs.OutputArgsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "usp.Notify.OperationComplete.OutputArgs.OutputArgsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_output_args().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_output_args().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_output_args().begin();
          it != this->_internal_output_args().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_output_args().begin();
          it != this->_internal_output_args().end(); ++it) {
        target = Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Notify.OperationComplete.OutputArgs)
  return target;
}

size_t Notify_OperationComplete_OutputArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Notify.OperationComplete.OutputArgs)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> output_args = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_output_args_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_output_args().begin();
      it != this->_internal_output_args().end(); ++it) {
    total_size += Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notify_OperationComplete_OutputArgs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Notify.OperationComplete.OutputArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const Notify_OperationComplete_OutputArgs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notify_OperationComplete_OutputArgs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Notify.OperationComplete.OutputArgs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Notify.OperationComplete.OutputArgs)
    MergeFrom(*source);
  }
}

void Notify_OperationComplete_OutputArgs::MergeFrom(const Notify_OperationComplete_OutputArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Notify.OperationComplete.OutputArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_args_.MergeFrom(from.output_args_);
}

void Notify_OperationComplete_OutputArgs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Notify.OperationComplete.OutputArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify_OperationComplete_OutputArgs::CopyFrom(const Notify_OperationComplete_OutputArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Notify.OperationComplete.OutputArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify_OperationComplete_OutputArgs::IsInitialized() const {
  return true;
}

void Notify_OperationComplete_OutputArgs::InternalSwap(Notify_OperationComplete_OutputArgs* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  output_args_.Swap(&other->output_args_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Notify_OperationComplete_OutputArgs::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Notify_OperationComplete_CommandFailure::InitAsDefaultInstance() {
}
class Notify_OperationComplete_CommandFailure::_Internal {
 public:
};

Notify_OperationComplete_CommandFailure::Notify_OperationComplete_CommandFailure(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Notify.OperationComplete.CommandFailure)
}
Notify_OperationComplete_CommandFailure::Notify_OperationComplete_CommandFailure(const Notify_OperationComplete_CommandFailure& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_err_msg().empty()) {
    err_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_err_msg(),
      GetArena());
  }
  err_code_ = from.err_code_;
  // @@protoc_insertion_point(copy_constructor:usp.Notify.OperationComplete.CommandFailure)
}

void Notify_OperationComplete_CommandFailure::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Notify_OperationComplete_CommandFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  err_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  err_code_ = 0u;
}

Notify_OperationComplete_CommandFailure::~Notify_OperationComplete_CommandFailure() {
  // @@protoc_insertion_point(destructor:usp.Notify.OperationComplete.CommandFailure)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notify_OperationComplete_CommandFailure::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  err_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Notify_OperationComplete_CommandFailure::ArenaDtor(void* object) {
  Notify_OperationComplete_CommandFailure* _this = reinterpret_cast< Notify_OperationComplete_CommandFailure* >(object);
  (void)_this;
}
void Notify_OperationComplete_CommandFailure::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notify_OperationComplete_CommandFailure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Notify_OperationComplete_CommandFailure& Notify_OperationComplete_CommandFailure::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Notify_OperationComplete_CommandFailure_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Notify_OperationComplete_CommandFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Notify.OperationComplete.CommandFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  err_code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notify_OperationComplete_CommandFailure::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // fixed32 err_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          err_code_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // string err_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_err_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.OperationComplete.CommandFailure.err_msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notify_OperationComplete_CommandFailure::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Notify.OperationComplete.CommandFailure)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(1, this->_internal_err_code(), target);
  }

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_err_msg().data(), static_cast<int>(this->_internal_err_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.OperationComplete.CommandFailure.err_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_err_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Notify.OperationComplete.CommandFailure)
  return target;
}

size_t Notify_OperationComplete_CommandFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Notify.OperationComplete.CommandFailure)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_err_msg());
  }

  // fixed32 err_code = 1;
  if (this->err_code() != 0) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notify_OperationComplete_CommandFailure::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Notify.OperationComplete.CommandFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const Notify_OperationComplete_CommandFailure* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notify_OperationComplete_CommandFailure>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Notify.OperationComplete.CommandFailure)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Notify.OperationComplete.CommandFailure)
    MergeFrom(*source);
  }
}

void Notify_OperationComplete_CommandFailure::MergeFrom(const Notify_OperationComplete_CommandFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Notify.OperationComplete.CommandFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err_msg().size() > 0) {
    _internal_set_err_msg(from._internal_err_msg());
  }
  if (from.err_code() != 0) {
    _internal_set_err_code(from._internal_err_code());
  }
}

void Notify_OperationComplete_CommandFailure::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Notify.OperationComplete.CommandFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify_OperationComplete_CommandFailure::CopyFrom(const Notify_OperationComplete_CommandFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Notify.OperationComplete.CommandFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify_OperationComplete_CommandFailure::IsInitialized() const {
  return true;
}

void Notify_OperationComplete_CommandFailure::InternalSwap(Notify_OperationComplete_CommandFailure* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  err_msg_.Swap(&other->err_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(err_code_, other->err_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Notify_OperationComplete_CommandFailure::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Notify_OperationComplete::InitAsDefaultInstance() {
  ::usp::_Notify_OperationComplete_default_instance_.req_output_args_ = const_cast< ::usp::Notify_OperationComplete_OutputArgs*>(
      ::usp::Notify_OperationComplete_OutputArgs::internal_default_instance());
  ::usp::_Notify_OperationComplete_default_instance_.cmd_failure_ = const_cast< ::usp::Notify_OperationComplete_CommandFailure*>(
      ::usp::Notify_OperationComplete_CommandFailure::internal_default_instance());
}
class Notify_OperationComplete::_Internal {
 public:
  static const ::usp::Notify_OperationComplete_OutputArgs& req_output_args(const Notify_OperationComplete* msg);
  static const ::usp::Notify_OperationComplete_CommandFailure& cmd_failure(const Notify_OperationComplete* msg);
};

const ::usp::Notify_OperationComplete_OutputArgs&
Notify_OperationComplete::_Internal::req_output_args(const Notify_OperationComplete* msg) {
  return *msg->operation_resp_.req_output_args_;
}
const ::usp::Notify_OperationComplete_CommandFailure&
Notify_OperationComplete::_Internal::cmd_failure(const Notify_OperationComplete* msg) {
  return *msg->operation_resp_.cmd_failure_;
}
void Notify_OperationComplete::set_allocated_req_output_args(::usp::Notify_OperationComplete_OutputArgs* req_output_args) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_operation_resp();
  if (req_output_args) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(req_output_args);
    if (message_arena != submessage_arena) {
      req_output_args = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req_output_args, submessage_arena);
    }
    set_has_req_output_args();
    operation_resp_.req_output_args_ = req_output_args;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Notify.OperationComplete.req_output_args)
}
void Notify_OperationComplete::set_allocated_cmd_failure(::usp::Notify_OperationComplete_CommandFailure* cmd_failure) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_operation_resp();
  if (cmd_failure) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cmd_failure);
    if (message_arena != submessage_arena) {
      cmd_failure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmd_failure, submessage_arena);
    }
    set_has_cmd_failure();
    operation_resp_.cmd_failure_ = cmd_failure;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Notify.OperationComplete.cmd_failure)
}
Notify_OperationComplete::Notify_OperationComplete(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Notify.OperationComplete)
}
Notify_OperationComplete::Notify_OperationComplete(const Notify_OperationComplete& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj_path().empty()) {
    obj_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_obj_path(),
      GetArena());
  }
  command_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command_name().empty()) {
    command_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_command_name(),
      GetArena());
  }
  command_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command_key().empty()) {
    command_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_command_key(),
      GetArena());
  }
  clear_has_operation_resp();
  switch (from.operation_resp_case()) {
    case kReqOutputArgs: {
      _internal_mutable_req_output_args()->::usp::Notify_OperationComplete_OutputArgs::MergeFrom(from._internal_req_output_args());
      break;
    }
    case kCmdFailure: {
      _internal_mutable_cmd_failure()->::usp::Notify_OperationComplete_CommandFailure::MergeFrom(from._internal_cmd_failure());
      break;
    }
    case OPERATION_RESP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:usp.Notify.OperationComplete)
}

void Notify_OperationComplete::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Notify_OperationComplete_usp_2dmsg_2d1_2d1_2eproto.base);
  obj_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  command_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  command_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_operation_resp();
}

Notify_OperationComplete::~Notify_OperationComplete() {
  // @@protoc_insertion_point(destructor:usp.Notify.OperationComplete)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notify_OperationComplete::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  obj_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  command_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  command_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_operation_resp()) {
    clear_operation_resp();
  }
}

void Notify_OperationComplete::ArenaDtor(void* object) {
  Notify_OperationComplete* _this = reinterpret_cast< Notify_OperationComplete* >(object);
  (void)_this;
}
void Notify_OperationComplete::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notify_OperationComplete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Notify_OperationComplete& Notify_OperationComplete::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Notify_OperationComplete_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Notify_OperationComplete::clear_operation_resp() {
// @@protoc_insertion_point(one_of_clear_start:usp.Notify.OperationComplete)
  switch (operation_resp_case()) {
    case kReqOutputArgs: {
      if (GetArena() == nullptr) {
        delete operation_resp_.req_output_args_;
      }
      break;
    }
    case kCmdFailure: {
      if (GetArena() == nullptr) {
        delete operation_resp_.cmd_failure_;
      }
      break;
    }
    case OPERATION_RESP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPERATION_RESP_NOT_SET;
}


void Notify_OperationComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Notify.OperationComplete)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  command_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  command_key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_operation_resp();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notify_OperationComplete::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string obj_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_obj_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.OperationComplete.obj_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string command_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_command_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.OperationComplete.command_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string command_key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_command_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.OperationComplete.command_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Notify.OperationComplete.OutputArgs req_output_args = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_req_output_args(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Notify.OperationComplete.CommandFailure cmd_failure = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_cmd_failure(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notify_OperationComplete::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Notify.OperationComplete)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_obj_path().data(), static_cast<int>(this->_internal_obj_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.OperationComplete.obj_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_obj_path(), target);
  }

  // string command_name = 2;
  if (this->command_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command_name().data(), static_cast<int>(this->_internal_command_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.OperationComplete.command_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_command_name(), target);
  }

  // string command_key = 3;
  if (this->command_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command_key().data(), static_cast<int>(this->_internal_command_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.OperationComplete.command_key");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_command_key(), target);
  }

  // .usp.Notify.OperationComplete.OutputArgs req_output_args = 4;
  if (_internal_has_req_output_args()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::req_output_args(this), target, stream);
  }

  // .usp.Notify.OperationComplete.CommandFailure cmd_failure = 5;
  if (_internal_has_cmd_failure()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::cmd_failure(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Notify.OperationComplete)
  return target;
}

size_t Notify_OperationComplete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Notify.OperationComplete)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string obj_path = 1;
  if (this->obj_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_obj_path());
  }

  // string command_name = 2;
  if (this->command_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command_name());
  }

  // string command_key = 3;
  if (this->command_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command_key());
  }

  switch (operation_resp_case()) {
    // .usp.Notify.OperationComplete.OutputArgs req_output_args = 4;
    case kReqOutputArgs: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_resp_.req_output_args_);
      break;
    }
    // .usp.Notify.OperationComplete.CommandFailure cmd_failure = 5;
    case kCmdFailure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_resp_.cmd_failure_);
      break;
    }
    case OPERATION_RESP_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notify_OperationComplete::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Notify.OperationComplete)
  GOOGLE_DCHECK_NE(&from, this);
  const Notify_OperationComplete* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notify_OperationComplete>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Notify.OperationComplete)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Notify.OperationComplete)
    MergeFrom(*source);
  }
}

void Notify_OperationComplete::MergeFrom(const Notify_OperationComplete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Notify.OperationComplete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_path().size() > 0) {
    _internal_set_obj_path(from._internal_obj_path());
  }
  if (from.command_name().size() > 0) {
    _internal_set_command_name(from._internal_command_name());
  }
  if (from.command_key().size() > 0) {
    _internal_set_command_key(from._internal_command_key());
  }
  switch (from.operation_resp_case()) {
    case kReqOutputArgs: {
      _internal_mutable_req_output_args()->::usp::Notify_OperationComplete_OutputArgs::MergeFrom(from._internal_req_output_args());
      break;
    }
    case kCmdFailure: {
      _internal_mutable_cmd_failure()->::usp::Notify_OperationComplete_CommandFailure::MergeFrom(from._internal_cmd_failure());
      break;
    }
    case OPERATION_RESP_NOT_SET: {
      break;
    }
  }
}

void Notify_OperationComplete::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Notify.OperationComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify_OperationComplete::CopyFrom(const Notify_OperationComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Notify.OperationComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify_OperationComplete::IsInitialized() const {
  return true;
}

void Notify_OperationComplete::InternalSwap(Notify_OperationComplete* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  obj_path_.Swap(&other->obj_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  command_name_.Swap(&other->command_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  command_key_.Swap(&other->command_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(operation_resp_, other->operation_resp_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Notify_OperationComplete::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Notify_OnBoardRequest::InitAsDefaultInstance() {
}
class Notify_OnBoardRequest::_Internal {
 public:
};

Notify_OnBoardRequest::Notify_OnBoardRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Notify.OnBoardRequest)
}
Notify_OnBoardRequest::Notify_OnBoardRequest(const Notify_OnBoardRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  oui_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_oui().empty()) {
    oui_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_oui(),
      GetArena());
  }
  product_class_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_product_class().empty()) {
    product_class_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_product_class(),
      GetArena());
  }
  serial_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serial_number().empty()) {
    serial_number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_serial_number(),
      GetArena());
  }
  agent_supported_protocol_versions_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_agent_supported_protocol_versions().empty()) {
    agent_supported_protocol_versions_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_agent_supported_protocol_versions(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.Notify.OnBoardRequest)
}

void Notify_OnBoardRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Notify_OnBoardRequest_usp_2dmsg_2d1_2d1_2eproto.base);
  oui_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  product_class_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serial_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_supported_protocol_versions_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Notify_OnBoardRequest::~Notify_OnBoardRequest() {
  // @@protoc_insertion_point(destructor:usp.Notify.OnBoardRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notify_OnBoardRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  oui_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  product_class_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serial_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  agent_supported_protocol_versions_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Notify_OnBoardRequest::ArenaDtor(void* object) {
  Notify_OnBoardRequest* _this = reinterpret_cast< Notify_OnBoardRequest* >(object);
  (void)_this;
}
void Notify_OnBoardRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notify_OnBoardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Notify_OnBoardRequest& Notify_OnBoardRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Notify_OnBoardRequest_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Notify_OnBoardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Notify.OnBoardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oui_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  product_class_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  serial_number_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  agent_supported_protocol_versions_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notify_OnBoardRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string oui = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_oui();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.OnBoardRequest.oui"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string product_class = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_product_class();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.OnBoardRequest.product_class"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string serial_number = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_serial_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.OnBoardRequest.serial_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string agent_supported_protocol_versions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_agent_supported_protocol_versions();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.OnBoardRequest.agent_supported_protocol_versions"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notify_OnBoardRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Notify.OnBoardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string oui = 1;
  if (this->oui().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oui().data(), static_cast<int>(this->_internal_oui().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.OnBoardRequest.oui");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_oui(), target);
  }

  // string product_class = 2;
  if (this->product_class().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_product_class().data(), static_cast<int>(this->_internal_product_class().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.OnBoardRequest.product_class");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_product_class(), target);
  }

  // string serial_number = 3;
  if (this->serial_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serial_number().data(), static_cast<int>(this->_internal_serial_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.OnBoardRequest.serial_number");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_serial_number(), target);
  }

  // string agent_supported_protocol_versions = 4;
  if (this->agent_supported_protocol_versions().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_supported_protocol_versions().data(), static_cast<int>(this->_internal_agent_supported_protocol_versions().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.OnBoardRequest.agent_supported_protocol_versions");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_agent_supported_protocol_versions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Notify.OnBoardRequest)
  return target;
}

size_t Notify_OnBoardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Notify.OnBoardRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oui = 1;
  if (this->oui().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oui());
  }

  // string product_class = 2;
  if (this->product_class().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_product_class());
  }

  // string serial_number = 3;
  if (this->serial_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serial_number());
  }

  // string agent_supported_protocol_versions = 4;
  if (this->agent_supported_protocol_versions().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_supported_protocol_versions());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notify_OnBoardRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Notify.OnBoardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Notify_OnBoardRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notify_OnBoardRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Notify.OnBoardRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Notify.OnBoardRequest)
    MergeFrom(*source);
  }
}

void Notify_OnBoardRequest::MergeFrom(const Notify_OnBoardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Notify.OnBoardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oui().size() > 0) {
    _internal_set_oui(from._internal_oui());
  }
  if (from.product_class().size() > 0) {
    _internal_set_product_class(from._internal_product_class());
  }
  if (from.serial_number().size() > 0) {
    _internal_set_serial_number(from._internal_serial_number());
  }
  if (from.agent_supported_protocol_versions().size() > 0) {
    _internal_set_agent_supported_protocol_versions(from._internal_agent_supported_protocol_versions());
  }
}

void Notify_OnBoardRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Notify.OnBoardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify_OnBoardRequest::CopyFrom(const Notify_OnBoardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Notify.OnBoardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify_OnBoardRequest::IsInitialized() const {
  return true;
}

void Notify_OnBoardRequest::InternalSwap(Notify_OnBoardRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  oui_.Swap(&other->oui_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  product_class_.Swap(&other->product_class_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  serial_number_.Swap(&other->serial_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  agent_supported_protocol_versions_.Swap(&other->agent_supported_protocol_versions_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Notify_OnBoardRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Notify::InitAsDefaultInstance() {
  ::usp::_Notify_default_instance_.event_ = const_cast< ::usp::Notify_Event*>(
      ::usp::Notify_Event::internal_default_instance());
  ::usp::_Notify_default_instance_.value_change_ = const_cast< ::usp::Notify_ValueChange*>(
      ::usp::Notify_ValueChange::internal_default_instance());
  ::usp::_Notify_default_instance_.obj_creation_ = const_cast< ::usp::Notify_ObjectCreation*>(
      ::usp::Notify_ObjectCreation::internal_default_instance());
  ::usp::_Notify_default_instance_.obj_deletion_ = const_cast< ::usp::Notify_ObjectDeletion*>(
      ::usp::Notify_ObjectDeletion::internal_default_instance());
  ::usp::_Notify_default_instance_.oper_complete_ = const_cast< ::usp::Notify_OperationComplete*>(
      ::usp::Notify_OperationComplete::internal_default_instance());
  ::usp::_Notify_default_instance_.on_board_req_ = const_cast< ::usp::Notify_OnBoardRequest*>(
      ::usp::Notify_OnBoardRequest::internal_default_instance());
}
class Notify::_Internal {
 public:
  static const ::usp::Notify_Event& event(const Notify* msg);
  static const ::usp::Notify_ValueChange& value_change(const Notify* msg);
  static const ::usp::Notify_ObjectCreation& obj_creation(const Notify* msg);
  static const ::usp::Notify_ObjectDeletion& obj_deletion(const Notify* msg);
  static const ::usp::Notify_OperationComplete& oper_complete(const Notify* msg);
  static const ::usp::Notify_OnBoardRequest& on_board_req(const Notify* msg);
};

const ::usp::Notify_Event&
Notify::_Internal::event(const Notify* msg) {
  return *msg->notification_.event_;
}
const ::usp::Notify_ValueChange&
Notify::_Internal::value_change(const Notify* msg) {
  return *msg->notification_.value_change_;
}
const ::usp::Notify_ObjectCreation&
Notify::_Internal::obj_creation(const Notify* msg) {
  return *msg->notification_.obj_creation_;
}
const ::usp::Notify_ObjectDeletion&
Notify::_Internal::obj_deletion(const Notify* msg) {
  return *msg->notification_.obj_deletion_;
}
const ::usp::Notify_OperationComplete&
Notify::_Internal::oper_complete(const Notify* msg) {
  return *msg->notification_.oper_complete_;
}
const ::usp::Notify_OnBoardRequest&
Notify::_Internal::on_board_req(const Notify* msg) {
  return *msg->notification_.on_board_req_;
}
void Notify::set_allocated_event(::usp::Notify_Event* event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_notification();
  if (event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(event);
    if (message_arena != submessage_arena) {
      event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    set_has_event();
    notification_.event_ = event;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Notify.event)
}
void Notify::set_allocated_value_change(::usp::Notify_ValueChange* value_change) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_notification();
  if (value_change) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(value_change);
    if (message_arena != submessage_arena) {
      value_change = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value_change, submessage_arena);
    }
    set_has_value_change();
    notification_.value_change_ = value_change;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Notify.value_change)
}
void Notify::set_allocated_obj_creation(::usp::Notify_ObjectCreation* obj_creation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_notification();
  if (obj_creation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(obj_creation);
    if (message_arena != submessage_arena) {
      obj_creation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, obj_creation, submessage_arena);
    }
    set_has_obj_creation();
    notification_.obj_creation_ = obj_creation;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Notify.obj_creation)
}
void Notify::set_allocated_obj_deletion(::usp::Notify_ObjectDeletion* obj_deletion) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_notification();
  if (obj_deletion) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(obj_deletion);
    if (message_arena != submessage_arena) {
      obj_deletion = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, obj_deletion, submessage_arena);
    }
    set_has_obj_deletion();
    notification_.obj_deletion_ = obj_deletion;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Notify.obj_deletion)
}
void Notify::set_allocated_oper_complete(::usp::Notify_OperationComplete* oper_complete) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_notification();
  if (oper_complete) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oper_complete);
    if (message_arena != submessage_arena) {
      oper_complete = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oper_complete, submessage_arena);
    }
    set_has_oper_complete();
    notification_.oper_complete_ = oper_complete;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Notify.oper_complete)
}
void Notify::set_allocated_on_board_req(::usp::Notify_OnBoardRequest* on_board_req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_notification();
  if (on_board_req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(on_board_req);
    if (message_arena != submessage_arena) {
      on_board_req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, on_board_req, submessage_arena);
    }
    set_has_on_board_req();
    notification_.on_board_req_ = on_board_req;
  }
  // @@protoc_insertion_point(field_set_allocated:usp.Notify.on_board_req)
}
Notify::Notify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.Notify)
}
Notify::Notify(const Notify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subscription_id().empty()) {
    subscription_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subscription_id(),
      GetArena());
  }
  send_resp_ = from.send_resp_;
  clear_has_notification();
  switch (from.notification_case()) {
    case kEvent: {
      _internal_mutable_event()->::usp::Notify_Event::MergeFrom(from._internal_event());
      break;
    }
    case kValueChange: {
      _internal_mutable_value_change()->::usp::Notify_ValueChange::MergeFrom(from._internal_value_change());
      break;
    }
    case kObjCreation: {
      _internal_mutable_obj_creation()->::usp::Notify_ObjectCreation::MergeFrom(from._internal_obj_creation());
      break;
    }
    case kObjDeletion: {
      _internal_mutable_obj_deletion()->::usp::Notify_ObjectDeletion::MergeFrom(from._internal_obj_deletion());
      break;
    }
    case kOperComplete: {
      _internal_mutable_oper_complete()->::usp::Notify_OperationComplete::MergeFrom(from._internal_oper_complete());
      break;
    }
    case kOnBoardReq: {
      _internal_mutable_on_board_req()->::usp::Notify_OnBoardRequest::MergeFrom(from._internal_on_board_req());
      break;
    }
    case NOTIFICATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:usp.Notify)
}

void Notify::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Notify_usp_2dmsg_2d1_2d1_2eproto.base);
  subscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  send_resp_ = false;
  clear_has_notification();
}

Notify::~Notify() {
  // @@protoc_insertion_point(destructor:usp.Notify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Notify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subscription_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_notification()) {
    clear_notification();
  }
}

void Notify::ArenaDtor(void* object) {
  Notify* _this = reinterpret_cast< Notify* >(object);
  (void)_this;
}
void Notify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Notify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Notify& Notify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Notify_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void Notify::clear_notification() {
// @@protoc_insertion_point(one_of_clear_start:usp.Notify)
  switch (notification_case()) {
    case kEvent: {
      if (GetArena() == nullptr) {
        delete notification_.event_;
      }
      break;
    }
    case kValueChange: {
      if (GetArena() == nullptr) {
        delete notification_.value_change_;
      }
      break;
    }
    case kObjCreation: {
      if (GetArena() == nullptr) {
        delete notification_.obj_creation_;
      }
      break;
    }
    case kObjDeletion: {
      if (GetArena() == nullptr) {
        delete notification_.obj_deletion_;
      }
      break;
    }
    case kOperComplete: {
      if (GetArena() == nullptr) {
        delete notification_.oper_complete_;
      }
      break;
    }
    case kOnBoardReq: {
      if (GetArena() == nullptr) {
        delete notification_.on_board_req_;
      }
      break;
    }
    case NOTIFICATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NOTIFICATION_NOT_SET;
}


void Notify::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.Notify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscription_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  send_resp_ = false;
  clear_notification();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Notify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subscription_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subscription_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.Notify.subscription_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool send_resp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          send_resp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Notify.Event event = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_event(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Notify.ValueChange value_change = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_value_change(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Notify.ObjectCreation obj_creation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_obj_creation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Notify.ObjectDeletion obj_deletion = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_obj_deletion(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Notify.OperationComplete oper_complete = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_oper_complete(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .usp.Notify.OnBoardRequest on_board_req = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_on_board_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Notify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.Notify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subscription_id = 1;
  if (this->subscription_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subscription_id().data(), static_cast<int>(this->_internal_subscription_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.Notify.subscription_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subscription_id(), target);
  }

  // bool send_resp = 2;
  if (this->send_resp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_send_resp(), target);
  }

  // .usp.Notify.Event event = 3;
  if (_internal_has_event()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::event(this), target, stream);
  }

  // .usp.Notify.ValueChange value_change = 4;
  if (_internal_has_value_change()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::value_change(this), target, stream);
  }

  // .usp.Notify.ObjectCreation obj_creation = 5;
  if (_internal_has_obj_creation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::obj_creation(this), target, stream);
  }

  // .usp.Notify.ObjectDeletion obj_deletion = 6;
  if (_internal_has_obj_deletion()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::obj_deletion(this), target, stream);
  }

  // .usp.Notify.OperationComplete oper_complete = 7;
  if (_internal_has_oper_complete()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::oper_complete(this), target, stream);
  }

  // .usp.Notify.OnBoardRequest on_board_req = 8;
  if (_internal_has_on_board_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::on_board_req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.Notify)
  return target;
}

size_t Notify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.Notify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subscription_id = 1;
  if (this->subscription_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subscription_id());
  }

  // bool send_resp = 2;
  if (this->send_resp() != 0) {
    total_size += 1 + 1;
  }

  switch (notification_case()) {
    // .usp.Notify.Event event = 3;
    case kEvent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *notification_.event_);
      break;
    }
    // .usp.Notify.ValueChange value_change = 4;
    case kValueChange: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *notification_.value_change_);
      break;
    }
    // .usp.Notify.ObjectCreation obj_creation = 5;
    case kObjCreation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *notification_.obj_creation_);
      break;
    }
    // .usp.Notify.ObjectDeletion obj_deletion = 6;
    case kObjDeletion: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *notification_.obj_deletion_);
      break;
    }
    // .usp.Notify.OperationComplete oper_complete = 7;
    case kOperComplete: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *notification_.oper_complete_);
      break;
    }
    // .usp.Notify.OnBoardRequest on_board_req = 8;
    case kOnBoardReq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *notification_.on_board_req_);
      break;
    }
    case NOTIFICATION_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Notify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.Notify)
  GOOGLE_DCHECK_NE(&from, this);
  const Notify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Notify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.Notify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.Notify)
    MergeFrom(*source);
  }
}

void Notify::MergeFrom(const Notify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.Notify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscription_id().size() > 0) {
    _internal_set_subscription_id(from._internal_subscription_id());
  }
  if (from.send_resp() != 0) {
    _internal_set_send_resp(from._internal_send_resp());
  }
  switch (from.notification_case()) {
    case kEvent: {
      _internal_mutable_event()->::usp::Notify_Event::MergeFrom(from._internal_event());
      break;
    }
    case kValueChange: {
      _internal_mutable_value_change()->::usp::Notify_ValueChange::MergeFrom(from._internal_value_change());
      break;
    }
    case kObjCreation: {
      _internal_mutable_obj_creation()->::usp::Notify_ObjectCreation::MergeFrom(from._internal_obj_creation());
      break;
    }
    case kObjDeletion: {
      _internal_mutable_obj_deletion()->::usp::Notify_ObjectDeletion::MergeFrom(from._internal_obj_deletion());
      break;
    }
    case kOperComplete: {
      _internal_mutable_oper_complete()->::usp::Notify_OperationComplete::MergeFrom(from._internal_oper_complete());
      break;
    }
    case kOnBoardReq: {
      _internal_mutable_on_board_req()->::usp::Notify_OnBoardRequest::MergeFrom(from._internal_on_board_req());
      break;
    }
    case NOTIFICATION_NOT_SET: {
      break;
    }
  }
}

void Notify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notify::CopyFrom(const Notify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.Notify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notify::IsInitialized() const {
  return true;
}

void Notify::InternalSwap(Notify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subscription_id_.Swap(&other->subscription_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(send_resp_, other->send_resp_);
  swap(notification_, other->notification_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Notify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NotifyResp::InitAsDefaultInstance() {
}
class NotifyResp::_Internal {
 public:
};

NotifyResp::NotifyResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:usp.NotifyResp)
}
NotifyResp::NotifyResp(const NotifyResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subscription_id().empty()) {
    subscription_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subscription_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:usp.NotifyResp)
}

void NotifyResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotifyResp_usp_2dmsg_2d1_2d1_2eproto.base);
  subscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

NotifyResp::~NotifyResp() {
  // @@protoc_insertion_point(destructor:usp.NotifyResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NotifyResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subscription_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NotifyResp::ArenaDtor(void* object) {
  NotifyResp* _this = reinterpret_cast< NotifyResp* >(object);
  (void)_this;
}
void NotifyResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotifyResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotifyResp& NotifyResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotifyResp_usp_2dmsg_2d1_2d1_2eproto.base);
  return *internal_default_instance();
}


void NotifyResp::Clear() {
// @@protoc_insertion_point(message_clear_start:usp.NotifyResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscription_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotifyResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subscription_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subscription_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "usp.NotifyResp.subscription_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NotifyResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:usp.NotifyResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subscription_id = 1;
  if (this->subscription_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subscription_id().data(), static_cast<int>(this->_internal_subscription_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usp.NotifyResp.subscription_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subscription_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usp.NotifyResp)
  return target;
}

size_t NotifyResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usp.NotifyResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subscription_id = 1;
  if (this->subscription_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subscription_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usp.NotifyResp)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NotifyResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usp.NotifyResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usp.NotifyResp)
    MergeFrom(*source);
  }
}

void NotifyResp::MergeFrom(const NotifyResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usp.NotifyResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscription_id().size() > 0) {
    _internal_set_subscription_id(from._internal_subscription_id());
  }
}

void NotifyResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usp.NotifyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyResp::CopyFrom(const NotifyResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usp.NotifyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyResp::IsInitialized() const {
  return true;
}

void NotifyResp::InternalSwap(NotifyResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subscription_id_.Swap(&other->subscription_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyResp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace usp
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::usp::Msg* Arena::CreateMaybeMessage< ::usp::Msg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Msg >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Header* Arena::CreateMaybeMessage< ::usp::Header >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Header >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Body* Arena::CreateMaybeMessage< ::usp::Body >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Body >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Request* Arena::CreateMaybeMessage< ::usp::Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Request >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Response* Arena::CreateMaybeMessage< ::usp::Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Response >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Error_ParamError* Arena::CreateMaybeMessage< ::usp::Error_ParamError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Error_ParamError >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Error* Arena::CreateMaybeMessage< ::usp::Error >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Error >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Get* Arena::CreateMaybeMessage< ::usp::Get >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Get >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetResp_RequestedPathResult* Arena::CreateMaybeMessage< ::usp::GetResp_RequestedPathResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetResp_RequestedPathResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::usp::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetResp_ResolvedPathResult_ResultParamsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetResp_ResolvedPathResult* Arena::CreateMaybeMessage< ::usp::GetResp_ResolvedPathResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetResp_ResolvedPathResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetResp* Arena::CreateMaybeMessage< ::usp::GetResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetResp >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetSupportedDM* Arena::CreateMaybeMessage< ::usp::GetSupportedDM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetSupportedDM >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetSupportedDMResp_RequestedObjectResult* Arena::CreateMaybeMessage< ::usp::GetSupportedDMResp_RequestedObjectResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetSupportedDMResp_RequestedObjectResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetSupportedDMResp_SupportedObjectResult* Arena::CreateMaybeMessage< ::usp::GetSupportedDMResp_SupportedObjectResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetSupportedDMResp_SupportedObjectResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetSupportedDMResp_SupportedParamResult* Arena::CreateMaybeMessage< ::usp::GetSupportedDMResp_SupportedParamResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetSupportedDMResp_SupportedParamResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetSupportedDMResp_SupportedCommandResult* Arena::CreateMaybeMessage< ::usp::GetSupportedDMResp_SupportedCommandResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetSupportedDMResp_SupportedCommandResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetSupportedDMResp_SupportedEventResult* Arena::CreateMaybeMessage< ::usp::GetSupportedDMResp_SupportedEventResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetSupportedDMResp_SupportedEventResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetSupportedDMResp* Arena::CreateMaybeMessage< ::usp::GetSupportedDMResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetSupportedDMResp >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetInstances* Arena::CreateMaybeMessage< ::usp::GetInstances >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetInstances >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetInstancesResp_RequestedPathResult* Arena::CreateMaybeMessage< ::usp::GetInstancesResp_RequestedPathResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetInstancesResp_RequestedPathResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse* Arena::CreateMaybeMessage< ::usp::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetInstancesResp_CurrInstance_UniqueKeysEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetInstancesResp_CurrInstance* Arena::CreateMaybeMessage< ::usp::GetInstancesResp_CurrInstance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetInstancesResp_CurrInstance >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetInstancesResp* Arena::CreateMaybeMessage< ::usp::GetInstancesResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetInstancesResp >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetSupportedProtocol* Arena::CreateMaybeMessage< ::usp::GetSupportedProtocol >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetSupportedProtocol >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::GetSupportedProtocolResp* Arena::CreateMaybeMessage< ::usp::GetSupportedProtocolResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::GetSupportedProtocolResp >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Add_CreateObject* Arena::CreateMaybeMessage< ::usp::Add_CreateObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Add_CreateObject >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Add_CreateParamSetting* Arena::CreateMaybeMessage< ::usp::Add_CreateParamSetting >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Add_CreateParamSetting >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Add* Arena::CreateMaybeMessage< ::usp::Add >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Add >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure* Arena::CreateMaybeMessage< ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationFailure >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse* Arena::CreateMaybeMessage< ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess_UniqueKeysEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess* Arena::CreateMaybeMessage< ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::AddResp_CreatedObjectResult_OperationStatus_OperationSuccess >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::AddResp_CreatedObjectResult_OperationStatus* Arena::CreateMaybeMessage< ::usp::AddResp_CreatedObjectResult_OperationStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::AddResp_CreatedObjectResult_OperationStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::AddResp_CreatedObjectResult* Arena::CreateMaybeMessage< ::usp::AddResp_CreatedObjectResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::AddResp_CreatedObjectResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::AddResp_ParameterError* Arena::CreateMaybeMessage< ::usp::AddResp_ParameterError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::AddResp_ParameterError >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::AddResp* Arena::CreateMaybeMessage< ::usp::AddResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::AddResp >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Delete* Arena::CreateMaybeMessage< ::usp::Delete >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Delete >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure* Arena::CreateMaybeMessage< ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationFailure >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess* Arena::CreateMaybeMessage< ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::DeleteResp_DeletedObjectResult_OperationStatus_OperationSuccess >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::DeleteResp_DeletedObjectResult_OperationStatus* Arena::CreateMaybeMessage< ::usp::DeleteResp_DeletedObjectResult_OperationStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::DeleteResp_DeletedObjectResult_OperationStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::DeleteResp_DeletedObjectResult* Arena::CreateMaybeMessage< ::usp::DeleteResp_DeletedObjectResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::DeleteResp_DeletedObjectResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::DeleteResp_UnaffectedPathError* Arena::CreateMaybeMessage< ::usp::DeleteResp_UnaffectedPathError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::DeleteResp_UnaffectedPathError >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::DeleteResp* Arena::CreateMaybeMessage< ::usp::DeleteResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::DeleteResp >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Set_UpdateObject* Arena::CreateMaybeMessage< ::usp::Set_UpdateObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Set_UpdateObject >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Set_UpdateParamSetting* Arena::CreateMaybeMessage< ::usp::Set_UpdateParamSetting >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Set_UpdateParamSetting >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Set* Arena::CreateMaybeMessage< ::usp::Set >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Set >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure* Arena::CreateMaybeMessage< ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationFailure >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess* Arena::CreateMaybeMessage< ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::SetResp_UpdatedObjectResult_OperationStatus_OperationSuccess >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::SetResp_UpdatedObjectResult_OperationStatus* Arena::CreateMaybeMessage< ::usp::SetResp_UpdatedObjectResult_OperationStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::SetResp_UpdatedObjectResult_OperationStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::SetResp_UpdatedObjectResult* Arena::CreateMaybeMessage< ::usp::SetResp_UpdatedObjectResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::SetResp_UpdatedObjectResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::SetResp_UpdatedInstanceFailure* Arena::CreateMaybeMessage< ::usp::SetResp_UpdatedInstanceFailure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::SetResp_UpdatedInstanceFailure >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::usp::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::SetResp_UpdatedInstanceResult_UpdatedParamsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::SetResp_UpdatedInstanceResult* Arena::CreateMaybeMessage< ::usp::SetResp_UpdatedInstanceResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::SetResp_UpdatedInstanceResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::SetResp_ParameterError* Arena::CreateMaybeMessage< ::usp::SetResp_ParameterError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::SetResp_ParameterError >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::SetResp* Arena::CreateMaybeMessage< ::usp::SetResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::SetResp >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Operate_InputArgsEntry_DoNotUse* Arena::CreateMaybeMessage< ::usp::Operate_InputArgsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Operate_InputArgsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Operate* Arena::CreateMaybeMessage< ::usp::Operate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Operate >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse* Arena::CreateMaybeMessage< ::usp::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::OperateResp_OperationResult_OutputArgs_OutputArgsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::OperateResp_OperationResult_OutputArgs* Arena::CreateMaybeMessage< ::usp::OperateResp_OperationResult_OutputArgs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::OperateResp_OperationResult_OutputArgs >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::OperateResp_OperationResult_CommandFailure* Arena::CreateMaybeMessage< ::usp::OperateResp_OperationResult_CommandFailure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::OperateResp_OperationResult_CommandFailure >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::OperateResp_OperationResult* Arena::CreateMaybeMessage< ::usp::OperateResp_OperationResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::OperateResp_OperationResult >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::OperateResp* Arena::CreateMaybeMessage< ::usp::OperateResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::OperateResp >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_Event_ParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::usp::Notify_Event_ParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_Event_ParamsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_Event* Arena::CreateMaybeMessage< ::usp::Notify_Event >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_Event >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_ValueChange* Arena::CreateMaybeMessage< ::usp::Notify_ValueChange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_ValueChange >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse* Arena::CreateMaybeMessage< ::usp::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_ObjectCreation_UniqueKeysEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_ObjectCreation* Arena::CreateMaybeMessage< ::usp::Notify_ObjectCreation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_ObjectCreation >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_ObjectDeletion* Arena::CreateMaybeMessage< ::usp::Notify_ObjectDeletion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_ObjectDeletion >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse* Arena::CreateMaybeMessage< ::usp::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_OperationComplete_OutputArgs_OutputArgsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_OperationComplete_OutputArgs* Arena::CreateMaybeMessage< ::usp::Notify_OperationComplete_OutputArgs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_OperationComplete_OutputArgs >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_OperationComplete_CommandFailure* Arena::CreateMaybeMessage< ::usp::Notify_OperationComplete_CommandFailure >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_OperationComplete_CommandFailure >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_OperationComplete* Arena::CreateMaybeMessage< ::usp::Notify_OperationComplete >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_OperationComplete >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify_OnBoardRequest* Arena::CreateMaybeMessage< ::usp::Notify_OnBoardRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify_OnBoardRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::Notify* Arena::CreateMaybeMessage< ::usp::Notify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::Notify >(arena);
}
template<> PROTOBUF_NOINLINE ::usp::NotifyResp* Arena::CreateMaybeMessage< ::usp::NotifyResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::usp::NotifyResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
